{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///demo/app.module.ts","webpack:///demo/home/home.ts","webpack:///demo/home/home.html","webpack:///demo/main.ts","webpack:///modules/components/dropdown/index.ts","webpack:///modules/components/dropdown/tag-input-dropdown.template.html","webpack:///modules/components/dropdown/tag-input-dropdown.component.ts","webpack:///modules/components/icon/icon.ts","webpack:///modules/components/icon/icon.html","webpack:///modules/components/icon/index.ts","webpack:///modules/components/index.ts","webpack:///modules/components/tag-input-form/index.ts","webpack:///modules/components/tag-input-form/tag-input-form.component.ts","webpack:///modules/components/tag-input-form/tag-input-form.template.html","webpack:///modules/components/tag-input/animations.ts","webpack:///modules/components/tag-input/index.ts","webpack:///modules/components/tag-input/tag-input.ts","webpack:///modules/components/tag-input/tag-input.template.html","webpack:///modules/components/tag/index.ts","webpack:///modules/components/tag/tag-ripple.component.ts","webpack:///modules/components/tag/tag.component.ts","webpack:///modules/components/tag/tag.template.html","webpack:///modules/core/accessor.ts","webpack:///modules/core/constants/index.ts","webpack:///modules/core/helpers/listen.ts","webpack:///modules/core/pipes/highlight.pipe.ts","webpack:///modules/core/providers/drag-provider.ts","webpack:///modules/core/providers/options-provider.ts","webpack:///modules/defaults.ts","webpack:///modules/index.ts","webpack:///modules/tag-input.module.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","withDefaults","tagInput","placeholder","AppModule","imports","declarations","bootstrap","entryComponents","Home","http","disabled","items","inputText","itemsAsObjects","name","readonly","autocompleteItems","autocompleteItemsAsObjects","value","extra","dragAndDropExample","dragAndDropObjects","display","dragAndDropStrings","requestAutocompleteItems","text","url","get","pipe","map","item","full_name","requestAutocompleteItemsFake","options","undefined","asyncErrorMessages","isNan","validators","startsWithAt","endsWith$","asyncValidators","validateAsync","errorMessages","form","group","chips","console","log","control","charAt","length","result","isNaN","setTimeout","tag","confirm","window","push","onSelect","onTagEdited","onTextChange","onBlur","onFocus","onValidationError","insertInputTag","selector","styleUrls","templateUrl","bootstrapModule","ngZoneEventCoalescing","err","error","TagInputDropdown","injector","offset","dropdown","focusFirstElement","showDropdownIfEmpty","minimumTextLength","limitItemsTo","displayBy","identifyBy","matchingFn","appendToBody","keepOpen","dynamicUpdate","zIndex","_autocompleteItems","show","maxItemsReached","maxItems","getFormValue","hasMinimumText","trim","position","calculatePosition","getMatchingItems","hasItems","isHidden","isVisible","isDisabled","disable","shouldShow","shouldHide","autocompleteObservable","getItemsFromObservable","hide","setItems","requestAdding","createTagModel","onAddingRequested","resetItems","setLoadingState","subscribeFn","data","populateItems","subscribe","onItemClicked","onHide","DEBOUNCE_TIME","KEEP_OPEN","asObservable","inputForm","getElementPosition","menu","updatePosition","formValue","toString","dupesAllowed","allowDupes","filter","hasValue","tags","some","model","slice","state","isLoading","dropdownState","menuState","selectedItem","DeleteIconComponent","TagInputForm","onSubmit","onKeyup","onKeydown","inputTextChange","tabindex","setValidators","setAsyncValidators","changes","firstChange","currentValue","controls","enable","doc","document","activeElement","input","nativeElement","messages","Object","hasError","dirty","valid","focus","blur","getBoundingClientRect","parentElement","removeChild","$event","key","submit","emit","preventDefault","setValue","onKeyDown","onKeyUp","animations","opacity","transform","dragProvider","DragEvent","CUSTOM_ACCESSOR","provide","useExisting","TagInputComponent","multi","renderer","separatorKeys","separatorKeyCodes","secondaryPlaceholder","onlyFromAutocomplete","theme","onTextChangeDebounce","inputId","inputClass","clearOnBlur","hideForm","addOnBlur","addOnPaste","pasteSplitPattern","blinkIfDupe","removable","editable","modelAsStrings","trimTags","ripple","tabIndex","dragZone","onRemoving","onAdding","animationDuration","onAdd","onRemove","onPaste","listeners","inputTextValue","errors","appendTag","index","createTag","val","isTagValid","fromAutocomplete","getItemDisplay","dupe","findDupe","find","getItemValue","blink","isFromAutocomplete","assertions","Boolean","onPasteCallback","getText","isIE","clipboardData","type","getData","requests","split","setInputValue","resetInput","all","setUpKeypressListeners","setupSeparatorKeysListener","setUpInputKeydownListeners","observers","setUpTextChangeSubscriber","setUpOnBlurSubscriber","setUpOnPasteListener","statusChanges$","statusChanges","status","getErrorMessages","isProgressBarVisible$","destroy","hasReachedMaxItems","warn","setAnimationMetadata","removeItem","giveupFocus","reject","addItem","isReadonly","selectedTag","eventName","forEach","listener","call","event","keyCode","which","shiftKey","DELETE","indexOf","onRemoveRequested","SWITCH_PREV","moveToTag","SWITCH_NEXT","TAB","isFirstTag","isLastTag","emitEvent","getControl","applyFocus","displayAutocomplete","getState","selectItem","onTouched","hasErrors","isInputFocused","template","templates","first","menuTemplate","stopPropagation","zone","setSender","setDraggedItem","setState","dragging","dropping","setReceiver","getDraggedItem","onTagDropped","isReceiver","receiver","isDropping","changedElement","direction","isLast","isFirst","stopSwitch","getTagIndex","getTagAtIndex","select","last","toArray","findIndex","getItemsWithout","reset","appendItem","statusUpdate$","statusUpdate","useSeparatorKeys","hasKeyCode","hasKey","isIMEProcessing","isCorrectKey","listen","valueChanges","filterFn","animationMetadata","params","onDragOver","onFormSubmit","fireEvents","providers","descendants","TagRipple","width","borderRadius","styles","navigator","userAgent","vendor","isChrome","test","TagComponent","element","cdRef","editing","rippleState","moving","disableEditMode","classList","add","remove","activateEditMode","target","innerText","getContentEditableText","setContentEditableText","storeNewValue","detectChanges","getContentEditable","getDisplayValue","exists","hasId","canAddTag","querySelector","hasRipple","toggleEditMode","TagModelClass","isObject","obj","TagInputAccessor","_items","defaults","_onTouchedCallback","fn","_onChangeCallback","fromDropdown","property","PLACEHOLDER","SECONDARY_PLACEHOLDER","KEYDOWN","KEYUP","FOCUS","MAX_ITEMS_WARNING","ACTIONS_KEYS","KEY_PRESS_ACTIONS","DRAG_AND_DROP_KEY","NEXT","PREV","listenerType","action","condition","hasOwnProperty","escape","s","replace","HighlightPipe","arg","regex","RegExp","DragProvider","dataTransfer","setData","JSON","stringify","parse","sender","indexDragged","indexDropped","onDragEnd","OptionsProvider","Infinity","enter","leave","targetValue","toLowerCase","optionsProvider","TagInputModule","setOptions","useValue"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TagInputModule } from '../modules';\r\nimport { Home } from './home/home';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nTagInputModule.withDefaults({\r\n    tagInput: {\r\n        placeholder: 'Add new tag'\r\n    }\r\n});\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TagInputModule\r\n    ],\r\n    declarations: [Home],\r\n    bootstrap: [Home],\r\n    entryComponents: [Home]\r\n})\r\nexport class AppModule { }\r\n","import {Component} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {filter, map} from 'rxjs/operators';\r\nimport {Observable, of} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    styleUrls: ['./home.scss'],\r\n    templateUrl: './home.html'\r\n})\r\nexport class Home {\r\n    form: FormGroup;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.form = new FormBuilder().group({\r\n            chips: [['chip'], []]\r\n        });\r\n    }\r\n\r\n    disabled = true;\r\n\r\n    items = ['Javascript', 'Typescript'];\r\n\r\n    inputText = 'text';\r\n\r\n    itemsAsObjects = [{id: 0, name: 'Angular', readonly: true}, {id: 1, name: 'React'}];\r\n\r\n    autocompleteItems = ['Javascript', 'Typescript', 'Rust', 'Go'];\r\n\r\n    autocompleteItemsAsObjects = [\r\n        {value: 'Item1', id: 0, extra: 0},\r\n        {value: 'item2', id: 1, extra: 1},\r\n        'item3'\r\n    ];\r\n\r\n    dragAndDropExample = ['C#', 'Java'];\r\n\r\n    dragAndDropObjects = [{display: 'Javascript', value: 'Javascript'}, {display: 'Typescript', value: 'Typescript'}];\r\n    dragAndDropStrings = ['CoffeScript', 'Scala.js'];\r\n\r\n    public requestAutocompleteItems = (text: string): Observable<any> => {\r\n        const url = `https://api.github.com/search/repositories?q=${text}`;\r\n        return this.http\r\n            .get<any>(url)\r\n            .pipe(map(items => items.map(item => item.full_name)));\r\n    }\r\n\r\n    public requestAutocompleteItemsFake = (text: string): Observable<string[]> => {\r\n        return of([\r\n            'item1', 'item2', 'item3'\r\n        ]);\r\n    }\r\n\r\n    public options = {\r\n        readonly: undefined,\r\n        placeholder: '+ Tag'\r\n    };\r\n\r\n    public onAdd(item) {\r\n        console.log('tag added: value is ' + item);\r\n    }\r\n\r\n    public onRemove(item) {\r\n        console.log('tag removed: value is ' + item);\r\n    }\r\n\r\n    public onSelect(item) {\r\n        console.log('tag selected: value is ' + item);\r\n    }\r\n\r\n    public onFocus(item) {\r\n        console.log('input focused: current value is ' + item);\r\n    }\r\n\r\n    public onTextChange(text) {\r\n        console.log('text changed: value is ' + text);\r\n    }\r\n\r\n    public onBlur(item) {\r\n        console.log('input blurred: current value is ' + item);\r\n    }\r\n\r\n    public onTagEdited(item) {\r\n        console.log('tag edited: current value is ' + item);\r\n    }\r\n\r\n    public onValidationError(item) {\r\n        console.log('invalid tag ' + item);\r\n    }\r\n\r\n    public transform(value: string): Observable<object> {\r\n        const item = {display: `@${value}`, value: `@${value}`};\r\n        return of(item);\r\n    }\r\n\r\n    private startsWithAt(control: FormControl) {\r\n        if (control.value.charAt(0) !== '@') {\r\n            return {\r\n                'startsWithAt@': true\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private endsWith$(control: FormControl) {\r\n        if (control.value.charAt(control.value.length - 1) !== '$') {\r\n            return {\r\n                'endsWith$': true\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private validateAsync(control: FormControl): Promise<any> {\r\n        return new Promise(resolve => {\r\n            const value = control.value;\r\n            const result: any = isNaN(value) ? {\r\n                isNan: true\r\n            } : null;\r\n\r\n            setTimeout(() => {\r\n                resolve(result);\r\n            }, 400);\r\n        });\r\n    }\r\n\r\n    public asyncErrorMessages = {\r\n        isNan: 'Please only add numbers'\r\n    };\r\n\r\n    public validators = [this.startsWithAt, this.endsWith$];\r\n\r\n    public asyncValidators = [this.validateAsync];\r\n\r\n    public errorMessages = {\r\n        'startsWithAt@': 'Your items need to start with \\'@\\'',\r\n        'endsWith$': 'Your items need to end with \\'$\\''\r\n    };\r\n\r\n    public onAdding(tag): Observable<any> {\r\n        const confirm = window.confirm('Do you really want to add this tag?');\r\n        return of(tag)\r\n            .pipe(filter(() => confirm));\r\n    }\r\n\r\n    public onRemoving(tag): Observable<any> {\r\n        const confirm = window.confirm('Do you really want to remove this tag?');\r\n        return of(tag)\r\n            .pipe(filter(() => confirm));\r\n    }\r\n\r\n    public asyncOnAdding(tag): Observable<any> {\r\n        const confirm = window.confirm('Do you really want to add this tag?');\r\n        return of(tag)\r\n            .pipe(filter(() => confirm));\r\n    }\r\n\r\n    public insertInputTag(): void {\r\n        if (this.inputText) {\r\n            this.items.push(this.inputText);\r\n\r\n            this.inputText = '';\r\n        }\r\n    }\r\n}\r\n","<main>\r\n    <div class=\"home-container\">\r\n        <div>\r\n            <h3>Simple Input with two items</h3>\r\n            <tag-input [(ngModel)]=\"items\"\r\n                       (onSelect)=\"onSelect($event)\"\r\n                       [modelAsStrings]=\"true\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Partially editable input with two items as objects</h3>\r\n            <tag-input [(ngModel)]=\"itemsAsObjects\"\r\n                       [identifyBy]=\"'id'\"\r\n                       [displayBy]=\"'name'\"></tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Simple Input with not removable items</h3>\r\n            <tag-input [ngModel]=\"items\" [removable]=\"false\"></tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Simple Input with editable items</h3>\r\n            <tag-input [(ngModel)]=\"items\"\r\n                       [editable]=\"true\"\r\n                       (onTagEdited)=\"onTagEdited($event)\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Simple Input with editable items as objects</h3>\r\n            {{itemsAsObjects|json}}\r\n            <tag-input [(ngModel)]=\"itemsAsObjects\"\r\n                       [editable]=\"true\"\r\n                       [identifyBy]=\"'id'\"\r\n                       [displayBy]=\"'name'\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Input tag that allows max 3 tags</h3>\r\n            <tag-input [ngModel]=\"['Javascript', 'Typescript']\"\r\n                       [maxItems]=\"3\"\r\n                       [ripple]=\"false\"\r\n                       placeholder=\"Insert a new item\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>An input which requires all tags to start with '@' and end with '$'</h3>\r\n            <tag-input [ngModel]=\"['@item']\"\r\n                       [errorMessages]=\"errorMessages\"\r\n                       [validators]=\"validators\">\r\n                <tag-input-dropdown [autocompleteItems]=\"['@item$', 'item']\">\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>An input which will transform the value of all added tags prepending '@' to the tag</h3>\r\n            <tag-input [ngModel]=\"['@item']\" [onAdding]=\"transform\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags within an autocomplete component (clear on blur events)</h3>\r\n            <tag-input [ngModel]=\"['@item']\"\r\n                       [clearOnBlur]=\"true\">\r\n                <tag-input-dropdown [focusFirstElement]=\"true\" [autocompleteItems]=\"autocompleteItems\">\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags accepting only items from an autocomplete</h3>\r\n            <tag-input [ngModel]=\"['@item']\"\r\n                       [onlyFromAutocomplete]=\"true\">\r\n                <tag-input-dropdown [showDropdownIfEmpty]=\"true\"\r\n                                    [dynamicUpdate]=\"false\"\r\n                                    [focusFirstElement]=\"true\"\r\n                                    [displayBy]=\"'value'\"\r\n                                    [identifyBy]=\"'id'\"\r\n                                    [autocompleteItems]=\"autocompleteItemsAsObjects\">\r\n                    <ng-template let-item=\"item\" let-index=\"index\">\r\n                        ({{ index }}) {{ item.id }}: {{ item.value }}\r\n                    </ng-template>\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags accepting only items from an autocomplete using a remote endpoint</h3>\r\n            <tag-input [ngModel]=\"[]\"\r\n                       [placeholder]=\"'Enter a new repo'\"\r\n                       [onTextChangeDebounce]=\"500\"\r\n                       [secondaryPlaceholder]=\"'Search in Github'\"\r\n                       [onlyFromAutocomplete]=\"true\">\r\n                <tag-input-dropdown\r\n                    [autocompleteObservable]=\"requestAutocompleteItems\"\r\n                    [minimumTextLength]=\"0\">\r\n                    <ng-template let-item=\"item\" let-index=\"index\">\r\n                        {{ item.display }}\r\n                    </ng-template>\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags accepting only items from an autocomplete using an observable and showing dropdown without entering text</h3>\r\n            <tag-input [ngModel]=\"items\" [onlyFromAutocomplete]=\"true\">\r\n                <tag-input-dropdown\r\n                    [showDropdownIfEmpty]=\"true\"\r\n                    [autocompleteObservable]=\"requestAutocompleteItemsFake\">\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags dropdown with last provided</h3>\r\n            <tag-input [ngModel]=\"[]\"\r\n                       [placeholder]=\"'Enter a new repo'\"\r\n                       [secondaryPlaceholder]=\"'Search in Github'\"\r\n                       [onlyFromAutocomplete]=\"true\">\r\n                <tag-input-dropdown [autocompleteObservable]=\"requestAutocompleteItems\">\r\n                    <ng-template let-item=\"item\" let-index=\"index\" let-last=\"last\">\r\n                        ({{ index }}) {{ item.id }}: {{ item.value }} # {{ last }}\r\n                    </ng-template>\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>An input which allows adding items by pressing the key \"space\" of your keyboard</h3>\r\n            <tag-input [ngModel]=\"['@item']\"\r\n                       [inputClass]=\"'myinput'\"\r\n                       [inputId]=\"'myinputId'\"\r\n                       [separatorKeyCodes]=\"[32, 188]\"\r\n            >\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags custom template</h3>\r\n            <tag-input [ngModel]=\"['@item']\"\r\n                       [modelAsStrings]=\"true\"\r\n                       #input\r\n                       (onTextChange)=\"onTextChange($event)\">\r\n                <ng-template item-template let-item=\"item\" let-index=\"index\">\r\n                    <span>\r\n                        item: {{ item }}\r\n                    </span>\r\n\r\n                    <span (click)=\"input.removeItem(item, index)\" class=\"ng2-tag__remove-button\">\r\n                        x\r\n                    </span>\r\n                </ng-template>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div style=\"z-index: 1100; background: #fafafa\">\r\n            <h3>Input with custom item template and custom dropdown item template</h3>\r\n            {{ itemsAsObjects | json }}\r\n            <tag-input [(ngModel)]=\"itemsAsObjects\"\r\n                       [displayBy]=\"'name'\"\r\n                       [identifyBy]=\"'id'\">\r\n                <ng-template let-item=\"item\">\r\n                    tag: {{ item.name }}\r\n                </ng-template>\r\n                <tag-input-dropdown\r\n                    [autocompleteItems]=\"autocompleteItemsAsObjects\"\r\n                    [dynamicUpdate]=\"false\"\r\n                    [zIndex]=\"10000\"\r\n                    [displayBy]=\"'value'\"\r\n                    [identifyBy]=\"'id'\">\r\n                    <ng-template let-item=\"item\" let-index=\"index\">\r\n                        dropdown: {{ item.value }}\r\n                    </ng-template>\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags within a form element with outputs</h3>\r\n            <form>\r\n                <tag-input\r\n                    (onBlur)=\"onBlur($event)\"\r\n                    (onFocus)=\"onFocus($event)\"\r\n                    (onTextChange)=\"onTextChange($event)\"\r\n                    (onValidationError)=\"onValidationError($event)\"\r\n                    [ngModel]=\"['@item']\"\r\n                    name=\"items\"></tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags within a form group</h3>\r\n            <form [formGroup]=\"form\">\r\n                <tag-input\r\n                    [disable]=\"true\"\r\n                    [formControlName]=\"'chips'\"\r\n                    name=\"items\">\r\n                </tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags with theme minimal</h3>\r\n            <form>\r\n                <tag-input\r\n                    [theme]=\"'minimal'\"\r\n                    [ngModel]=\"['@item']\"\r\n                    name=\"items\"></tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags with theme dark and pasteable items</h3>\r\n            <form>\r\n                <tag-input\r\n                    [addOnPaste]=\"true\"\r\n                    [pasteSplitPattern]=\"'-'\"\r\n                    [theme]=\"'dark'\"\r\n                    [ngModel]=\"['@item']\"\r\n                    name=\"items\"></tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags with Bootstrap theme</h3>\r\n            <form>\r\n                <tag-input\r\n                    [theme]=\"'bootstrap'\"\r\n                    [ngModel]=\"['@item']\"\r\n                    name=\"items\">\r\n                </tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags with user-defined Foundation theme</h3>\r\n            <tag-input [ngModel]=\"items\"\r\n                       [theme]=\"'foundation-theme'\"\r\n                       [modelAsStrings]=\"true\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags with Bootstrap 3 (info) theme</h3>\r\n            <form>\r\n                <tag-input\r\n                    [theme]=\"'bootstrap3-info'\"\r\n                    [ngModel]=\"['@item']\"\r\n                    name=\"items\">\r\n                </tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Simple Input that allows dupes</h3>\r\n            <tag-input [(ngModel)]=\"items\" [allowDupes]=\"true\"></tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Input with two-way data binding for its input text</h3>\r\n\r\n            <input [(ngModel)]=\"inputText\" (keyup.enter)=\"insertInputTag()\"/>\r\n\r\n            <tag-input [(ngModel)]=\"items\" [(inputText)]=\"inputText\"></tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Disabled tag input</h3>\r\n\r\n            Disable: <input type=\"checkbox\" [(ngModel)]=\"disabled\" />\r\n\r\n            <tag-input [ngModel]=\"items\"\r\n                       [disable]=\"disabled\">\r\n                <tag-input-dropdown [autocompleteItems]=\"autocompleteItems\">\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Drag and drop</h3>\r\n            <tag-input  [(ngModel)]=\"dragAndDropExample\"\r\n                        [modelAsStrings]=\"true\"\r\n                        [dragZone]=\"'zone1'\"\r\n                        [editable]=\"true\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Drag and drop (as string) can be moved to another tag-input (to the next)</h3>\r\n            <tag-input  [(ngModel)]=\"dragAndDropStrings\"\r\n                        [modelAsStrings]=\"true\"\r\n                        [dragZone]=\"'zone1'\"\r\n                        [editable]=\"true\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Drag and drop (as object) can be moved to another tag-input (to the previous)</h3>\r\n            <tag-input  [(ngModel)]=\"dragAndDropObjects\"\r\n                        [dragZone]=\"'zone1'\"\r\n                        [editable]=\"true\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Confirm adding and removing tags with Observables</h3>\r\n            <tag-input [ngModel]=\"['item1']\"\r\n                       [dragZone]=\"'zone1'\"\r\n                       [modelAsStrings]=\"true\"\r\n                       [onRemoving]=\"onRemoving\"\r\n                       [onAdding]=\"onAdding\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Form using an async validator</h3>\r\n            <tag-input [ngModel]=\"['item1']\"\r\n                       [errorMessages]=\"asyncErrorMessages\"\r\n                       [addOnPaste]=\"true\"\r\n                       [asyncValidators]=\"asyncValidators\">\r\n                <tag-input-dropdown [autocompleteItems]=\"['1','2']\"></tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            {{ items | json }}\r\n            <h3>Autocomplete items using onAdding</h3>\r\n            <tag-input [(ngModel)]=\"items\" [onlyFromAutocomplete]=\"true\" [onAdding]=\"asyncOnAdding\">\r\n                <tag-input-dropdown\r\n                    [autocompleteItems]=\"autocompleteItemsAsObjects\"\r\n                    [displayBy]=\"'value'\"\r\n                    [identifyBy]=\"'id'\">\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n    </div>\r\n</main>\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, {\r\n    ngZoneEventCoalescing: true,\r\n})\r\n  .catch(err => console.error(err));\r\n","export { TagInputDropdown } from './tag-input-dropdown.component';\r\n","<ng2-dropdown [dynamicUpdate]=\"dynamicUpdate\">\r\n    <ng2-dropdown-menu [focusFirstElement]=\"focusFirstElement\"\r\n                       [zIndex]=\"zIndex\"\r\n                       [appendToBody]=\"appendToBody\"\r\n                       [offset]=\"offset\">\r\n        <ng2-menu-item *ngFor=\"let item of items; let index = index; let last = last\"\r\n                       [value]=\"item\"\r\n                       [ngSwitch]=\"!!templates.length\">\r\n\r\n            <span *ngSwitchCase=\"false\"\r\n                  [innerHTML]=\"item[displayBy] | highlight : tagInput.inputForm.value.value\">\r\n            </span>\r\n\r\n            <ng-template *ngSwitchDefault\r\n                      [ngTemplateOutlet]=\"templates.first\"\r\n                      [ngTemplateOutletContext]=\"{ item: item, index: index, last: last }\">\r\n            </ng-template>\r\n        </ng2-menu-item>\r\n    </ng2-dropdown-menu>\r\n</ng2-dropdown>\r\n","import {\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  HostListener,\r\n  Injector,\r\n  Input,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  AfterViewInit\r\n} from '@angular/core';\r\n\r\n// rx\r\nimport { Observable } from 'rxjs';\r\nimport { filter, first, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\r\nimport { defaults } from '../../defaults';\r\nimport { TagModel } from '../../core/accessor';\r\nimport { TagInputComponent } from '../tag-input/tag-input';\r\n\r\n@Component({\r\n  selector: 'tag-input-dropdown',\r\n  templateUrl: './tag-input-dropdown.template.html'\r\n})\r\nexport class TagInputDropdown implements AfterViewInit {\r\n  /**\r\n   * @name dropdown\r\n   */\r\n  @ViewChild(Ng2Dropdown) public dropdown: Ng2Dropdown;\r\n\r\n  /**\r\n   * @name menuTemplate\r\n   * @desc reference to the template if provided by the user\r\n   */\r\n  @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\r\n\r\n  /**\r\n   * @name offset\r\n   */\r\n  @Input() public offset: string = defaults.dropdown.offset;\r\n\r\n  /**\r\n   * @name focusFirstElement\r\n   */\r\n  @Input() public focusFirstElement = defaults.dropdown.focusFirstElement;\r\n\r\n  /**\r\n   * - show autocomplete dropdown if the value of input is empty\r\n   * @name showDropdownIfEmpty\r\n   */\r\n  @Input() public showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\r\n\r\n  /**\r\n   * @description observable passed as input which populates the autocomplete items\r\n   * @name autocompleteObservable\r\n   */\r\n  @Input() public autocompleteObservable: (text: string) => Observable<any>;\r\n\r\n  /**\r\n   * - desc minimum text length in order to display the autocomplete dropdown\r\n   * @name minimumTextLength\r\n   */\r\n  @Input() public minimumTextLength = defaults.dropdown.minimumTextLength;\r\n\r\n  /**\r\n   * - number of items to display in the autocomplete dropdown\r\n   * @name limitItemsTo\r\n   */\r\n  @Input() public limitItemsTo: number = defaults.dropdown.limitItemsTo;\r\n\r\n  /**\r\n   * @name displayBy\r\n   */\r\n  @Input() public displayBy = defaults.dropdown.displayBy;\r\n\r\n  /**\r\n   * @name identifyBy\r\n   */\r\n  @Input() public identifyBy = defaults.dropdown.identifyBy;\r\n\r\n  /**\r\n   * @description a function a developer can use to implement custom matching for the autocomplete\r\n   * @name matchingFn\r\n   */\r\n  @Input() public matchingFn: (value: string, target: TagModel) => boolean =\r\n    defaults.dropdown.matchingFn;\r\n\r\n  /**\r\n   * @name appendToBody\r\n   */\r\n  @Input() public appendToBody = defaults.dropdown.appendToBody;\r\n\r\n  /**\r\n   * @name keepOpen\r\n   * @description option to leave dropdown open when adding a new item\r\n   */\r\n  @Input() public keepOpen = defaults.dropdown.keepOpen;\r\n\r\n  /**\r\n   * @name dynamicUpdate\r\n   */\r\n  @Input() public dynamicUpdate = defaults.dropdown.dynamicUpdate;\r\n\r\n  /**\r\n   * @name zIndex\r\n   */\r\n  @Input() public zIndex = defaults.dropdown.zIndex;\r\n\r\n  /**\r\n   * list of items that match the current value of the input (for autocomplete)\r\n   * @name items\r\n   */\r\n  public items: TagModel[] = [];\r\n\r\n  /**\r\n   * @name tagInput\r\n   */\r\n  public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\r\n\r\n  /**\r\n   * @name _autocompleteItems\r\n   */\r\n  private _autocompleteItems: TagModel[] = [];\r\n\r\n  /**\r\n   * @name autocompleteItems\r\n   * @param items\r\n   */\r\n  public set autocompleteItems(items: TagModel[]) {\r\n    this._autocompleteItems = items;\r\n  }\r\n\r\n  /**\r\n   * @name autocompleteItems\r\n   * @desc array of items that will populate the autocomplete\r\n   */\r\n  @Input() public get autocompleteItems(): TagModel[] {\r\n    const items = this._autocompleteItems;\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n\r\n    return items.map((item: TagModel) => {\r\n      return typeof item === 'string'\r\n        ? {\r\n            [this.displayBy]: item,\r\n            [this.identifyBy]: item\r\n          }\r\n        : item;\r\n    });\r\n  }\r\n\r\n  constructor(private readonly injector: Injector) {}\r\n\r\n  /**\r\n   * @name ngAfterviewInit\r\n   */\r\n  ngAfterViewInit(): void {\r\n    this.onItemClicked().subscribe((item: Ng2MenuItem) => {\r\n      this.requestAdding(item);\r\n    });\r\n\r\n    // reset itemsMatching array when the dropdown is hidden\r\n    this.onHide().subscribe(this.resetItems);\r\n\r\n    const DEBOUNCE_TIME = 200;\r\n    const KEEP_OPEN = this.keepOpen;\r\n\r\n    this.tagInput.onTextChange\r\n      .asObservable()\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n        debounceTime(DEBOUNCE_TIME),\r\n        filter((value: string) => {\r\n          if (KEEP_OPEN === false) {\r\n            return value.length > 0;\r\n          }\r\n\r\n          return true;\r\n        })\r\n      )\r\n      .subscribe(this.show);\r\n  }\r\n\r\n  /**\r\n   * @name updatePosition\r\n   */\r\n  public updatePosition(): void {\r\n    const position = this.tagInput.inputForm.getElementPosition();\r\n\r\n    this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\r\n  }\r\n\r\n  /**\r\n   * @name isVisible\r\n   */\r\n  public get isVisible(): boolean {\r\n    return this.dropdown.menu.dropdownState.menuState.isVisible;\r\n  }\r\n\r\n  /**\r\n   * @name onHide\r\n   */\r\n  public onHide(): EventEmitter<Ng2Dropdown> {\r\n    return this.dropdown.onHide;\r\n  }\r\n\r\n  /**\r\n   * @name onItemClicked\r\n   */\r\n  public onItemClicked(): EventEmitter<string> {\r\n    return this.dropdown.onItemClicked;\r\n  }\r\n\r\n  /**\r\n   * @name selectedItem\r\n   */\r\n  public get selectedItem(): Ng2MenuItem {\r\n    return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\r\n  }\r\n\r\n  /**\r\n   * @name state\r\n   */\r\n  public get state(): any {\r\n    return this.dropdown.menu.dropdownState;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @name show\r\n   */\r\n  public show = (): void => {\r\n    const maxItemsReached =\r\n      this.tagInput.items.length === this.tagInput.maxItems;\r\n    const value = this.getFormValue();\r\n    const hasMinimumText = value.trim().length >= this.minimumTextLength;\r\n    const position = this.calculatePosition();\r\n    const items = this.getMatchingItems(value);\r\n    const hasItems = items.length > 0;\r\n    const isHidden = this.isVisible === false;\r\n    const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\r\n    const isDisabled = this.tagInput.disable;\r\n\r\n    const shouldShow =\r\n      isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\r\n    const shouldHide = this.isVisible && !hasItems;\r\n\r\n    if (this.autocompleteObservable && hasMinimumText) {\r\n      return this.getItemsFromObservable(value);\r\n    }\r\n\r\n    if (\r\n      (!this.showDropdownIfEmpty && !value) ||\r\n      maxItemsReached ||\r\n      isDisabled\r\n    ) {\r\n      return this.dropdown.hide();\r\n    }\r\n\r\n    this.setItems(items);\r\n\r\n    if (shouldShow) {\r\n      this.dropdown.show(position);\r\n    } else if (shouldHide) {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @name hide\r\n   */\r\n  public hide(): void {\r\n    this.resetItems();\r\n    this.dropdown.hide();\r\n  }\r\n\r\n  /**\r\n   * @name scrollListener\r\n   */\r\n  @HostListener('window:scroll')\r\n  public scrollListener(): void {\r\n    if (!this.isVisible || !this.dynamicUpdate) {\r\n      return;\r\n    }\r\n\r\n    this.updatePosition();\r\n  }\r\n\r\n  /**\r\n   * @name onWindowBlur\r\n   */\r\n  @HostListener('window:blur')\r\n  public onWindowBlur(): void {\r\n    this.dropdown.hide();\r\n  }\r\n\r\n  /**\r\n   * @name getFormValue\r\n   */\r\n  private getFormValue(): string {\r\n    const formValue = this.tagInput.formValue;\r\n    return formValue ? formValue.toString().trim() : '';\r\n  }\r\n\r\n  /**\r\n   * @name calculatePosition\r\n   */\r\n  private calculatePosition(): ClientRect {\r\n    return this.tagInput.inputForm.getElementPosition();\r\n  }\r\n\r\n  /**\r\n   * @name requestAdding\r\n   * @param item {Ng2MenuItem}\r\n   */\r\n  private requestAdding = async (item: Ng2MenuItem) => {\r\n    const tag = this.createTagModel(item);\r\n    await this.tagInput.onAddingRequested(true, tag).catch(() => {});\r\n  };\r\n\r\n  /**\r\n   * @name createTagModel\r\n   * @param item\r\n   */\r\n  private createTagModel(item: Ng2MenuItem): TagModel {\r\n    const display =\r\n      typeof item.value === 'string' ? item.value : item.value[this.displayBy];\r\n    const value =\r\n      typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\r\n\r\n    return {\r\n      ...item.value,\r\n      [this.tagInput.displayBy]: display,\r\n      [this.tagInput.identifyBy]: value\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param value {string}\r\n   */\r\n  private getMatchingItems(value: string): TagModel[] {\r\n    if (!value && !this.showDropdownIfEmpty) {\r\n      return [];\r\n    }\r\n\r\n    const dupesAllowed = this.tagInput.allowDupes;\r\n\r\n    return this.autocompleteItems.filter((item: TagModel) => {\r\n      const hasValue = dupesAllowed\r\n        ? false\r\n        : this.tagInput.tags.some(tag => {\r\n            const identifyBy = this.tagInput.identifyBy;\r\n            const model =\r\n              typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\r\n\r\n            return model === item[this.identifyBy];\r\n          });\r\n\r\n      return this.matchingFn(value, item) && hasValue === false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @name setItems\r\n   */\r\n  private setItems(items: TagModel[]): void {\r\n    this.items = items.slice(0, this.limitItemsTo || items.length);\r\n  }\r\n\r\n  /**\r\n   * @name resetItems\r\n   */\r\n  private resetItems = (): void => {\r\n    this.items = [];\r\n  };\r\n\r\n  /**\r\n   * @name populateItems\r\n   * @param data\r\n   */\r\n  private populateItems(data: any): TagInputDropdown {\r\n    this.autocompleteItems = data.map(item => {\r\n      return typeof item === 'string'\r\n        ? {\r\n            [this.displayBy]: item,\r\n            [this.identifyBy]: item\r\n          }\r\n        : item;\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @name getItemsFromObservable\r\n   * @param text\r\n   */\r\n  private getItemsFromObservable = (text: string): void => {\r\n    this.setLoadingState(true);\r\n\r\n    const subscribeFn = (data: any[]) => {\r\n      // hide loading animation\r\n      this.setLoadingState(false)\r\n        // add items\r\n        .populateItems(data);\r\n\r\n      this.setItems(this.getMatchingItems(text));\r\n\r\n      if (this.items.length) {\r\n        this.dropdown.show(this.calculatePosition());\r\n      } else {\r\n        this.dropdown.hide();\r\n      }\r\n    };\r\n\r\n    this.autocompleteObservable(text)\r\n      .pipe(first())\r\n      .subscribe(subscribeFn, () => this.setLoadingState(false));\r\n  };\r\n\r\n  /**\r\n   * @name setLoadingState\r\n   * @param state\r\n   */\r\n  private setLoadingState(state: boolean): TagInputDropdown {\r\n    this.tagInput.isLoading = state;\r\n\r\n    return this;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'delete-icon',\r\n    templateUrl: './icon.html',\r\n    styleUrls: ['./icon.scss']\r\n})\r\nexport class DeleteIconComponent {}\r\n","<span>\r\n    <svg\r\n        height=\"16px\"\r\n        viewBox=\"0 0 32 32\"\r\n        width=\"16px\"\r\n    >\r\n        <path\r\n            d=\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\"\r\n            fill=\"#121313\"\r\n        />\r\n    </svg>\r\n</span>","export { DeleteIconComponent } from './icon';\r\n","export { TagInputDropdown } from './dropdown/index';\r\nexport { DeleteIconComponent } from './icon/index';\r\nexport { TagInputForm } from './tag-input-form/index';\r\nexport { TagRipple, TagComponent } from './tag/index';\r\nexport { TagInputComponent } from './tag-input/index';\r\n","export { TagInputForm } from './tag-input-form.component';\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'tag-input-form',\r\n    styleUrls: ['./tag-input-form.style.scss'],\r\n    templateUrl: './tag-input-form.template.html'\r\n})\r\nexport class TagInputForm implements OnInit, OnChanges {\r\n    /**\r\n     * @name onSubmit\r\n     */\r\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onBlur\r\n     */\r\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onFocus\r\n     */\r\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onKeyup\r\n     */\r\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onKeydown\r\n     */\r\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name inputTextChange\r\n     */\r\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\r\n\r\n    // inputs\r\n\r\n    /**\r\n     * @name placeholder\r\n     */\r\n    @Input() public placeholder: string;\r\n\r\n    /**\r\n     * @name validators\r\n     */\r\n    @Input() public validators: ValidatorFn[] = [];\r\n\r\n    /**\r\n     * @name asyncValidators\r\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\r\n\r\n    /**\r\n     * @name inputId\r\n     */\r\n    @Input() public inputId: string;\r\n\r\n    /**\r\n     * @name inputClass\r\n     */\r\n    @Input() public inputClass: string;\r\n\r\n    /**\r\n     * @name tabindex\r\n     * @desc pass through the specified tabindex to the input\r\n     */\r\n    @Input() public tabindex = '';\r\n\r\n    /**\r\n     * @name disabled\r\n     */\r\n    @Input() public disabled = false;\r\n\r\n    /**\r\n     * @name input\r\n     */\r\n    @ViewChild('input') public input;\r\n\r\n    /**\r\n     * @name form\r\n     */\r\n    public form: FormGroup;\r\n\r\n    /**\r\n     * @name inputText\r\n     */\r\n    @Input()\r\n    public get inputText(): string {\r\n        return this.item.value;\r\n    }\r\n\r\n    /**\r\n     * @name inputText\r\n     * @param text {string}\r\n     */\r\n    public set inputText(text: string) {\r\n        this.item.setValue(text);\r\n\r\n        this.inputTextChange.emit(text);\r\n    }\r\n\r\n    private readonly item: FormControl = new FormControl({ value: '', disabled: this.disabled });\r\n\r\n    ngOnInit() {\r\n        this.item.setValidators(this.validators);\r\n        this.item.setAsyncValidators(this.asyncValidators);\r\n\r\n        // creating form\r\n        this.form = new FormGroup({\r\n            item: this.item\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.disabled && !changes.disabled.firstChange) {\r\n            if (changes.disabled.currentValue) {\r\n                this.form.controls['item'].disable();\r\n            } else {\r\n                this.form.controls['item'].enable();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name value\r\n     */\r\n    public get value(): FormControl {\r\n        return this.form.get('item') as FormControl;\r\n    }\r\n\r\n    /**\r\n     * @name isInputFocused\r\n     */\r\n    public isInputFocused(): boolean {\r\n        const doc = typeof document !== 'undefined' ? document : undefined;\r\n        return doc ? doc.activeElement === this.input.nativeElement : false;\r\n    }\r\n\r\n    /**\r\n     * @name getErrorMessages\r\n     * @param messages\r\n     */\r\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\r\n        return Object.keys(messages)\r\n            .filter(err => this.value.hasError(err))\r\n            .map(err => messages[err]);\r\n    }\r\n\r\n    /**\r\n     * @name hasErrors\r\n     */\r\n    public hasErrors(): boolean {\r\n        const { dirty, value, valid } = this.form;\r\n        return dirty && value.item && !valid;\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     */\r\n    public focus(): void {\r\n        this.input.nativeElement.focus();\r\n    }\r\n\r\n    /**\r\n     * @name blur\r\n     */\r\n    public blur(): void {\r\n        this.input.nativeElement.blur();\r\n    }\r\n\r\n    /**\r\n     * @name getElementPosition\r\n     */\r\n    public getElementPosition(): ClientRect {\r\n        return this.input.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n    /**\r\n     * - removes input from the component\r\n     * @name destroy\r\n     */\r\n    public destroy(): void {\r\n        const input = this.input.nativeElement;\r\n        input.parentElement.removeChild(input);\r\n    }\r\n\r\n    /**\r\n     * @name onKeyDown\r\n     * @param $event\r\n     */\r\n    public onKeyDown($event) {\r\n        this.inputText = this.value.value;\r\n        if ($event.key === 'Enter') {\r\n            this.submit($event);\r\n        } else {\r\n          return this.onKeydown.emit($event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name onKeyUp\r\n     * @param $event\r\n     */\r\n    public onKeyUp($event) {\r\n        this.inputText = this.value.value;\r\n        return this.onKeyup.emit($event);\r\n    }\r\n\r\n    /**\r\n     * @name submit\r\n     */\r\n    public submit($event: any): void {\r\n        $event.preventDefault();\r\n        this.onSubmit.emit($event);\r\n    }\r\n}\r\n","<!-- form -->\r\n<form (ngSubmit)=\"submit($event)\" [formGroup]=\"form\">\r\n    <input #input\r\n\r\n           type=\"text\"\r\n           class=\"ng2-tag-input__text-input\"\r\n           autocomplete=\"off\"\r\n           tabindex=\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\"\r\n           minlength=\"1\"\r\n           formControlName=\"item\"\r\n\r\n           [ngClass]=\"inputClass\"\r\n           [attr.id]=\"inputId\"\r\n           [attr.placeholder]=\"placeholder\"\r\n           [attr.aria-label]=\"placeholder\"\r\n           [attr.tabindex]=\"tabindex\"\r\n           [attr.disabled]=\"disabled ? disabled : null\"\r\n\r\n           (focus)=\"onFocus.emit($event)\"\r\n           (blur)=\"onBlur.emit($event)\"\r\n           (keydown)=\"onKeyDown($event)\"\r\n           (keyup)=\"onKeyUp($event)\"\r\n    />\r\n</form>\r\n","import {\r\n    animate,\r\n    trigger,\r\n    style,\r\n    transition,\r\n    keyframes,\r\n    state,\r\n    AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\n/**\r\n * @name animations\r\n */\r\nexport const animations = [\r\n    trigger('animation', [\r\n        state('in', style({\r\n            opacity: 1\r\n        })),\r\n        state('out', style({\r\n            opacity: 0\r\n        })),\r\n        transition(':enter', [\r\n            animate('{{ enter }}', keyframes([\r\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\r\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\r\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\r\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\r\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\r\n            ]))\r\n        ]),\r\n        transition(':leave', [\r\n            animate('{{ leave }}', keyframes([\r\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\r\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\r\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\r\n            ]))\r\n        ])\r\n    ])\r\n];\r\n","export { TagInputComponent } from './tag-input';\r\n","// angular\r\nimport {\r\n    Component,\r\n    forwardRef,\r\n    HostBinding,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    Renderer2,\r\n    ViewChild,\r\n    ViewChildren,\r\n    ContentChildren,\r\n    ContentChild,\r\n    OnInit,\r\n    TemplateRef,\r\n    QueryList,\r\n    AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport {\r\n    AsyncValidatorFn,\r\n    FormControl,\r\n    NG_VALUE_ACCESSOR,\r\n    ValidatorFn\r\n} from '@angular/forms';\r\n\r\n// rx\r\nimport { Observable } from 'rxjs';\r\nimport { debounceTime, filter, map, first } from 'rxjs/operators';\r\n\r\n// ng2-tag-input\r\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\r\nimport { listen } from '../../core/helpers/listen';\r\nimport * as constants from '../../core/constants';\r\n\r\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\r\n\r\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\r\nimport { TagComponent } from '../tag/tag.component';\r\n\r\nimport { animations } from './animations';\r\nimport { defaults } from '../../defaults';\r\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\r\n\r\n// angular universal hacks\r\n/* tslint:disable-next-line */\r\nconst DragEvent = (window as any).DragEvent;\r\n\r\nconst CUSTOM_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TagInputComponent),\r\n    multi: true\r\n};\r\n@Component({\r\n    selector: 'tag-input',\r\n    providers: [CUSTOM_ACCESSOR],\r\n    styleUrls: ['./tag-input.style.scss'],\r\n    templateUrl: './tag-input.template.html',\r\n    animations\r\n})\r\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\r\n    /**\r\n     * @name separatorKeys\r\n     * @desc keyboard keys with which a user can separate items\r\n     */\r\n    @Input() public separatorKeys: string[] = defaults.tagInput.separatorKeys;\r\n\r\n    /**\r\n     * @name separatorKeyCodes\r\n     * @desc keyboard key codes with which a user can separate items\r\n     */\r\n    @Input() public separatorKeyCodes: number[] = defaults.tagInput.separatorKeyCodes;\r\n\r\n    /**\r\n     * @name placeholder\r\n     * @desc the placeholder of the input text\r\n     */\r\n    @Input() public placeholder: string = defaults.tagInput.placeholder;\r\n\r\n    /**\r\n     * @name secondaryPlaceholder\r\n     * @desc placeholder to appear when the input is empty\r\n     */\r\n    @Input() public secondaryPlaceholder: string = defaults.tagInput.secondaryPlaceholder;\r\n\r\n    /**\r\n     * @name maxItems\r\n     * @desc maximum number of items that can be added\r\n     */\r\n    @Input() public maxItems: number = defaults.tagInput.maxItems;\r\n\r\n    /**\r\n     * @name validators\r\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public validators: ValidatorFn[] = defaults.tagInput.validators;\r\n\r\n    /**\r\n     * @name asyncValidators\r\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public asyncValidators: AsyncValidatorFn[] = defaults.tagInput.asyncValidators;\r\n\r\n    /**\r\n    * - if set to true, it will only possible to add items from the autocomplete\r\n    * @name onlyFromAutocomplete\r\n    */\r\n    @Input() public onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\r\n\r\n    /**\r\n     * @name errorMessages\r\n     */\r\n    @Input() public errorMessages: { [key: string]: string } = defaults.tagInput.errorMessages;\r\n\r\n    /**\r\n     * @name theme\r\n     */\r\n    @Input() public theme: string = defaults.tagInput.theme;\r\n\r\n    /**\r\n     * @name onTextChangeDebounce\r\n     */\r\n    @Input() public onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\r\n\r\n    /**\r\n     * - custom id assigned to the input\r\n     * @name id\r\n     */\r\n    @Input() public inputId = defaults.tagInput.inputId;\r\n\r\n    /**\r\n     * - custom class assigned to the input\r\n     */\r\n    @Input() public inputClass: string = defaults.tagInput.inputClass;\r\n\r\n    /**\r\n     * - option to clear text input when the form is blurred\r\n     * @name clearOnBlur\r\n     */\r\n    @Input() public clearOnBlur: boolean = defaults.tagInput.clearOnBlur;\r\n\r\n    /**\r\n     * - hideForm\r\n     * @name clearOnBlur\r\n     */\r\n    @Input() public hideForm: boolean = defaults.tagInput.hideForm;\r\n\r\n    /**\r\n     * @name addOnBlur\r\n     */\r\n    @Input() public addOnBlur: boolean = defaults.tagInput.addOnBlur;\r\n\r\n    /**\r\n     * @name addOnPaste\r\n     */\r\n    @Input() public addOnPaste: boolean = defaults.tagInput.addOnPaste;\r\n\r\n    /**\r\n     * - pattern used with the native method split() to separate patterns in the string pasted\r\n     * @name pasteSplitPattern\r\n     */\r\n    @Input() public pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\r\n\r\n    /**\r\n     * @name blinkIfDupe\r\n     */\r\n    @Input() public blinkIfDupe = defaults.tagInput.blinkIfDupe;\r\n\r\n    /**\r\n     * @name removable\r\n     */\r\n    @Input() public removable = defaults.tagInput.removable;\r\n\r\n    /**\r\n     * @name editable\r\n     */\r\n    @Input() public editable: boolean = defaults.tagInput.editable;\r\n\r\n    /**\r\n     * @name allowDupes\r\n     */\r\n    @Input() public allowDupes = defaults.tagInput.allowDupes;\r\n\r\n    /**\r\n     * @description if set to true, the newly added tags will be added as strings, and not objects\r\n     * @name modelAsStrings\r\n     */\r\n    @Input() public modelAsStrings = defaults.tagInput.modelAsStrings;\r\n\r\n    /**\r\n     * @name trimTags\r\n     */\r\n    @Input() public trimTags = defaults.tagInput.trimTags;\r\n\r\n    /**\r\n     * @name inputText\r\n     */\r\n    @Input() public get inputText(): string {\r\n        return this.inputTextValue;\r\n    }\r\n\r\n    /**\r\n     * @name ripple\r\n     */\r\n    @Input() public ripple: boolean = defaults.tagInput.ripple;\r\n\r\n    /**\r\n     * @name tabindex\r\n     * @desc pass through the specified tabindex to the input\r\n     */\r\n    @Input() public tabindex: string = defaults.tagInput.tabIndex;\r\n\r\n    /**\r\n     * @name disable\r\n     */\r\n    @Input() public disable: boolean = defaults.tagInput.disable;\r\n\r\n    /**\r\n     * @name dragZone\r\n     */\r\n    @Input() public dragZone: string = defaults.tagInput.dragZone;\r\n\r\n    /**\r\n     * @name onRemoving\r\n     */\r\n    @Input() public onRemoving = defaults.tagInput.onRemoving;\r\n\r\n    /**\r\n     * @name onAdding\r\n     */\r\n    @Input() public onAdding = defaults.tagInput.onAdding;\r\n\r\n    /**\r\n     * @name animationDuration\r\n     */\r\n    @Input() public animationDuration = defaults.tagInput.animationDuration;\r\n\r\n    /**\r\n     * @name onAdd\r\n     * @desc event emitted when adding a new item\r\n     */\r\n    @Output() public onAdd = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onRemove\r\n     * @desc event emitted when removing an existing item\r\n     */\r\n    @Output() public onRemove = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onSelect\r\n     * @desc event emitted when selecting an item\r\n     */\r\n    @Output() public onSelect = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onFocus\r\n     * @desc event emitted when the input is focused\r\n     */\r\n    @Output() public onFocus = new EventEmitter<string>();\r\n\r\n    /**\r\n     * @name onFocus\r\n     * @desc event emitted when the input is blurred\r\n     */\r\n    @Output() public onBlur = new EventEmitter<string>();\r\n\r\n    /**\r\n     * @name onTextChange\r\n     * @desc event emitted when the input value changes\r\n     */\r\n    @Output() public onTextChange = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * - output triggered when text is pasted in the form\r\n     * @name onPaste\r\n     */\r\n    @Output() public onPaste = new EventEmitter<string>();\r\n\r\n    /**\r\n     * - output triggered when tag entered is not valid\r\n     * @name onValidationError\r\n     */\r\n    @Output() public onValidationError = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * - output triggered when tag is edited\r\n     * @name onTagEdited\r\n     */\r\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name dropdown\r\n     */\r\n    // @ContentChild(forwardRef(() => TagInputDropdown), {static: true}) dropdown: TagInputDropdown;\r\n    @ContentChild(TagInputDropdown) public dropdown: TagInputDropdown;\r\n    /**\r\n     * @name template\r\n     * @desc reference to the template if provided by the user\r\n     */\r\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\r\n\r\n    /**\r\n     * @name inputForm\r\n     */\r\n    @ViewChild(TagInputForm) public inputForm: TagInputForm;\r\n\r\n    /**\r\n     * @name selectedTag\r\n     * @desc reference to the current selected tag\r\n     */\r\n    public selectedTag: TagModel | undefined;\r\n\r\n    /**\r\n     * @name isLoading\r\n     */\r\n    public isLoading = false;\r\n\r\n    /**\r\n     * @name inputText\r\n     * @param text\r\n     */\r\n    public set inputText(text: string) {\r\n        this.inputTextValue = text;\r\n        this.inputTextChange.emit(text);\r\n    }\r\n\r\n    /**\r\n     * @name tags\r\n     * @desc list of Element items\r\n     */\r\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\r\n\r\n    /**\r\n     * @name listeners\r\n     * @desc array of events that get fired using @fireEvents\r\n     */\r\n    private listeners = {\r\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\r\n        [constants.KEYUP]: <{ (fun): any }[]>[]\r\n    };\r\n\r\n    /**\r\n     * @description emitter for the 2-way data binding inputText value\r\n     * @name inputTextChange\r\n     */\r\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\r\n\r\n    /**\r\n     * @description private variable to bind get/set\r\n     * @name inputTextValue\r\n     */\r\n    public inputTextValue = '';\r\n\r\n    /**\r\n     * @desc removes the tab index if it is set - it will be passed through to the input\r\n     * @name tabindexAttr\r\n     */\r\n    @HostBinding('attr.tabindex')\r\n    public get tabindexAttr(): string {\r\n        return this.tabindex !== '' ? '-1' : '';\r\n    }\r\n\r\n    /**\r\n     * @name animationMetadata\r\n     */\r\n    public animationMetadata: { value: string, params: object };\r\n\r\n    public errors: string[] = [];\r\n\r\n    public isProgressBarVisible$: Observable<boolean>;\r\n\r\n    constructor(private readonly renderer: Renderer2,\r\n        public readonly dragProvider: DragProvider) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @name ngAfterViewInit\r\n     */\r\n    public ngAfterViewInit(): void {\r\n        // set up listeners\r\n\r\n        this.setUpKeypressListeners();\r\n        this.setupSeparatorKeysListener();\r\n        this.setUpInputKeydownListeners();\r\n\r\n        if (this.onTextChange.observers.length) {\r\n            this.setUpTextChangeSubscriber();\r\n        }\r\n\r\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\r\n        if (this.clearOnBlur || this.addOnBlur) {\r\n            this.setUpOnBlurSubscriber();\r\n        }\r\n\r\n        // if addOnPaste is set to true, register the handler and add items\r\n        if (this.addOnPaste) {\r\n            this.setUpOnPasteListener();\r\n        }\r\n\r\n        const statusChanges$ = this.inputForm.form.statusChanges;\r\n\r\n        statusChanges$.pipe(\r\n            filter((status: string) => status !== 'PENDING')\r\n        ).subscribe(() => {\r\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\r\n        });\r\n\r\n        this.isProgressBarVisible$ = statusChanges$.pipe(\r\n            map((status: string) => {\r\n                return status === 'PENDING' || this.isLoading;\r\n            })\r\n        );\r\n\r\n        // if hideForm is set to true, remove the input\r\n        if (this.hideForm) {\r\n            this.inputForm.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name ngOnInit\r\n     */\r\n    public ngOnInit(): void {\r\n        // if the number of items specified in the model is > of the value of maxItems\r\n        // degrade gracefully and let the max number of items to be the number of items in the model\r\n        // though, warn the user.\r\n        const hasReachedMaxItems = this.maxItems !== undefined &&\r\n            this.items &&\r\n            this.items.length > this.maxItems;\r\n\r\n        if (hasReachedMaxItems) {\r\n            this.maxItems = this.items.length;\r\n            console.warn(constants.MAX_ITEMS_WARNING);\r\n        }\r\n\r\n        // Setting editable to false to fix problem with tags in IE still being editable when\r\n        // onlyFromAutocomplete is true\r\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\r\n\r\n        this.setAnimationMetadata();\r\n    }\r\n\r\n    /**\r\n     * @name onRemoveRequested\r\n     * @param tag\r\n     * @param index\r\n     */\r\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\r\n        return new Promise(resolve => {\r\n            const subscribeFn = (model: TagModel) => {\r\n                this.removeItem(model, index);\r\n                resolve(tag);\r\n            };\r\n\r\n            this.onRemoving ?\r\n                this.onRemoving(tag)\r\n                    .pipe(first())\r\n                    .subscribe(subscribeFn) : subscribeFn(tag);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name onAddingRequested\r\n     * @param fromAutocomplete {boolean}\r\n     * @param tag {TagModel}\r\n     * @param index? {number}\r\n     * @param giveupFocus? {boolean}\r\n     */\r\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel,\r\n        index?: number, giveupFocus?: boolean): Promise<TagModel> {\r\n        return new Promise((resolve, reject) => {\r\n            const subscribeFn = (model: TagModel) => {\r\n                return this\r\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\r\n                    .then(resolve)\r\n                    .catch(reject);\r\n            };\r\n\r\n            return this.onAdding ?\r\n                this.onAdding(tag)\r\n                    .pipe(first())\r\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name appendTag\r\n     * @param tag {TagModel}\r\n     */\r\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\r\n        const items = this.items;\r\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\r\n\r\n        this.items = [\r\n            ...items.slice(0, index),\r\n            model,\r\n            ...items.slice(index, items.length)\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * @name createTag\r\n     * @param model\r\n     */\r\n    public createTag = (model: TagModel): TagModel => {\r\n        const trim = (val: TagModel, key: string): TagModel => {\r\n            return typeof val === 'string' ? val.trim() : val[key];\r\n        };\r\n\r\n        return {\r\n            ...typeof model !== 'string' ? model : {},\r\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\r\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @name selectItem\r\n     * @desc selects item passed as parameter as the selected tag\r\n     * @param item\r\n     * @param emit\r\n     */\r\n    public selectItem(item: TagModel | undefined, emit = true): void {\r\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\r\n\r\n        if (isReadonly || this.selectedTag === item) {\r\n            return;\r\n        }\r\n\r\n        this.selectedTag = item;\r\n\r\n        if (emit) {\r\n            this.onSelect.emit(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name fireEvents\r\n     * @desc goes through the list of the events for a given eventName, and fires each of them\r\n     * @param eventName\r\n     * @param $event\r\n     */\r\n    public fireEvents(eventName: string, $event?): void {\r\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\r\n    }\r\n\r\n    /**\r\n     * @name handleKeydown\r\n     * @desc handles action when the user hits a keyboard key\r\n     * @param data\r\n     */\r\n    public handleKeydown(data: any): void {\r\n        const event = data.event;\r\n        const key = event.keyCode || event.which;\r\n        const shiftKey = event.shiftKey || false;\r\n\r\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\r\n            case constants.ACTIONS_KEYS.DELETE:\r\n                if (this.selectedTag && this.removable) {\r\n                    const index = this.items.indexOf(this.selectedTag);\r\n                    this.onRemoveRequested(this.selectedTag, index);\r\n                }\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\r\n                this.moveToTag(data.model, constants.PREV);\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\r\n                this.moveToTag(data.model, constants.NEXT);\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.TAB:\r\n                if (shiftKey) {\r\n                    if (this.isFirstTag(data.model)) {\r\n                        return;\r\n                    }\r\n\r\n                    this.moveToTag(data.model, constants.PREV);\r\n                } else {\r\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\r\n                        return;\r\n                    }\r\n\r\n                    this.moveToTag(data.model, constants.NEXT);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n\r\n        // prevent default behaviour\r\n        event.preventDefault();\r\n    }\r\n\r\n    public async onFormSubmit() {\r\n        try {\r\n            await this.onAddingRequested(false, this.formValue);\r\n        } catch {\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name setInputValue\r\n     * @param value\r\n     */\r\n    public setInputValue(value: string, emitEvent = true): void {\r\n        const control = this.getControl();\r\n\r\n        // update form value with the transformed item\r\n        control.setValue(value, { emitEvent });\r\n    }\r\n\r\n    /**\r\n     * @name getControl\r\n     */\r\n    private getControl(): FormControl {\r\n        return this.inputForm.value as FormControl;\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     * @param applyFocus\r\n     * @param displayAutocomplete\r\n     */\r\n    public focus(applyFocus = false, displayAutocomplete = false): void {\r\n        if (this.dragProvider.getState('dragging')) {\r\n            return;\r\n        }\r\n\r\n        this.selectItem(undefined, false);\r\n\r\n        if (applyFocus) {\r\n            this.inputForm.focus();\r\n            this.onFocus.emit(this.formValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name blur\r\n     */\r\n    public blur(): void {\r\n        this.onTouched();\r\n\r\n        this.onBlur.emit(this.formValue);\r\n    }\r\n\r\n    /**\r\n     * @name hasErrors\r\n     */\r\n    public hasErrors(): boolean {\r\n        return !!this.inputForm && this.inputForm.hasErrors();\r\n    }\r\n\r\n    /**\r\n     * @name isInputFocused\r\n     */\r\n    public isInputFocused(): boolean {\r\n        return !!this.inputForm && this.inputForm.isInputFocused();\r\n    }\r\n\r\n    /**\r\n     * - this is the one way I found to tell if the template has been passed and it is not\r\n     * the template for the menu item\r\n     * @name hasCustomTemplate\r\n     */\r\n    public hasCustomTemplate(): boolean {\r\n        const template = this.templates ? this.templates.first : undefined;\r\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\r\n            this.dropdown.templates.first : undefined;\r\n\r\n        return Boolean(template && template !== menuTemplate);\r\n    }\r\n\r\n    /**\r\n     * @name maxItemsReached\r\n     */\r\n    public get maxItemsReached(): boolean {\r\n        return this.maxItems !== undefined &&\r\n            this.items.length >= this.maxItems;\r\n    }\r\n\r\n    /**\r\n     * @name formValue\r\n     */\r\n    public get formValue(): string {\r\n        const form = this.inputForm.value;\r\n\r\n        return form ? form.value : '';\r\n    }\r\n\r\n    /**3\r\n     * @name onDragStarted\r\n     * @param event\r\n     * @param index\r\n     */\r\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\r\n        event.stopPropagation();\r\n\r\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\r\n\r\n        this.dragProvider.setSender(this);\r\n        this.dragProvider.setDraggedItem(event, item);\r\n        this.dragProvider.setState({ dragging: true, index });\r\n    }\r\n\r\n    /**\r\n     * @name onDragOver\r\n     * @param event\r\n     */\r\n    public onDragOver(event: DragEvent, index?: number): void {\r\n        this.dragProvider.setState({ dropping: true });\r\n        this.dragProvider.setReceiver(this);\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * @name onTagDropped\r\n     * @param event\r\n     * @param index\r\n     */\r\n    public onTagDropped(event: DragEvent, index?: number): void {\r\n        const item = this.dragProvider.getDraggedItem(event);\r\n\r\n        if (!item || item.zone !== this.dragZone) {\r\n            return;\r\n        }\r\n\r\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * @name isDropping\r\n     */\r\n    public isDropping(): boolean {\r\n        const isReceiver = this.dragProvider.receiver === this;\r\n        const isDropping = this.dragProvider.getState('dropping');\r\n\r\n        return Boolean(isReceiver && isDropping);\r\n    }\r\n\r\n    /**\r\n     * @name onTagBlurred\r\n     * @param changedElement {TagModel}\r\n     * @param index {number}\r\n     */\r\n    public onTagBlurred(changedElement: TagModel, index: number): void {\r\n        this.items[index] = changedElement;\r\n        this.blur();\r\n    }\r\n\r\n    /**\r\n     * @name trackBy\r\n     * @param items\r\n     */\r\n    public trackBy(index: number, item: TagModel): string {\r\n        return item[this.identifyBy];\r\n    }\r\n\r\n    /**\r\n     * @name updateEditedTag\r\n     * @param tag\r\n     */\r\n    public updateEditedTag({ tag, index }: { tag: TagModel, index: number }): void {\r\n        this.onTagEdited.emit(tag);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param tag\r\n     * @param isFromAutocomplete\r\n     */\r\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\r\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\r\n        const value = this.getItemDisplay(tag).trim();\r\n\r\n        if (selectedItem && !fromAutocomplete || !value) {\r\n            return false;\r\n        }\r\n\r\n        const dupe = this.findDupe(tag, fromAutocomplete);\r\n\r\n        // if so, give a visual cue and return false\r\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\r\n            const model = this.tags.find(item => {\r\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\r\n            });\r\n\r\n            if (model) {\r\n                model.blink();\r\n            }\r\n        }\r\n\r\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\r\n\r\n        const assertions = [\r\n            // 1. there must be no dupe OR dupes are allowed\r\n            !dupe || this.allowDupes,\r\n\r\n            // 2. check max items has not been reached\r\n            !this.maxItemsReached,\r\n\r\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\r\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\r\n        ];\r\n\r\n        return assertions.filter(Boolean).length === assertions.length;\r\n    }\r\n\r\n    /**\r\n     * @name moveToTag\r\n     * @param item\r\n     * @param direction\r\n     */\r\n    private moveToTag(item: TagModel, direction: string): void {\r\n        const isLast = this.isLastTag(item);\r\n        const isFirst = this.isFirstTag(item);\r\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\r\n            (direction === constants.PREV && isFirst);\r\n\r\n        if (stopSwitch) {\r\n            this.focus(true);\r\n            return;\r\n        }\r\n\r\n        const offset = direction === constants.NEXT ? 1 : -1;\r\n        const index = this.getTagIndex(item) + offset;\r\n        const tag = this.getTagAtIndex(index);\r\n\r\n        return tag.select.call(tag);\r\n    }\r\n\r\n    /**\r\n     * @name isFirstTag\r\n     * @param item {TagModel}\r\n     */\r\n    private isFirstTag(item: TagModel): boolean {\r\n        return this.tags.first.model === item;\r\n    }\r\n\r\n    /**\r\n     * @name isLastTag\r\n     * @param item {TagModel}\r\n     */\r\n    private isLastTag(item: TagModel): boolean {\r\n        return this.tags.last.model === item;\r\n    }\r\n\r\n    /**\r\n     * @name getTagIndex\r\n     * @param item\r\n     */\r\n    private getTagIndex(item: TagModel): number {\r\n        const tags = this.tags.toArray();\r\n\r\n        return tags.findIndex(tag => tag.model === item);\r\n    }\r\n\r\n    /**\r\n     * @name getTagAtIndex\r\n     * @param index\r\n     */\r\n    private getTagAtIndex(index: number) {\r\n        const tags = this.tags.toArray();\r\n\r\n        return tags[index];\r\n    }\r\n\r\n    /**\r\n     * @name removeItem\r\n     * @desc removes an item from the array of the model\r\n     * @param tag {TagModel}\r\n     * @param index {number}\r\n     */\r\n    public removeItem(tag: TagModel, index: number): void {\r\n        this.items = this.getItemsWithout(index);\r\n\r\n        // if the removed tag was selected, set it as undefined\r\n        if (this.selectedTag === tag) {\r\n            this.selectItem(undefined, false);\r\n        }\r\n\r\n        // focus input\r\n        this.focus(true, false);\r\n\r\n        // emit remove event\r\n        this.onRemove.emit(tag);\r\n    }\r\n\r\n    /**\r\n     * @name addItem\r\n     * @desc adds the current text model to the items array\r\n     * @param fromAutocomplete {boolean}\r\n     * @param item {TagModel}\r\n     * @param index? {number}\r\n     * @param giveupFocus? {boolean}\r\n     */\r\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number, giveupFocus?: boolean):\r\n        Promise<TagModel> {\r\n        const display = this.getItemDisplay(item);\r\n        const tag = this.createTag(item);\r\n\r\n        if (fromAutocomplete) {\r\n            this.setInputValue(this.getItemValue(item, true));\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            /**\r\n             * @name reset\r\n             */\r\n            const reset = (): void => {\r\n                // reset control and focus input\r\n                this.setInputValue('');\r\n\r\n                if (giveupFocus) {\r\n                    this.focus(false, false);\r\n                } else {\r\n                    // focus input\r\n                    this.focus(true, false);\r\n                }\r\n\r\n                resolve(display);\r\n            };\r\n\r\n            const appendItem = (): void => {\r\n                this.appendTag(tag, index);\r\n\r\n                // emit event\r\n                this.onAdd.emit(tag);\r\n\r\n                if (!this.dropdown) {\r\n                    return;\r\n                }\r\n\r\n                this.dropdown.hide();\r\n\r\n                if (this.dropdown.showDropdownIfEmpty) {\r\n                    this.dropdown.show();\r\n                }\r\n            };\r\n\r\n            const status = this.inputForm.form.status;\r\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\r\n\r\n            const onValidationError = () => {\r\n                this.onValidationError.emit(tag);\r\n                return reject();\r\n            };\r\n\r\n            if (status === 'VALID' && isTagValid) {\r\n                appendItem();\r\n                return reset();\r\n            }\r\n\r\n            if (status === 'INVALID' || !isTagValid) {\r\n                reset();\r\n                return onValidationError();\r\n            }\r\n\r\n            if (status === 'PENDING') {\r\n                const statusUpdate$ = this.inputForm.form.statusChanges;\r\n\r\n                return statusUpdate$\r\n                    .pipe(\r\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\r\n                        first()\r\n                    )\r\n                    .subscribe((statusUpdate) => {\r\n                        if (statusUpdate === 'VALID' && isTagValid) {\r\n                            appendItem();\r\n                            return reset();\r\n                        } else {\r\n                            reset();\r\n                            return onValidationError();\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setupSeparatorKeysListener\r\n     */\r\n    private setupSeparatorKeysListener(): void {\r\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\r\n        const listener = ($event) => {\r\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\r\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\r\n            // the keyCode of keydown event is 229 when IME is processing the key event.\r\n            const isIMEProcessing = $event.keyCode === 229;\r\n\r\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\r\n                $event.preventDefault();\r\n                this.onAddingRequested(false, this.formValue)\r\n                    .catch(() => { });\r\n            }\r\n        };\r\n\r\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\r\n    }\r\n\r\n    /**\r\n     * @name setUpKeypressListeners\r\n     */\r\n    private setUpKeypressListeners(): void {\r\n        const listener = ($event) => {\r\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\r\n\r\n            if (isCorrectKey &&\r\n                !this.formValue &&\r\n                this.items.length) {\r\n                this.tags.last.select.call(this.tags.last);\r\n            }\r\n        };\r\n\r\n        // setting up the keypress listeners\r\n        listen.call(this, constants.KEYDOWN, listener);\r\n    }\r\n\r\n    /**\r\n     * @name setUpKeydownListeners\r\n     */\r\n    private setUpInputKeydownListeners(): void {\r\n        this.inputForm.onKeydown.subscribe(event => {\r\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setUpOnPasteListener\r\n     */\r\n    private setUpOnPasteListener() {\r\n        const input = this.inputForm.input.nativeElement;\r\n\r\n        // attach listener to input\r\n        this.renderer.listen(input, 'paste', (event) => {\r\n            this.onPasteCallback(event);\r\n\r\n            event.preventDefault();\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setUpTextChangeSubscriber\r\n     */\r\n    private setUpTextChangeSubscriber(): void {\r\n        this.inputForm.form\r\n            .valueChanges\r\n            .pipe(\r\n                debounceTime(this.onTextChangeDebounce)\r\n            )\r\n            .subscribe((value: { item: string }) => {\r\n                this.onTextChange.emit(value.item);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @name setUpOnBlurSubscriber\r\n     */\r\n    private setUpOnBlurSubscriber(): void {\r\n        const filterFn = (): boolean => {\r\n            const isVisible = this.dropdown && this.dropdown.isVisible;\r\n            return !isVisible && !!this.formValue;\r\n        };\r\n\r\n        this.inputForm\r\n            .onBlur\r\n            .pipe(\r\n                debounceTime(100),\r\n                filter(filterFn)\r\n            )\r\n            .subscribe(() => {\r\n                const reset = () => this.setInputValue('');\r\n\r\n                if (this.addOnBlur) {\r\n                    return this\r\n                        .onAddingRequested(false, this.formValue, undefined, true)\r\n                        .then(reset)\r\n                        .catch(reset);\r\n                }\r\n\r\n                reset();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @name findDupe\r\n     * @param tag\r\n     * @param isFromAutocomplete\r\n     */\r\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\r\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\r\n        const id = tag[identifyBy];\r\n\r\n        return this.items.find(item => this.getItemValue(item) === id);\r\n    }\r\n\r\n    /**\r\n     * @name onPasteCallback\r\n     * @param data\r\n     */\r\n    private onPasteCallback = async (data: ClipboardEvent) => {\r\n        interface IEWindow extends Window {\r\n            clipboardData: DataTransfer;\r\n        }\r\n\r\n        const getText = (): string => {\r\n            const isIE = Boolean((window as IEWindow & typeof globalThis).clipboardData);\r\n            const clipboardData = isIE ? (\r\n                (window as IEWindow & typeof globalThis).clipboardData\r\n            ) : data.clipboardData;\r\n            const type = isIE ? 'Text' : 'text/plain';\r\n            return clipboardData === null ? '' : clipboardData.getData(type) || '';\r\n        };\r\n\r\n        const text = getText();\r\n\r\n        const requests = text\r\n            .split(this.pasteSplitPattern)\r\n            .map(item => {\r\n                const tag = this.createTag(item);\r\n                this.setInputValue(tag[this.displayBy]);\r\n                return this.onAddingRequested(false, tag);\r\n            });\r\n\r\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\r\n\r\n        Promise.all(requests).then(() => {\r\n            this.onPaste.emit(text);\r\n            resetInput();\r\n        })\r\n            .catch(resetInput);\r\n    }\r\n\r\n    /**\r\n     * @name setAnimationMetadata\r\n     */\r\n    private setAnimationMetadata(): void {\r\n        this.animationMetadata = {\r\n            value: 'in',\r\n            params: { ...this.animationDuration }\r\n        };\r\n    }\r\n}\r\n","<div\r\n    [ngClass]=\"theme\"\r\n    class=\"ng2-tag-input\"\r\n    (click)=\"focus(true, false)\"\r\n    [attr.tabindex]=\"-1\"\r\n    (drop)=\"dragZone ? onTagDropped($event, undefined) : undefined\"\r\n    (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\r\n    (dragover)=\"dragZone ? onDragOver($event) : undefined\"\r\n    (dragend)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\r\n    [class.ng2-tag-input--dropping]=\"isDropping()\"\r\n    [class.ng2-tag-input--disabled]=\"disable\"\r\n    [class.ng2-tag-input--loading]=\"isLoading\"\r\n    [class.ng2-tag-input--invalid]=\"hasErrors()\"\r\n    [class.ng2-tag-input--focused]=\"isInputFocused()\"\r\n>\r\n\r\n    <!-- TAGS -->\r\n    <div class=\"ng2-tags-container\">\r\n        <tag\r\n            *ngFor=\"let item of items; let i = index; trackBy: trackBy\"\r\n            (onSelect)=\"selectItem(item)\"\r\n            (onRemove)=\"onRemoveRequested(item, i)\"\r\n            (onKeyDown)=\"handleKeydown($event)\"\r\n            (onTagEdited)=\"updateEditedTag($event)\"\r\n            (onBlur)=\"onTagBlurred($event, i)\"\r\n            draggable=\"{{ editable }}\"\r\n            (dragstart)=\"dragZone ? onDragStarted($event, item, i) : undefined\"\r\n            (drop)=\"dragZone ? onTagDropped($event, i) : undefined\"\r\n            (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\r\n            (dragover)=\"dragZone ? onDragOver($event, i) : undefined\"\r\n            (dragleave)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\r\n            [canAddTag]=\"isTagValid\"\r\n            [attr.tabindex]=\"0\"\r\n            [disabled]=\"disable\"\r\n            [@animation]=\"animationMetadata\"\r\n            [hasRipple]=\"ripple\"\r\n            [index]=\"i\"\r\n            [removable]=\"removable\"\r\n            [editable]=\"editable\"\r\n            [displayBy]=\"displayBy\"\r\n            [identifyBy]=\"identifyBy\"\r\n            [template]=\"!!hasCustomTemplate() ? templates.first : undefined\"\r\n            [draggable]=\"dragZone\"\r\n            [model]=\"item\"\r\n        >\r\n        </tag>\r\n\r\n        <tag-input-form\r\n            (onSubmit)=\"onFormSubmit()\"\r\n            (onBlur)=\"blur()\"\r\n            (click)=\"dropdown ? dropdown.show() : undefined\"\r\n            (onKeydown)=\"fireEvents('keydown', $event)\"\r\n            (onKeyup)=\"fireEvents('keyup', $event)\"\r\n            [(inputText)]=\"inputText\"\r\n            [disabled]=\"disable\"\r\n            [validators]=\"validators\"\r\n            [asyncValidators]=\"asyncValidators\"\r\n            [hidden]=\"maxItemsReached\"\r\n            [placeholder]=\"items.length ? placeholder : secondaryPlaceholder\"\r\n            [inputClass]=\"inputClass\"\r\n            [inputId]=\"inputId\"\r\n            [tabindex]=\"tabindex\"\r\n        >\r\n        </tag-input-form>\r\n    </div>\r\n\r\n    <div\r\n        class=\"progress-bar\"\r\n        *ngIf=\"isProgressBarVisible$ | async\"\r\n    ></div>\r\n</div>\r\n\r\n<!-- ERRORS -->\r\n<div\r\n    *ngIf=\"hasErrors()\"\r\n    [ngClass]=\"theme\"\r\n    class=\"error-messages\"\r\n>\r\n    <p\r\n        *ngFor=\"let error of errors\"\r\n        class=\"error-message\"\r\n    >\r\n        <span>{{ error }}</span>\r\n    </p>\r\n</div>\r\n<ng-content></ng-content>","export { TagRipple } from './tag-ripple.component';\r\nexport { TagComponent } from './tag.component';\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\n\r\nimport {\r\n    animate,\r\n    trigger,\r\n    style,\r\n    transition,\r\n    keyframes,\r\n    state\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'tag-ripple',\r\n    styles: [`\r\n        :host {\r\n            width: 100%;\r\n            height: 100%;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n        }\r\n\r\n        .tag-ripple {\r\n            background: rgba(0, 0, 0, 0.1);\r\n            top: 50%;\r\n            left: 50%;\r\n            height: 100%;\r\n            transform: translate(-50%, -50%);\r\n            position: absolute;\r\n        }\r\n    `],\r\n    template: `\r\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\r\n    `,\r\n    animations: [\r\n        trigger('ink', [\r\n            state('none', style({width: 0, opacity: 0})),\r\n            transition('none => clicked', [\r\n                animate(300, keyframes([\r\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\r\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\r\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\r\n                ]))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class TagRipple {\r\n    @Input() public state = 'none';\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    TemplateRef,\r\n    ElementRef,\r\n    HostListener,\r\n    HostBinding,\r\n    ViewChild,\r\n    ChangeDetectorRef,\r\n    Renderer2\r\n} from '@angular/core';\r\n\r\nimport { TagModel } from '../../core/accessor';\r\nimport { TagRipple } from '../tag/tag-ripple.component';\r\nimport { EventLike } from '../../core/helpers/event-like';\r\n\r\n// mocking navigator\r\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\r\n    userAgent: 'Chrome',\r\n    vendor: 'Google Inc'\r\n};\r\n\r\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\r\n@Component({\r\n    selector: 'tag',\r\n    templateUrl: './tag.template.html',\r\n    styleUrls: ['./tag-component.style.scss']\r\n})\r\nexport class TagComponent {\r\n    /**\r\n     * @name model {TagModel}\r\n     */\r\n    @Input()\r\n    public model: TagModel;\r\n\r\n    /**\r\n     * @name removable {boolean}\r\n     */\r\n    @Input()\r\n    public removable: boolean;\r\n\r\n    /**\r\n     * @name editable {boolean}\r\n     */\r\n    @Input()\r\n    public editable: boolean;\r\n\r\n    /**\r\n     * @name template {TemplateRef<any>}\r\n     */\r\n    @Input()\r\n    public template: TemplateRef<any>;\r\n\r\n    /**\r\n     * @name displayBy {string}\r\n     */\r\n    @Input()\r\n    public displayBy: string;\r\n\r\n    /**\r\n     * @name identifyBy {string}\r\n     */\r\n    @Input()\r\n    public identifyBy: string;\r\n\r\n    /**\r\n     * @name index {number}\r\n     */\r\n    @Input()\r\n    public index: number;\r\n\r\n    /**\r\n     * @name hasRipple\r\n     */\r\n    @Input()\r\n    public hasRipple: boolean;\r\n\r\n    /**\r\n     * @name disabled\r\n     */\r\n    @Input()\r\n    public disabled = false;\r\n\r\n    /**\r\n     * @name canAddTag\r\n     */\r\n    @Input()\r\n    public canAddTag: (tag: TagModel) => boolean;\r\n\r\n    /**\r\n     * @name onSelect\r\n     */\r\n    @Output()\r\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onRemove\r\n     */\r\n    @Output()\r\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onBlur\r\n     */\r\n    @Output()\r\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onKeyDown\r\n     */\r\n    @Output()\r\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n     * @name onTagEdited\r\n     */\r\n    @Output()\r\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name readonly {boolean}\r\n     */\r\n    public get readonly(): boolean {\r\n        return typeof this.model !== 'string' && this.model.readonly === true;\r\n    }\r\n\r\n    /**\r\n     * @name editing\r\n     */\r\n    public editing = false;\r\n\r\n    /**\r\n     * @name moving\r\n     */\r\n    @HostBinding('class.moving')\r\n    public moving: boolean;\r\n\r\n    /**\r\n     * @name rippleState\r\n     */\r\n    public rippleState = 'none';\r\n\r\n    /**\r\n     * @name ripple {TagRipple}\r\n     */\r\n    @ViewChild(TagRipple)\r\n    public ripple: TagRipple;\r\n\r\n    constructor(\r\n        public element: ElementRef,\r\n        public renderer: Renderer2,\r\n        private cdRef: ChangeDetectorRef\r\n    ) {}\r\n\r\n    /**\r\n     * @name select\r\n     */\r\n    public select($event?: MouseEvent): void {\r\n        if (this.readonly || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.focus();\r\n\r\n        this.onSelect.emit(this.model);\r\n    }\r\n\r\n    /**\r\n     * @name remove\r\n     */\r\n    public remove($event: MouseEvent): void {\r\n        $event.stopPropagation();\r\n        this.onRemove.emit(this);\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     */\r\n    public focus(): void {\r\n        this.element.nativeElement.focus();\r\n    }\r\n\r\n    public move(): void {\r\n        this.moving = true;\r\n    }\r\n\r\n    /**\r\n     * @name keydown\r\n     * @param event\r\n     */\r\n    @HostListener('keydown', ['$event'])\r\n    public keydown(event: EventLike): void {\r\n        if (this.editing) {\r\n            if (event.keyCode === 13) {\r\n                return this.disableEditMode(event);\r\n            }\r\n        } else {\r\n            this.onKeyDown.emit({ event, model: this.model });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name blink\r\n     */\r\n    public blink(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        classList.add('blink');\r\n\r\n        setTimeout(() => classList.remove('blink'), 50);\r\n    }\r\n\r\n    /**\r\n     * @name toggleEditMode\r\n     */\r\n    public toggleEditMode(): void {\r\n        if (this.editable) {\r\n            return this.editing ? undefined : this.activateEditMode();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name onBlurred\r\n     * @param event\r\n     */\r\n    public onBlurred(event: any): void {\r\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\r\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\r\n        if (!this.editable) {\r\n            return;\r\n        }\r\n\r\n        this.disableEditMode();\r\n\r\n        const value: string = event.target.innerText;\r\n        const result =\r\n            typeof this.model === 'string'\r\n                ? value\r\n                : { ...this.model, [this.displayBy]: value };\r\n\r\n        this.onBlur.emit(result);\r\n    }\r\n\r\n    /**\r\n     * @name getDisplayValue\r\n     * @param item\r\n     */\r\n    public getDisplayValue(item: TagModel): string {\r\n        return typeof item === 'string' ? item : item[this.displayBy];\r\n    }\r\n\r\n    /**\r\n     * @desc returns whether the ripple is visible or not\r\n     * only works in Chrome\r\n     * @name isRippleVisible\r\n     */\r\n    public get isRippleVisible(): boolean {\r\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\r\n    }\r\n\r\n    /**\r\n     * @name disableEditMode\r\n     * @param $event\r\n     */\r\n    public disableEditMode($event?: EventLike): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        const input = this.getContentEditableText();\r\n\r\n        this.editing = false;\r\n        classList.remove('tag--editing');\r\n\r\n        if (!input) {\r\n            this.setContentEditableText(this.model);\r\n            return;\r\n        }\r\n\r\n        this.storeNewValue(input);\r\n        this.cdRef.detectChanges();\r\n\r\n        if ($event) {\r\n            $event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name isDeleteIconVisible\r\n     */\r\n    public isDeleteIconVisible(): boolean {\r\n        return (\r\n            !this.readonly && !this.disabled && this.removable && !this.editing\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @name getContentEditableText\r\n     */\r\n    private getContentEditableText(): string {\r\n        const input = this.getContentEditable();\r\n\r\n        return input ? input.innerText.trim() : '';\r\n    }\r\n\r\n    /**\r\n     * @name setContentEditableText\r\n     * @param model\r\n     */\r\n    private setContentEditableText(model: TagModel) {\r\n        const input = this.getContentEditable();\r\n        const value = this.getDisplayValue(model);\r\n\r\n        input.innerText = value;\r\n    }\r\n\r\n    /**\r\n     * @name\r\n     */\r\n    private activateEditMode(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        classList.add('tag--editing');\r\n\r\n        this.editing = true;\r\n    }\r\n\r\n    /**\r\n     * @name storeNewValue\r\n     * @param input\r\n     */\r\n    private storeNewValue(input: string): void {\r\n        const exists = (tag: TagModel) => {\r\n            return typeof tag === 'string'\r\n                ? tag === input\r\n                : tag[this.displayBy] === input;\r\n        };\r\n\r\n        const hasId = () => {\r\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\r\n        };\r\n\r\n        // if the value changed, replace the value in the model\r\n        if (exists(this.model)) {\r\n            return;\r\n        }\r\n\r\n        const model =\r\n            typeof this.model === 'string'\r\n                ? input\r\n                : {\r\n                      index: this.index,\r\n                      [this.identifyBy]: hasId()\r\n                          ? this.model[this.identifyBy]\r\n                          : input,\r\n                      [this.displayBy]: input\r\n                  };\r\n\r\n        if (this.canAddTag(model)) {\r\n            this.onTagEdited.emit({ tag: model, index: this.index });\r\n        } else {\r\n            this.setContentEditableText(this.model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name getContentEditable\r\n     */\r\n    private getContentEditable(): HTMLInputElement {\r\n        return this.element.nativeElement.querySelector('[contenteditable]');\r\n    }\r\n}\r\n","<div (click)=\"select($event)\"\r\n     (dblclick)=\"toggleEditMode()\"\r\n     (mousedown)=\"rippleState='clicked'\"\r\n     (mouseup)=\"rippleState='none'\"\r\n     [ngSwitch]=\"!!template\"\r\n     [class.disabled]=\"disabled\"\r\n     [attr.tabindex]=\"-1\"\r\n     [attr.aria-label]=\"getDisplayValue(model)\">\r\n\r\n    <div *ngSwitchCase=\"true\" [attr.contenteditable]=\"editing\">\r\n        <!-- CUSTOM TEMPLATE -->\r\n        <ng-template\r\n            [ngTemplateOutletContext]=\"{ item: model, index: index }\"\r\n            [ngTemplateOutlet]=\"template\">\r\n        </ng-template>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"false\" class=\"tag-wrapper\">\r\n        <!-- TAG NAME -->\r\n        <div [attr.contenteditable]=\"editing\"\r\n             [attr.title]=\"getDisplayValue(model)\"\r\n             class=\"tag__text inline\"\r\n             spellcheck=\"false\"\r\n             (keydown.enter)=\"disableEditMode($event)\"\r\n             (keydown.escape)=\"disableEditMode($event)\"\r\n             (click)=\"editing ? $event.stopPropagation() : undefined\"\r\n             (blur)=\"onBlurred($event)\">\r\n            {{ getDisplayValue(model) }}\r\n        </div>\r\n\r\n        <!-- 'X' BUTTON -->\r\n        <delete-icon\r\n            aria-label=\"Remove tag\"\r\n            role=\"button\"\r\n            (click)=\"remove($event)\"\r\n            *ngIf=\"isDeleteIconVisible()\">\r\n        </delete-icon>\r\n    </div>\r\n</div>\r\n\r\n<tag-ripple [state]=\"rippleState\"\r\n            [attr.tabindex]=\"-1\"\r\n            *ngIf=\"isRippleVisible\">\r\n</tag-ripple>\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { Input, Directive } from '@angular/core';\r\nimport { OptionsProvider } from './providers/options-provider';\r\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\r\n\r\nexport class TagModelClass {\r\n    [key: string]: any;\r\n}\r\n\r\nexport type TagModel = string | TagModelClass;\r\n\r\nexport function isObject(obj: any): boolean {\r\n    return obj === Object(obj);\r\n}\r\n\r\n@Directive()\r\nexport class TagInputAccessor implements ControlValueAccessor {\r\n    private _items: TagModel[] = [];\r\n    private _onTouchedCallback: () => void;\r\n    private _onChangeCallback: (items: TagModel[]) => void;\r\n\r\n    public dropdown: TagInputDropdown;\r\n\r\n    /**\r\n     * @name displayBy\r\n     */\r\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\r\n\r\n    /**\r\n     * @name identifyBy\r\n     */\r\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\r\n\r\n    public get items(): TagModel[] {\r\n        return this._items;\r\n    }\r\n\r\n    public set items(items: TagModel[]) {\r\n        this._items = items;\r\n        this._onChangeCallback(this._items);\r\n    }\r\n\r\n    public onTouched() {\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    public writeValue(items: any[]) {\r\n        this._items = items || [];\r\n    }\r\n\r\n    public registerOnChange(fn: any) {\r\n        this._onChangeCallback = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n    /**\r\n     * @name getItemValue\r\n     * @param item\r\n     * @param fromDropdown\r\n     */\r\n    public getItemValue(item: TagModel, fromDropdown = false): string {\r\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\r\n        return isObject(item) ? item[property] : item;\r\n    }\r\n\r\n    /**\r\n     * @name getItemDisplay\r\n     * @param item\r\n     * @param fromDropdown\r\n     */\r\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\r\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\r\n        return isObject(item) ? item[property] : item;\r\n    }\r\n\r\n    /**\r\n     * @name getItemsWithout\r\n     * @param index\r\n     */\r\n    protected getItemsWithout(index: number): TagModel[] {\r\n        return this.items.filter((item, position) => position !== index);\r\n    }\r\n}\r\n","/*\r\n** constants and default values for <tag-input>\r\n */\r\n\r\nexport const PLACEHOLDER = '+ Tag';\r\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\r\nexport const KEYDOWN = 'keydown';\r\nexport const KEYUP = 'keyup';\r\nexport const FOCUS = 'focus';\r\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\r\n\r\nexport const ACTIONS_KEYS = {\r\n    DELETE: 'DELETE',\r\n    SWITCH_PREV: 'SWITCH_PREV',\r\n    SWITCH_NEXT: 'SWITCH_NEXT',\r\n    TAB: 'TAB'\r\n};\r\n\r\nexport const KEY_PRESS_ACTIONS = {\r\n    8: ACTIONS_KEYS.DELETE,\r\n    46: ACTIONS_KEYS.DELETE,\r\n    37: ACTIONS_KEYS.SWITCH_PREV,\r\n    39: ACTIONS_KEYS.SWITCH_NEXT,\r\n    9: ACTIONS_KEYS.TAB\r\n};\r\n\r\nexport const DRAG_AND_DROP_KEY = 'Text';\r\nexport const NEXT = 'NEXT';\r\nexport const PREV = 'PREV';\r\n\r\n","\r\n/**\r\n * @name listen\r\n * @param listenerType\r\n * @param action\r\n * @param condition\r\n */\r\nexport function listen(listenerType: string, action: () => any, condition = true): void {\r\n    // if the event provided does not exist, throw an error\r\n    if (!this.listeners.hasOwnProperty(listenerType)) {\r\n        throw new Error('The event entered may be wrong');\r\n    }\r\n\r\n    // if a condition is present and is false, exit early\r\n    if (!condition) {\r\n        return;\r\n    }\r\n\r\n    // fire listener\r\n    this.listeners[listenerType].push(action);\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n\r\n@Pipe({\r\n    name: 'highlight'\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n    /**\r\n     * @name transform\r\n     * @param value {string}\r\n     * @param arg {string}\r\n     */\r\n    public transform(value: string, arg: string): string {\r\n        if (!arg.trim()) {\r\n            return value;\r\n        }\r\n\r\n        try {\r\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\r\n            return value.replace(regex, '<b>$1</b>');\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\r\nimport { TagModel } from '../accessor';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport declare interface DraggedTag {\r\n    index: number;\r\n    tag: TagModel;\r\n    zone: string;\r\n}\r\n\r\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\r\n\r\nexport declare interface State {\r\n    dragging: boolean;\r\n    dropping: boolean;\r\n    index: number | undefined;\r\n}\r\n\r\nexport declare type StateProperty = keyof State;\r\n\r\n@Injectable()\r\nexport class DragProvider {\r\n    public sender: TagInputComponent;\r\n    public receiver: TagInputComponent;\r\n\r\n    public state: State = {\r\n        dragging: false,\r\n        dropping: false,\r\n        index: undefined\r\n    };\r\n\r\n    /**\r\n     * @name setDraggedItem\r\n     * @param event\r\n     * @param tag\r\n     */\r\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\r\n        if (event && event.dataTransfer) {\r\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name getDraggedItem\r\n     * @param event\r\n     */\r\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\r\n        if (event && event.dataTransfer) {\r\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\r\n            try {\r\n                return JSON.parse(data) as DraggedTag;\r\n            } catch {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name setSender\r\n     * @param sender\r\n     */\r\n    public setSender(sender: TagInputComponent): void {\r\n        this.sender = sender;\r\n    }\r\n\r\n    /**\r\n     * @name setReceiver\r\n     * @param receiver\r\n     */\r\n    public setReceiver(receiver: TagInputComponent): void {\r\n        this.receiver = receiver;\r\n    }\r\n\r\n    /**\r\n     * @name onTagDropped\r\n     * @param tag\r\n     * @param indexDragged\r\n     * @param indexDropped\r\n     */\r\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\r\n        this.onDragEnd();\r\n\r\n        this.sender.onRemoveRequested(tag, indexDragged);\r\n        this.receiver.onAddingRequested(false, tag, indexDropped);\r\n    }\r\n\r\n    /**\r\n     * @name setState\r\n     * @param state\r\n     */\r\n    public setState(state: { [K in StateProperty]?: State[K] }): void {\r\n        this.state = { ...this.state, ...state };\r\n    }\r\n\r\n    /**\r\n     * @name getState\r\n     * @param key\r\n     */\r\n    public getState(key?: StateProperty): State | State[StateProperty] {\r\n        return key ? this.state[key] : this.state;\r\n    }\r\n\r\n    /**\r\n     * @name onDragEnd\r\n     */\r\n    public onDragEnd(): void {\r\n        this.setState({\r\n            dragging: false,\r\n            dropping: false,\r\n            index: undefined\r\n        });\r\n    }\r\n}\r\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\r\n\r\nexport type Options = {\r\n    tagInput?: {\r\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\r\n    };\r\n    dropdown?: {\r\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\r\n    }\r\n};\r\n\r\nexport class OptionsProvider {\r\n    public static defaults = defaults;\r\n\r\n    public setOptions(options: Options): void {\r\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\r\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\r\n    }\r\n}\r\n\r\nexport { TagInputDropdownOptions, TagInputOptions };\r\n","import { Observable } from 'rxjs';\r\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\r\n\r\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\r\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\r\nimport { TagModel } from './core/accessor';\r\n\r\nexport interface TagInputOptions {\r\n    separatorKeys: string[];\r\n    separatorKeyCodes: number[];\r\n    maxItems: number;\r\n    placeholder: string;\r\n    secondaryPlaceholder: string;\r\n    validators: ValidatorFn[];\r\n    asyncValidators: AsyncValidatorFn[];\r\n    onlyFromAutocomplete: boolean;\r\n    errorMessages: { [key: string]: string; };\r\n    theme: '';\r\n    onTextChangeDebounce: number;\r\n    inputId: string | null;\r\n    inputClass: string;\r\n    clearOnBlur: boolean;\r\n    hideForm: boolean;\r\n    addOnBlur: boolean;\r\n    addOnPaste: boolean;\r\n    pasteSplitPattern: string | RegExp;\r\n    blinkIfDupe: boolean;\r\n    removable: boolean;\r\n    editable: boolean;\r\n    allowDupes: boolean;\r\n    modelAsStrings: boolean;\r\n    trimTags: boolean;\r\n    ripple: boolean;\r\n    tabIndex: string;\r\n    disable: boolean;\r\n    dragZone: string;\r\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\r\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\r\n    displayBy: string;\r\n    identifyBy: string;\r\n    animationDuration: {\r\n        enter: string,\r\n        leave: string\r\n    };\r\n}\r\n\r\nexport interface TagInputDropdownOptions {\r\n    displayBy: string;\r\n    identifyBy: string;\r\n    appendToBody: boolean;\r\n    offset: string;\r\n    focusFirstElement: boolean;\r\n    showDropdownIfEmpty: boolean;\r\n    minimumTextLength: number;\r\n    limitItemsTo: number;\r\n    keepOpen: boolean;\r\n    zIndex: number;\r\n    dynamicUpdate: boolean;\r\n    matchingFn: (value: string, target: TagModel) => boolean;\r\n}\r\n\r\nexport const defaults = {\r\n    tagInput: <TagInputOptions>{\r\n        separatorKeys: [],\r\n        separatorKeyCodes: [],\r\n        maxItems: Infinity,\r\n        placeholder: PLACEHOLDER,\r\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\r\n        validators: [],\r\n        asyncValidators: [],\r\n        onlyFromAutocomplete: false,\r\n        errorMessages: {},\r\n        theme: '',\r\n        onTextChangeDebounce: 250,\r\n        inputId: null,\r\n        inputClass: '',\r\n        clearOnBlur: false,\r\n        hideForm: false,\r\n        addOnBlur: false,\r\n        addOnPaste: false,\r\n        pasteSplitPattern: ',',\r\n        blinkIfDupe: true,\r\n        removable: true,\r\n        editable: false,\r\n        allowDupes: false,\r\n        modelAsStrings: false,\r\n        trimTags: true,\r\n        ripple: true,\r\n        tabIndex: '',\r\n        disable: false,\r\n        dragZone: '',\r\n        onRemoving: undefined,\r\n        onAdding: undefined,\r\n        displayBy: 'display',\r\n        identifyBy: 'value',\r\n        animationDuration: {\r\n            enter: '250ms',\r\n            leave: '150ms'\r\n        }\r\n    },\r\n    dropdown: <TagInputDropdownOptions>{\r\n        displayBy: 'display',\r\n        identifyBy: 'value',\r\n        appendToBody: true,\r\n        offset: '50 0',\r\n        focusFirstElement: false,\r\n        showDropdownIfEmpty: false,\r\n        minimumTextLength: 1,\r\n        limitItemsTo: Infinity,\r\n        keepOpen: true,\r\n        dynamicUpdate: true,\r\n        zIndex: 1000,\r\n        matchingFn\r\n    }\r\n};\r\n\r\n/**\r\n * @name matchingFn\r\n * @param this\r\n * @param value\r\n * @param target\r\n */\r\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\r\n    const targetValue = target[this.displayBy].toString();\r\n\r\n    return targetValue && targetValue\r\n        .toLowerCase()\r\n        .indexOf(value.toLowerCase()) >= 0;\r\n}\r\n","export { TagInputModule } from './tag-input.module';\r\nexport {\r\n    TagInputDropdown, DeleteIconComponent, TagInputForm, TagRipple, TagComponent, TagInputComponent\r\n} from './components/index';\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\r\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\r\nimport { DragProvider } from './core/providers/drag-provider';\r\nimport { OptionsProvider, Options } from './core/providers/options-provider';\r\nimport { TagInputComponent } from './components/tag-input/tag-input';\r\nimport { DeleteIconComponent } from './components/icon/icon';\r\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\r\nimport { TagComponent } from './components/tag/tag.component';\r\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\r\nimport { TagRipple } from './components/tag/tag-ripple.component';\r\n\r\nconst optionsProvider = new OptionsProvider();\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        Ng2DropdownModule\r\n    ],\r\n    declarations: [\r\n        TagInputComponent,\r\n        DeleteIconComponent,\r\n        TagInputForm,\r\n        TagComponent,\r\n        HighlightPipe,\r\n        TagInputDropdown,\r\n        TagRipple\r\n    ],\r\n    exports: [\r\n        TagInputComponent,\r\n        DeleteIconComponent,\r\n        TagInputForm,\r\n        TagComponent,\r\n        HighlightPipe,\r\n        TagInputDropdown,\r\n        TagRipple\r\n    ],\r\n    providers: [\r\n        DragProvider,\r\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\r\n    ]\r\n})\r\nexport class TagInputModule {\r\n    /**\r\n     * @name withDefaults\r\n     * @param options {Options}\r\n     */\r\n    public static withDefaults(options: Options): void {\r\n        optionsProvider.setOptions(options);\r\n    }\r\n}\r\n"]}