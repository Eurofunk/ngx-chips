{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./demo/app.module.ts","./demo/home/home.ts","./demo/home/home.html","./demo/main.ts","./modules/components/dropdown/index.ts","./modules/components/dropdown/tag-input-dropdown.component.ts","./modules/components/dropdown/tag-input-dropdown.template.html","./modules/components/icon/icon.ts","./modules/components/icon/icon.html","./modules/components/icon/index.ts","./modules/components/index.ts","./modules/components/tag-input-form/index.ts","./modules/components/tag-input-form/tag-input-form.component.ts","./modules/components/tag-input-form/tag-input-form.template.html","./modules/components/tag-input/animations.ts","./modules/components/tag-input/index.ts","./modules/components/tag-input/tag-input.ts","./modules/components/tag-input/tag-input.template.html","./modules/components/tag/index.ts","./modules/components/tag/tag-ripple.component.ts","./modules/components/tag/tag.component.ts","./modules/components/tag/tag.template.html","./modules/core/accessor.ts","./modules/core/constants/index.ts","./modules/core/helpers/listen.ts","./modules/core/pipes/highlight.pipe.ts","./modules/core/providers/drag-provider.ts","./modules/core/providers/options-provider.ts","./modules/defaults.ts","./modules/index.ts","./modules/tag-input.module.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","\r\nimport { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { TagInputModule } from '../modules';\r\nimport { Home } from './home/home';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nTagInputModule.withDefaults({\r\n    tagInput: {\r\n        placeholder: 'Add new tag'\r\n    }\r\n});\r\n\r\n@NgModule({\r\n    imports: [\r\n        BrowserModule,\r\n        BrowserAnimationsModule,\r\n        CommonModule,\r\n        HttpClientModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        TagInputModule\r\n    ],\r\n    declarations: [Home],\r\n    bootstrap: [Home],\r\n    entryComponents: [Home]\r\n})\r\nexport class AppModule { }\r\n","import {Component} from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {FormBuilder, FormControl, FormGroup} from '@angular/forms';\r\nimport {filter, map} from 'rxjs/operators';\r\nimport {Observable, of} from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'app',\r\n    styleUrls: ['./home.scss'],\r\n    templateUrl: './home.html'\r\n})\r\nexport class Home {\r\n    form: FormGroup;\r\n\r\n    constructor(private http: HttpClient) {\r\n        this.form = new FormBuilder().group({\r\n            chips: [['chip'], []]\r\n        });\r\n    }\r\n\r\n    disabled = true;\r\n\r\n    items = ['Javascript', 'Typescript'];\r\n\r\n    inputText = 'text';\r\n\r\n    itemsAsObjects = [{id: 0, name: 'Angular', readonly: true}, {id: 1, name: 'React'}];\r\n\r\n    autocompleteItems = ['Javascript', 'Typescript', 'Rust', 'Go'];\r\n\r\n    autocompleteItemsAsObjects = [\r\n        {value: 'Item1', id: 0, extra: 0},\r\n        {value: 'item2', id: 1, extra: 1},\r\n        'item3'\r\n    ];\r\n\r\n    dragAndDropExample = ['C#', 'Java'];\r\n\r\n    dragAndDropObjects = [{display: 'Javascript', value: 'Javascript'}, {display: 'Typescript', value: 'Typescript'}];\r\n    dragAndDropStrings = ['CoffeScript', 'Scala.js'];\r\n\r\n    public requestAutocompleteItems = (text: string): Observable<any> => {\r\n        const url = `https://api.github.com/search/repositories?q=${text}`;\r\n        return this.http\r\n            .get<any>(url)\r\n            .pipe(map(items => items.map(item => item.full_name)));\r\n    }\r\n\r\n    public requestAutocompleteItemsFake = (text: string): Observable<string[]> => {\r\n        return of([\r\n            'item1', 'item2', 'item3'\r\n        ]);\r\n    }\r\n\r\n    public options = {\r\n        readonly: undefined,\r\n        placeholder: '+ Tag'\r\n    };\r\n\r\n    public onAdd(item) {\r\n        console.log('tag added: value is ' + item);\r\n    }\r\n\r\n    public onRemove(item) {\r\n        console.log('tag removed: value is ' + item);\r\n    }\r\n\r\n    public onSelect(item) {\r\n        console.log('tag selected: value is ' + item);\r\n    }\r\n\r\n    public onFocus(item) {\r\n        console.log('input focused: current value is ' + item);\r\n    }\r\n\r\n    public onTextChange(text) {\r\n        console.log('text changed: value is ' + text);\r\n    }\r\n\r\n    public onBlur(item) {\r\n        console.log('input blurred: current value is ' + item);\r\n    }\r\n\r\n    public onTagEdited(item) {\r\n        console.log('tag edited: current value is ' + item);\r\n    }\r\n\r\n    public onValidationError(item) {\r\n        console.log('invalid tag ' + item);\r\n    }\r\n\r\n    public transform(value: string): Observable<object> {\r\n        const item = {display: `@${value}`, value: `@${value}`};\r\n        return of(item);\r\n    }\r\n\r\n    private startsWithAt(control: FormControl) {\r\n        if (control.value.charAt(0) !== '@') {\r\n            return {\r\n                'startsWithAt@': true\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private endsWith$(control: FormControl) {\r\n        if (control.value.charAt(control.value.length - 1) !== '$') {\r\n            return {\r\n                'endsWith$': true\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    private validateAsync(control: FormControl): Promise<any> {\r\n        return new Promise(resolve => {\r\n            const value = control.value;\r\n            const result: any = isNaN(value) ? {\r\n                isNan: true\r\n            } : null;\r\n\r\n            setTimeout(() => {\r\n                resolve(result);\r\n            }, 400);\r\n        });\r\n    }\r\n\r\n    public asyncErrorMessages = {\r\n        isNan: 'Please only add numbers'\r\n    };\r\n\r\n    public validators = [this.startsWithAt, this.endsWith$];\r\n\r\n    public asyncValidators = [this.validateAsync];\r\n\r\n    public errorMessages = {\r\n        'startsWithAt@': 'Your items need to start with \\'@\\'',\r\n        'endsWith$': 'Your items need to end with \\'$\\''\r\n    };\r\n\r\n    public onAdding(tag): Observable<any> {\r\n        const confirm = window.confirm('Do you really want to add this tag?');\r\n        return of(tag)\r\n            .pipe(filter(() => confirm));\r\n    }\r\n\r\n    public onRemoving(tag): Observable<any> {\r\n        const confirm = window.confirm('Do you really want to remove this tag?');\r\n        return of(tag)\r\n            .pipe(filter(() => confirm));\r\n    }\r\n\r\n    public asyncOnAdding(tag): Observable<any> {\r\n        const confirm = window.confirm('Do you really want to add this tag?');\r\n        return of(tag)\r\n            .pipe(filter(() => confirm));\r\n    }\r\n\r\n    public insertInputTag(): void {\r\n        if (this.inputText) {\r\n            this.items.push(this.inputText);\r\n\r\n            this.inputText = '';\r\n        }\r\n    }\r\n}\r\n","<main>\r\n    <div class=\"home-container\">\r\n        <div>\r\n            <h3>Simple Input with two items</h3>\r\n            <tag-input [(ngModel)]=\"items\"\r\n                       (onSelect)=\"onSelect($event)\"\r\n                       [modelAsStrings]=\"true\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Partially editable input with two items as objects</h3>\r\n            <tag-input [(ngModel)]=\"itemsAsObjects\"\r\n                       [identifyBy]=\"'id'\"\r\n                       [displayBy]=\"'name'\"></tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Simple Input with not removable items</h3>\r\n            <tag-input [ngModel]=\"items\" [removable]=\"false\"></tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Simple Input with editable items</h3>\r\n            <tag-input [(ngModel)]=\"items\"\r\n                       [editable]=\"true\"\r\n                       (onTagEdited)=\"onTagEdited($event)\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Simple Input with editable items as objects</h3>\r\n            {{itemsAsObjects|json}}\r\n            <tag-input [(ngModel)]=\"itemsAsObjects\"\r\n                       [editable]=\"true\"\r\n                       [identifyBy]=\"'id'\"\r\n                       [displayBy]=\"'name'\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Input tag that allows max 3 tags</h3>\r\n            <tag-input [ngModel]=\"['Javascript', 'Typescript']\"\r\n                       [maxItems]=\"3\"\r\n                       [ripple]=\"false\"\r\n                       placeholder=\"Insert a new item\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>An input which requires all tags to start with '@' and end with '$'</h3>\r\n            <tag-input [ngModel]=\"['@item']\"\r\n                       [errorMessages]=\"errorMessages\"\r\n                       [validators]=\"validators\">\r\n                <tag-input-dropdown [autocompleteItems]=\"['@item$', 'item']\">\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>An input which will transform the value of all added tags prepending '@' to the tag</h3>\r\n            <tag-input [ngModel]=\"['@item']\" [onAdding]=\"transform\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags within an autocomplete component (clear on blur events)</h3>\r\n            <tag-input [ngModel]=\"['@item']\"\r\n                       [clearOnBlur]=\"true\">\r\n                <tag-input-dropdown [focusFirstElement]=\"true\" [autocompleteItems]=\"autocompleteItems\">\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags accepting only items from an autocomplete</h3>\r\n            <tag-input [ngModel]=\"['@item']\"\r\n                       [onlyFromAutocomplete]=\"true\">\r\n                <tag-input-dropdown [showDropdownIfEmpty]=\"true\"\r\n                                    [dynamicUpdate]=\"false\"\r\n                                    [focusFirstElement]=\"true\"\r\n                                    [displayBy]=\"'value'\"\r\n                                    [identifyBy]=\"'id'\"\r\n                                    [autocompleteItems]=\"autocompleteItemsAsObjects\">\r\n                    <ng-template let-item=\"item\" let-index=\"index\">\r\n                        ({{ index }}) {{ item.id }}: {{ item.value }}\r\n                    </ng-template>\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags accepting only items from an autocomplete using a remote endpoint</h3>\r\n            <tag-input [ngModel]=\"[]\"\r\n                       [placeholder]=\"'Enter a new repo'\"\r\n                       [onTextChangeDebounce]=\"500\"\r\n                       [secondaryPlaceholder]=\"'Search in Github'\"\r\n                       [onlyFromAutocomplete]=\"true\">\r\n                <tag-input-dropdown\r\n                    [autocompleteObservable]=\"requestAutocompleteItems\"\r\n                    [minimumTextLength]=\"0\">\r\n                    <ng-template let-item=\"item\" let-index=\"index\">\r\n                        {{ item.display }}\r\n                    </ng-template>\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags accepting only items from an autocomplete using an observable and showing dropdown without entering text</h3>\r\n            <tag-input [ngModel]=\"items\" [onlyFromAutocomplete]=\"true\">\r\n                <tag-input-dropdown\r\n                    [showDropdownIfEmpty]=\"true\"\r\n                    [autocompleteObservable]=\"requestAutocompleteItemsFake\">\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags dropdown with last provided</h3>\r\n            <tag-input [ngModel]=\"[]\"\r\n                       [placeholder]=\"'Enter a new repo'\"\r\n                       [secondaryPlaceholder]=\"'Search in Github'\"\r\n                       [onlyFromAutocomplete]=\"true\">\r\n                <tag-input-dropdown [autocompleteObservable]=\"requestAutocompleteItems\">\r\n                    <ng-template let-item=\"item\" let-index=\"index\" let-last=\"last\">\r\n                        ({{ index }}) {{ item.id }}: {{ item.value }} # {{ last }}\r\n                    </ng-template>\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>An input which allows adding items by pressing the key \"space\" of your keyboard</h3>\r\n            <tag-input [ngModel]=\"['@item']\"\r\n                       [inputClass]=\"'myinput'\"\r\n                       [inputId]=\"'myinputId'\"\r\n                       [separatorKeyCodes]=\"[32, 188]\"\r\n            >\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags custom template</h3>\r\n            <tag-input [ngModel]=\"['@item']\"\r\n                       [modelAsStrings]=\"true\"\r\n                       #input\r\n                       (onTextChange)=\"onTextChange($event)\">\r\n                <ng-template item-template let-item=\"item\" let-index=\"index\">\r\n                    <span>\r\n                        item: {{ item }}\r\n                    </span>\r\n\r\n                    <span (click)=\"input.removeItem(item, index)\" class=\"ng2-tag__remove-button\">\r\n                        x\r\n                    </span>\r\n                </ng-template>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div style=\"z-index: 1100; background: #fafafa\">\r\n            <h3>Input with custom item template and custom dropdown item template</h3>\r\n            {{ itemsAsObjects | json }}\r\n            <tag-input [(ngModel)]=\"itemsAsObjects\"\r\n                       [displayBy]=\"'name'\"\r\n                       [identifyBy]=\"'id'\">\r\n                <ng-template let-item=\"item\">\r\n                    tag: {{ item.name }}\r\n                </ng-template>\r\n                <tag-input-dropdown\r\n                    [autocompleteItems]=\"autocompleteItemsAsObjects\"\r\n                    [dynamicUpdate]=\"false\"\r\n                    [zIndex]=\"10000\"\r\n                    [displayBy]=\"'value'\"\r\n                    [identifyBy]=\"'id'\">\r\n                    <ng-template let-item=\"item\" let-index=\"index\">\r\n                        dropdown: {{ item.value }}\r\n                    </ng-template>\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags within a form element with outputs</h3>\r\n            <form>\r\n                <tag-input\r\n                    (onBlur)=\"onBlur($event)\"\r\n                    (onFocus)=\"onFocus($event)\"\r\n                    (onTextChange)=\"onTextChange($event)\"\r\n                    (onValidationError)=\"onValidationError($event)\"\r\n                    [ngModel]=\"['@item']\"\r\n                    name=\"items\"></tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags within a form group</h3>\r\n            <form [formGroup]=\"form\">\r\n                <tag-input\r\n                    [disable]=\"true\"\r\n                    [formControlName]=\"'chips'\"\r\n                    name=\"items\">\r\n                </tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags with theme minimal</h3>\r\n            <form>\r\n                <tag-input\r\n                    [theme]=\"'minimal'\"\r\n                    [ngModel]=\"['@item']\"\r\n                    name=\"items\"></tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags with theme dark and pasteable items</h3>\r\n            <form>\r\n                <tag-input\r\n                    [addOnPaste]=\"true\"\r\n                    [pasteSplitPattern]=\"'-'\"\r\n                    [theme]=\"'dark'\"\r\n                    [ngModel]=\"['@item']\"\r\n                    name=\"items\"></tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags with Bootstrap theme</h3>\r\n            <form>\r\n                <tag-input\r\n                    [theme]=\"'bootstrap'\"\r\n                    [ngModel]=\"['@item']\"\r\n                    name=\"items\">\r\n                </tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags with user-defined Foundation theme</h3>\r\n            <tag-input [ngModel]=\"items\"\r\n                       [theme]=\"'foundation-theme'\"\r\n                       [modelAsStrings]=\"true\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Tags with Bootstrap 3 (info) theme</h3>\r\n            <form>\r\n                <tag-input\r\n                    [theme]=\"'bootstrap3-info'\"\r\n                    [ngModel]=\"['@item']\"\r\n                    name=\"items\">\r\n                </tag-input>\r\n            </form>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Simple Input that allows dupes</h3>\r\n            <tag-input [(ngModel)]=\"items\" [allowDupes]=\"true\"></tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Input with two-way data binding for its input text</h3>\r\n\r\n            <input [(ngModel)]=\"inputText\" (keyup.enter)=\"insertInputTag()\"/>\r\n\r\n            <tag-input [(ngModel)]=\"items\" [(inputText)]=\"inputText\"></tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Disabled tag input</h3>\r\n\r\n            Disable: <input type=\"checkbox\" [(ngModel)]=\"disabled\" />\r\n\r\n            <tag-input [ngModel]=\"items\"\r\n                       [disable]=\"disabled\">\r\n                <tag-input-dropdown [autocompleteItems]=\"autocompleteItems\">\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Drag and drop</h3>\r\n            <tag-input  [(ngModel)]=\"dragAndDropExample\"\r\n                        [modelAsStrings]=\"true\"\r\n                        [dragZone]=\"'zone1'\"\r\n                        [editable]=\"true\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Drag and drop (as string) can be moved to another tag-input (to the next)</h3>\r\n            <tag-input  [(ngModel)]=\"dragAndDropStrings\"\r\n                        [modelAsStrings]=\"true\"\r\n                        [dragZone]=\"'zone1'\"\r\n                        [editable]=\"true\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Drag and drop (as object) can be moved to another tag-input (to the previous)</h3>\r\n            <tag-input  [(ngModel)]=\"dragAndDropObjects\"\r\n                        [dragZone]=\"'zone1'\"\r\n                        [editable]=\"true\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Confirm adding and removing tags with Observables</h3>\r\n            <tag-input [ngModel]=\"['item1']\"\r\n                       [dragZone]=\"'zone1'\"\r\n                       [modelAsStrings]=\"true\"\r\n                       [onRemoving]=\"onRemoving\"\r\n                       [onAdding]=\"onAdding\">\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            <h3>Form using an async validator</h3>\r\n            <tag-input [ngModel]=\"['item1']\"\r\n                       [errorMessages]=\"asyncErrorMessages\"\r\n                       [addOnPaste]=\"true\"\r\n                       [asyncValidators]=\"asyncValidators\">\r\n                <tag-input-dropdown [autocompleteItems]=\"['1','2']\"></tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n\r\n        <div>\r\n            {{ items | json }}\r\n            <h3>Autocomplete items using onAdding</h3>\r\n            <tag-input [(ngModel)]=\"items\" [onlyFromAutocomplete]=\"true\" [onAdding]=\"asyncOnAdding\">\r\n                <tag-input-dropdown\r\n                    [autocompleteItems]=\"autocompleteItemsAsObjects\"\r\n                    [displayBy]=\"'value'\"\r\n                    [identifyBy]=\"'id'\">\r\n                </tag-input-dropdown>\r\n            </tag-input>\r\n        </div>\r\n    </div>\r\n</main>\r\n","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\nimport { AppModule } from './app.module';\r\n\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule, {\r\n    ngZoneEventCoalescing: true,\r\n})\r\n  .catch(err => console.error(err));\r\n","export { TagInputDropdown } from './tag-input-dropdown.component';\r\n","import {\r\n  Component,\r\n  ContentChildren,\r\n  EventEmitter,\r\n  HostListener,\r\n  Injector,\r\n  Input,\r\n  QueryList,\r\n  TemplateRef,\r\n  ViewChild,\r\n  AfterViewInit\r\n} from '@angular/core';\r\n\r\n// rx\r\nimport { Observable } from 'rxjs';\r\nimport { filter, first, debounceTime, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { Ng2Dropdown, Ng2MenuItem } from 'ng2-material-dropdown';\r\nimport { defaults } from '../../defaults';\r\nimport { TagModel } from '../../core/accessor';\r\nimport { TagInputComponent } from '../tag-input/tag-input';\r\n\r\n@Component({\r\n  selector: 'tag-input-dropdown',\r\n  templateUrl: './tag-input-dropdown.template.html'\r\n})\r\nexport class TagInputDropdown implements AfterViewInit {\r\n  /**\r\n   * @name dropdown\r\n   */\r\n  @ViewChild(Ng2Dropdown) public dropdown: Ng2Dropdown;\r\n\r\n  /**\r\n   * @name menuTemplate\r\n   * @desc reference to the template if provided by the user\r\n   */\r\n  @ContentChildren(TemplateRef) public templates: QueryList<TemplateRef<any>>;\r\n\r\n  /**\r\n   * @name offset\r\n   */\r\n  @Input() public offset: string = defaults.dropdown.offset;\r\n\r\n  /**\r\n   * @name focusFirstElement\r\n   */\r\n  @Input() public focusFirstElement = defaults.dropdown.focusFirstElement;\r\n\r\n  /**\r\n   * - show autocomplete dropdown if the value of input is empty\r\n   * @name showDropdownIfEmpty\r\n   */\r\n  @Input() public showDropdownIfEmpty = defaults.dropdown.showDropdownIfEmpty;\r\n\r\n  /**\r\n   * @description observable passed as input which populates the autocomplete items\r\n   * @name autocompleteObservable\r\n   */\r\n  @Input() public autocompleteObservable: (text: string) => Observable<any>;\r\n\r\n  /**\r\n   * - desc minimum text length in order to display the autocomplete dropdown\r\n   * @name minimumTextLength\r\n   */\r\n  @Input() public minimumTextLength = defaults.dropdown.minimumTextLength;\r\n\r\n  /**\r\n   * - number of items to display in the autocomplete dropdown\r\n   * @name limitItemsTo\r\n   */\r\n  @Input() public limitItemsTo: number = defaults.dropdown.limitItemsTo;\r\n\r\n  /**\r\n   * @name displayBy\r\n   */\r\n  @Input() public displayBy = defaults.dropdown.displayBy;\r\n\r\n  /**\r\n   * @name identifyBy\r\n   */\r\n  @Input() public identifyBy = defaults.dropdown.identifyBy;\r\n\r\n  /**\r\n   * @description a function a developer can use to implement custom matching for the autocomplete\r\n   * @name matchingFn\r\n   */\r\n  @Input() public matchingFn: (value: string, target: TagModel) => boolean =\r\n    defaults.dropdown.matchingFn;\r\n\r\n  /**\r\n   * @name appendToBody\r\n   */\r\n  @Input() public appendToBody = defaults.dropdown.appendToBody;\r\n\r\n  /**\r\n   * @name keepOpen\r\n   * @description option to leave dropdown open when adding a new item\r\n   */\r\n  @Input() public keepOpen = defaults.dropdown.keepOpen;\r\n\r\n  /**\r\n   * @name dynamicUpdate\r\n   */\r\n  @Input() public dynamicUpdate = defaults.dropdown.dynamicUpdate;\r\n\r\n  /**\r\n   * @name zIndex\r\n   */\r\n  @Input() public zIndex = defaults.dropdown.zIndex;\r\n\r\n  /**\r\n   * list of items that match the current value of the input (for autocomplete)\r\n   * @name items\r\n   */\r\n  public items: TagModel[] = [];\r\n\r\n  /**\r\n   * @name tagInput\r\n   */\r\n  public tagInput: TagInputComponent = this.injector.get(TagInputComponent);\r\n\r\n  /**\r\n   * @name _autocompleteItems\r\n   */\r\n  private _autocompleteItems: TagModel[] = [];\r\n\r\n  /**\r\n   * @name autocompleteItems\r\n   * @param items\r\n   */\r\n  public set autocompleteItems(items: TagModel[]) {\r\n    this._autocompleteItems = items;\r\n  }\r\n\r\n  /**\r\n   * @name autocompleteItems\r\n   * @desc array of items that will populate the autocomplete\r\n   */\r\n  @Input() public get autocompleteItems(): TagModel[] {\r\n    const items = this._autocompleteItems;\r\n\r\n    if (!items) {\r\n      return [];\r\n    }\r\n\r\n    return items.map((item: TagModel) => {\r\n      return typeof item === 'string'\r\n        ? {\r\n            [this.displayBy]: item,\r\n            [this.identifyBy]: item\r\n          }\r\n        : item;\r\n    });\r\n  }\r\n\r\n  constructor(private readonly injector: Injector) {}\r\n\r\n  /**\r\n   * @name ngAfterviewInit\r\n   */\r\n  ngAfterViewInit(): void {\r\n    this.onItemClicked().subscribe((item: Ng2MenuItem) => {\r\n      this.requestAdding(item);\r\n    });\r\n\r\n    // reset itemsMatching array when the dropdown is hidden\r\n    this.onHide().subscribe(this.resetItems);\r\n\r\n    const DEBOUNCE_TIME = 200;\r\n    const KEEP_OPEN = this.keepOpen;\r\n\r\n    this.tagInput.onTextChange\r\n      .asObservable()\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n        debounceTime(DEBOUNCE_TIME),\r\n        filter((value: string) => {\r\n          if (KEEP_OPEN === false) {\r\n            return value.length > 0;\r\n          }\r\n\r\n          return true;\r\n        })\r\n      )\r\n      .subscribe(this.show);\r\n  }\r\n\r\n  /**\r\n   * @name updatePosition\r\n   */\r\n  public updatePosition(): void {\r\n    const position = this.tagInput.inputForm.getElementPosition();\r\n\r\n    this.dropdown.menu.updatePosition(position, this.dynamicUpdate);\r\n  }\r\n\r\n  /**\r\n   * @name isVisible\r\n   */\r\n  public get isVisible(): boolean {\r\n    return this.dropdown.menu.dropdownState.menuState.isVisible;\r\n  }\r\n\r\n  /**\r\n   * @name onHide\r\n   */\r\n  public onHide(): EventEmitter<Ng2Dropdown> {\r\n    return this.dropdown.onHide;\r\n  }\r\n\r\n  /**\r\n   * @name onItemClicked\r\n   */\r\n  public onItemClicked(): EventEmitter<string> {\r\n    return this.dropdown.onItemClicked;\r\n  }\r\n\r\n  /**\r\n   * @name selectedItem\r\n   */\r\n  public get selectedItem(): Ng2MenuItem {\r\n    return this.dropdown.menu.dropdownState.dropdownState.selectedItem;\r\n  }\r\n\r\n  /**\r\n   * @name state\r\n   */\r\n  public get state(): any {\r\n    return this.dropdown.menu.dropdownState;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @name show\r\n   */\r\n  public show = (): void => {\r\n    const maxItemsReached =\r\n      this.tagInput.items.length === this.tagInput.maxItems;\r\n    const value = this.getFormValue();\r\n    const hasMinimumText = value.trim().length >= this.minimumTextLength;\r\n    const position = this.calculatePosition();\r\n    const items = this.getMatchingItems(value);\r\n    const hasItems = items.length > 0;\r\n    const isHidden = this.isVisible === false;\r\n    const showDropdownIfEmpty = this.showDropdownIfEmpty && hasItems && !value;\r\n    const isDisabled = this.tagInput.disable;\r\n\r\n    const shouldShow =\r\n      isHidden && ((hasItems && hasMinimumText) || showDropdownIfEmpty);\r\n    const shouldHide = this.isVisible && !hasItems;\r\n\r\n    if (this.autocompleteObservable && hasMinimumText) {\r\n      return this.getItemsFromObservable(value);\r\n    }\r\n\r\n    if (\r\n      (!this.showDropdownIfEmpty && !value) ||\r\n      maxItemsReached ||\r\n      isDisabled\r\n    ) {\r\n      return this.dropdown.hide();\r\n    }\r\n\r\n    this.setItems(items);\r\n\r\n    if (shouldShow) {\r\n      this.dropdown.show(position);\r\n    } else if (shouldHide) {\r\n      this.hide();\r\n    }\r\n  };\r\n\r\n  /**\r\n   * @name hide\r\n   */\r\n  public hide(): void {\r\n    this.resetItems();\r\n    this.dropdown.hide();\r\n  }\r\n\r\n  /**\r\n   * @name scrollListener\r\n   */\r\n  @HostListener('window:scroll')\r\n  public scrollListener(): void {\r\n    if (!this.isVisible || !this.dynamicUpdate) {\r\n      return;\r\n    }\r\n\r\n    this.updatePosition();\r\n  }\r\n\r\n  /**\r\n   * @name onWindowBlur\r\n   */\r\n  @HostListener('window:blur')\r\n  public onWindowBlur(): void {\r\n    this.dropdown.hide();\r\n  }\r\n\r\n  /**\r\n   * @name getFormValue\r\n   */\r\n  private getFormValue(): string {\r\n    const formValue = this.tagInput.formValue;\r\n    return formValue ? formValue.toString().trim() : '';\r\n  }\r\n\r\n  /**\r\n   * @name calculatePosition\r\n   */\r\n  private calculatePosition(): ClientRect {\r\n    return this.tagInput.inputForm.getElementPosition();\r\n  }\r\n\r\n  /**\r\n   * @name requestAdding\r\n   * @param item {Ng2MenuItem}\r\n   */\r\n  private requestAdding = async (item: Ng2MenuItem) => {\r\n    const tag = this.createTagModel(item);\r\n    await this.tagInput.onAddingRequested(true, tag).catch(() => {});\r\n  };\r\n\r\n  /**\r\n   * @name createTagModel\r\n   * @param item\r\n   */\r\n  private createTagModel(item: Ng2MenuItem): TagModel {\r\n    const display =\r\n      typeof item.value === 'string' ? item.value : item.value[this.displayBy];\r\n    const value =\r\n      typeof item.value === 'string' ? item.value : item.value[this.identifyBy];\r\n\r\n    return {\r\n      ...item.value,\r\n      [this.tagInput.displayBy]: display,\r\n      [this.tagInput.identifyBy]: value\r\n    };\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param value {string}\r\n   */\r\n  private getMatchingItems(value: string): TagModel[] {\r\n    if (!value && !this.showDropdownIfEmpty) {\r\n      return [];\r\n    }\r\n\r\n    const dupesAllowed = this.tagInput.allowDupes;\r\n\r\n    return this.autocompleteItems.filter((item: TagModel) => {\r\n      const hasValue = dupesAllowed\r\n        ? false\r\n        : this.tagInput.tags.some(tag => {\r\n            const identifyBy = this.tagInput.identifyBy;\r\n            const model =\r\n              typeof tag.model === 'string' ? tag.model : tag.model[identifyBy];\r\n\r\n            return model === item[this.identifyBy];\r\n          });\r\n\r\n      return this.matchingFn(value, item) && hasValue === false;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @name setItems\r\n   */\r\n  private setItems(items: TagModel[]): void {\r\n    this.items = items.slice(0, this.limitItemsTo || items.length);\r\n  }\r\n\r\n  /**\r\n   * @name resetItems\r\n   */\r\n  private resetItems = (): void => {\r\n    this.items = [];\r\n  };\r\n\r\n  /**\r\n   * @name populateItems\r\n   * @param data\r\n   */\r\n  private populateItems(data: any): TagInputDropdown {\r\n    this.autocompleteItems = data.map(item => {\r\n      return typeof item === 'string'\r\n        ? {\r\n            [this.displayBy]: item,\r\n            [this.identifyBy]: item\r\n          }\r\n        : item;\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @name getItemsFromObservable\r\n   * @param text\r\n   */\r\n  private getItemsFromObservable = (text: string): void => {\r\n    this.setLoadingState(true);\r\n\r\n    const subscribeFn = (data: any[]) => {\r\n      // hide loading animation\r\n      this.setLoadingState(false)\r\n        // add items\r\n        .populateItems(data);\r\n\r\n      this.setItems(this.getMatchingItems(text));\r\n\r\n      if (this.items.length) {\r\n        this.dropdown.show(this.calculatePosition());\r\n      } else {\r\n        this.dropdown.hide();\r\n      }\r\n    };\r\n\r\n    this.autocompleteObservable(text)\r\n      .pipe(first())\r\n      .subscribe(subscribeFn, () => this.setLoadingState(false));\r\n  };\r\n\r\n  /**\r\n   * @name setLoadingState\r\n   * @param state\r\n   */\r\n  private setLoadingState(state: boolean): TagInputDropdown {\r\n    this.tagInput.isLoading = state;\r\n\r\n    return this;\r\n  }\r\n}\r\n","<ng2-dropdown [dynamicUpdate]=\"dynamicUpdate\">\r\n    <ng2-dropdown-menu [focusFirstElement]=\"focusFirstElement\"\r\n                       [zIndex]=\"zIndex\"\r\n                       [appendToBody]=\"appendToBody\"\r\n                       [offset]=\"offset\">\r\n        <ng2-menu-item *ngFor=\"let item of items; let index = index; let last = last\"\r\n                       [value]=\"item\"\r\n                       [ngSwitch]=\"!!templates.length\">\r\n\r\n            <span *ngSwitchCase=\"false\"\r\n                  [innerHTML]=\"item[displayBy] | highlight : tagInput.inputForm.value.value\">\r\n            </span>\r\n\r\n            <ng-template *ngSwitchDefault\r\n                      [ngTemplateOutlet]=\"templates.first\"\r\n                      [ngTemplateOutletContext]=\"{ item: item, index: index, last: last }\">\r\n            </ng-template>\r\n        </ng2-menu-item>\r\n    </ng2-dropdown-menu>\r\n</ng2-dropdown>\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'delete-icon',\r\n    templateUrl: './icon.html',\r\n    styleUrls: ['./icon.scss']\r\n})\r\nexport class DeleteIconComponent {}\r\n","<span>\r\n    <svg\r\n        height=\"16px\"\r\n        viewBox=\"0 0 32 32\"\r\n        width=\"16px\"\r\n    >\r\n        <path\r\n            d=\"M17.459,16.014l8.239-8.194c0.395-0.391,0.395-1.024,0-1.414c-0.394-0.391-1.034-0.391-1.428,0  l-8.232,8.187L7.73,6.284c-0.394-0.395-1.034-0.395-1.428,0c-0.394,0.396-0.394,1.037,0,1.432l8.302,8.303l-8.332,8.286  c-0.394,0.391-0.394,1.024,0,1.414c0.394,0.391,1.034,0.391,1.428,0l8.325-8.279l8.275,8.276c0.394,0.395,1.034,0.395,1.428,0  c0.394-0.396,0.394-1.037,0-1.432L17.459,16.014z\"\r\n            fill=\"#121313\"\r\n        />\r\n    </svg>\r\n</span>","export { DeleteIconComponent } from './icon';\r\n","export { TagInputDropdown } from './dropdown/index';\r\nexport { DeleteIconComponent } from './icon/index';\r\nexport { TagInputForm } from './tag-input-form/index';\r\nexport { TagRipple, TagComponent } from './tag/index';\r\nexport { TagInputComponent } from './tag-input/index';\r\n","export { TagInputForm } from './tag-input-form.component';\r\n","import { Component, EventEmitter, Input, OnChanges, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { AsyncValidatorFn, FormControl, FormGroup, ValidatorFn } from '@angular/forms';\r\n\r\n@Component({\r\n    selector: 'tag-input-form',\r\n    styleUrls: ['./tag-input-form.style.scss'],\r\n    templateUrl: './tag-input-form.template.html'\r\n})\r\nexport class TagInputForm implements OnInit, OnChanges {\r\n    /**\r\n     * @name onSubmit\r\n     */\r\n    @Output() public onSubmit: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onBlur\r\n     */\r\n    @Output() public onBlur: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onFocus\r\n     */\r\n    @Output() public onFocus: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onKeyup\r\n     */\r\n    @Output() public onKeyup: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name onKeydown\r\n     */\r\n    @Output() public onKeydown: EventEmitter<any> = new EventEmitter();\r\n\r\n    /**\r\n     * @name inputTextChange\r\n     */\r\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\r\n\r\n    // inputs\r\n\r\n    /**\r\n     * @name placeholder\r\n     */\r\n    @Input() public placeholder: string;\r\n\r\n    /**\r\n     * @name validators\r\n     */\r\n    @Input() public validators: ValidatorFn[] = [];\r\n\r\n    /**\r\n     * @name asyncValidators\r\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public asyncValidators: AsyncValidatorFn[] = [];\r\n\r\n    /**\r\n     * @name inputId\r\n     */\r\n    @Input() public inputId: string;\r\n\r\n    /**\r\n     * @name inputClass\r\n     */\r\n    @Input() public inputClass: string;\r\n\r\n    /**\r\n     * @name tabindex\r\n     * @desc pass through the specified tabindex to the input\r\n     */\r\n    @Input() public tabindex = '';\r\n\r\n    /**\r\n     * @name disabled\r\n     */\r\n    @Input() public disabled = false;\r\n\r\n    /**\r\n     * @name input\r\n     */\r\n    @ViewChild('input') public input;\r\n\r\n    /**\r\n     * @name form\r\n     */\r\n    public form: FormGroup;\r\n\r\n    /**\r\n     * @name inputText\r\n     */\r\n    @Input()\r\n    public get inputText(): string {\r\n        return this.item.value;\r\n    }\r\n\r\n    /**\r\n     * @name inputText\r\n     * @param text {string}\r\n     */\r\n    public set inputText(text: string) {\r\n        this.item.setValue(text);\r\n\r\n        this.inputTextChange.emit(text);\r\n    }\r\n\r\n    private readonly item: FormControl = new FormControl({ value: '', disabled: this.disabled });\r\n\r\n    ngOnInit() {\r\n        this.item.setValidators(this.validators);\r\n        this.item.setAsyncValidators(this.asyncValidators);\r\n\r\n        // creating form\r\n        this.form = new FormGroup({\r\n            item: this.item\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes.disabled && !changes.disabled.firstChange) {\r\n            if (changes.disabled.currentValue) {\r\n                this.form.controls['item'].disable();\r\n            } else {\r\n                this.form.controls['item'].enable();\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name value\r\n     */\r\n    public get value(): FormControl {\r\n        return this.form.get('item') as FormControl;\r\n    }\r\n\r\n    /**\r\n     * @name isInputFocused\r\n     */\r\n    public isInputFocused(): boolean {\r\n        const doc = typeof document !== 'undefined' ? document : undefined;\r\n        return doc ? doc.activeElement === this.input.nativeElement : false;\r\n    }\r\n\r\n    /**\r\n     * @name getErrorMessages\r\n     * @param messages\r\n     */\r\n    public getErrorMessages(messages: { [key: string]: string }): string[] {\r\n        return Object.keys(messages)\r\n            .filter(err => this.value.hasError(err))\r\n            .map(err => messages[err]);\r\n    }\r\n\r\n    /**\r\n     * @name hasErrors\r\n     */\r\n    public hasErrors(): boolean {\r\n        const { dirty, value, valid } = this.form;\r\n        return dirty && value.item && !valid;\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     */\r\n    public focus(): void {\r\n        this.input.nativeElement.focus();\r\n    }\r\n\r\n    /**\r\n     * @name blur\r\n     */\r\n    public blur(): void {\r\n        this.input.nativeElement.blur();\r\n    }\r\n\r\n    /**\r\n     * @name getElementPosition\r\n     */\r\n    public getElementPosition(): ClientRect {\r\n        return this.input.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n    /**\r\n     * - removes input from the component\r\n     * @name destroy\r\n     */\r\n    public destroy(): void {\r\n        const input = this.input.nativeElement;\r\n        input.parentElement.removeChild(input);\r\n    }\r\n\r\n    /**\r\n     * @name onKeyDown\r\n     * @param $event\r\n     */\r\n    public onKeyDown($event) {\r\n        this.inputText = this.value.value;\r\n        if ($event.key === 'Enter') {\r\n            this.submit($event);\r\n        } else {\r\n          return this.onKeydown.emit($event);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name onKeyUp\r\n     * @param $event\r\n     */\r\n    public onKeyUp($event) {\r\n        this.inputText = this.value.value;\r\n        return this.onKeyup.emit($event);\r\n    }\r\n\r\n    /**\r\n     * @name submit\r\n     */\r\n    public submit($event: any): void {\r\n        $event.preventDefault();\r\n        this.onSubmit.emit($event);\r\n    }\r\n}\r\n","<!-- form -->\r\n<form (ngSubmit)=\"submit($event)\" [formGroup]=\"form\">\r\n    <input #input\r\n\r\n           type=\"text\"\r\n           class=\"ng2-tag-input__text-input\"\r\n           autocomplete=\"off\"\r\n           tabindex=\"{{ disabled ? -1 : tabindex ? tabindex : 0 }}\"\r\n           minlength=\"1\"\r\n           formControlName=\"item\"\r\n\r\n           [ngClass]=\"inputClass\"\r\n           [attr.id]=\"inputId\"\r\n           [attr.placeholder]=\"placeholder\"\r\n           [attr.aria-label]=\"placeholder\"\r\n           [attr.tabindex]=\"tabindex\"\r\n           [attr.disabled]=\"disabled ? disabled : null\"\r\n\r\n           (focus)=\"onFocus.emit($event)\"\r\n           (blur)=\"onBlur.emit($event)\"\r\n           (keydown)=\"onKeyDown($event)\"\r\n           (keyup)=\"onKeyUp($event)\"\r\n    />\r\n</form>\r\n","import {\r\n    animate,\r\n    trigger,\r\n    style,\r\n    transition,\r\n    keyframes,\r\n    state,\r\n    AnimationTriggerMetadata\r\n} from '@angular/animations';\r\n\r\n/**\r\n * @name animations\r\n */\r\nexport const animations = [\r\n    trigger('animation', [\r\n        state('in', style({\r\n            opacity: 1\r\n        })),\r\n        state('out', style({\r\n            opacity: 0\r\n        })),\r\n        transition(':enter', [\r\n            animate('{{ enter }}', keyframes([\r\n                style({opacity: 0, offset: 0, transform: 'translate(0px, 20px)'}),\r\n                style({opacity: 0.3, offset: 0.3, transform: 'translate(0px, -10px)'}),\r\n                style({opacity: 0.5, offset: 0.5, transform: 'translate(0px, 0px)'}),\r\n                style({opacity: 0.75, offset: 0.75, transform: 'translate(0px, 5px)'}),\r\n                style({opacity: 1, offset: 1, transform: 'translate(0px, 0px)'})\r\n            ]))\r\n        ]),\r\n        transition(':leave', [\r\n            animate('{{ leave }}', keyframes([\r\n                style({opacity: 1, transform: 'translateX(0)', offset: 0}),\r\n                style({opacity: 1, transform: 'translateX(-15px)', offset: 0.7}),\r\n                style({opacity: 0, transform: 'translateX(100%)', offset: 1.0})\r\n            ]))\r\n        ])\r\n    ])\r\n];\r\n","export { TagInputComponent } from './tag-input';\r\n","// angular\r\nimport {\r\n    Component,\r\n    forwardRef,\r\n    HostBinding,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    Renderer2,\r\n    ViewChild,\r\n    ViewChildren,\r\n    ContentChildren,\r\n    ContentChild,\r\n    OnInit,\r\n    TemplateRef,\r\n    QueryList,\r\n    AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport {\r\n    AsyncValidatorFn,\r\n    FormControl,\r\n    NG_VALUE_ACCESSOR,\r\n    ValidatorFn\r\n} from '@angular/forms';\r\n\r\n// rx\r\nimport { Observable } from 'rxjs';\r\nimport { debounceTime, filter, map, first } from 'rxjs/operators';\r\n\r\n// ng2-tag-input\r\nimport { TagInputAccessor, TagModel } from '../../core/accessor';\r\nimport { listen } from '../../core/helpers/listen';\r\nimport * as constants from '../../core/constants';\r\n\r\nimport { DragProvider, DraggedTag } from '../../core/providers/drag-provider';\r\n\r\nimport { TagInputForm } from '../tag-input-form/tag-input-form.component';\r\nimport { TagComponent } from '../tag/tag.component';\r\n\r\nimport { animations } from './animations';\r\nimport { defaults } from '../../defaults';\r\nimport { TagInputDropdown } from '../dropdown/tag-input-dropdown.component';\r\n\r\n// angular universal hacks\r\n/* tslint:disable-next-line */\r\nconst DragEvent = (window as any).DragEvent;\r\n\r\nconst CUSTOM_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => TagInputComponent),\r\n    multi: true\r\n};\r\n@Component({\r\n    selector: 'tag-input',\r\n    providers: [CUSTOM_ACCESSOR],\r\n    styleUrls: ['./tag-input.style.scss'],\r\n    templateUrl: './tag-input.template.html',\r\n    animations\r\n})\r\nexport class TagInputComponent extends TagInputAccessor implements OnInit, AfterViewInit {\r\n    /**\r\n     * @name separatorKeys\r\n     * @desc keyboard keys with which a user can separate items\r\n     */\r\n    @Input() public separatorKeys: string[] = defaults.tagInput.separatorKeys;\r\n\r\n    /**\r\n     * @name separatorKeyCodes\r\n     * @desc keyboard key codes with which a user can separate items\r\n     */\r\n    @Input() public separatorKeyCodes: number[] = defaults.tagInput.separatorKeyCodes;\r\n\r\n    /**\r\n     * @name placeholder\r\n     * @desc the placeholder of the input text\r\n     */\r\n    @Input() public placeholder: string = defaults.tagInput.placeholder;\r\n\r\n    /**\r\n     * @name secondaryPlaceholder\r\n     * @desc placeholder to appear when the input is empty\r\n     */\r\n    @Input() public secondaryPlaceholder: string = defaults.tagInput.secondaryPlaceholder;\r\n\r\n    /**\r\n     * @name maxItems\r\n     * @desc maximum number of items that can be added\r\n     */\r\n    @Input() public maxItems: number = defaults.tagInput.maxItems;\r\n\r\n    /**\r\n     * @name validators\r\n     * @desc array of Validators that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public validators: ValidatorFn[] = defaults.tagInput.validators;\r\n\r\n    /**\r\n     * @name asyncValidators\r\n     * @desc array of AsyncValidator that are used to validate the tag before it gets appended to the list\r\n     */\r\n    @Input() public asyncValidators: AsyncValidatorFn[] = defaults.tagInput.asyncValidators;\r\n\r\n    /**\r\n    * - if set to true, it will only possible to add items from the autocomplete\r\n    * @name onlyFromAutocomplete\r\n    */\r\n    @Input() public onlyFromAutocomplete = defaults.tagInput.onlyFromAutocomplete;\r\n\r\n    /**\r\n     * @name errorMessages\r\n     */\r\n    @Input() public errorMessages: { [key: string]: string } = defaults.tagInput.errorMessages;\r\n\r\n    /**\r\n     * @name theme\r\n     */\r\n    @Input() public theme: string = defaults.tagInput.theme;\r\n\r\n    /**\r\n     * @name onTextChangeDebounce\r\n     */\r\n    @Input() public onTextChangeDebounce = defaults.tagInput.onTextChangeDebounce;\r\n\r\n    /**\r\n     * - custom id assigned to the input\r\n     * @name id\r\n     */\r\n    @Input() public inputId = defaults.tagInput.inputId;\r\n\r\n    /**\r\n     * - custom class assigned to the input\r\n     */\r\n    @Input() public inputClass: string = defaults.tagInput.inputClass;\r\n\r\n    /**\r\n     * - option to clear text input when the form is blurred\r\n     * @name clearOnBlur\r\n     */\r\n    @Input() public clearOnBlur: boolean = defaults.tagInput.clearOnBlur;\r\n\r\n    /**\r\n     * - hideForm\r\n     * @name clearOnBlur\r\n     */\r\n    @Input() public hideForm: boolean = defaults.tagInput.hideForm;\r\n\r\n    /**\r\n     * @name addOnBlur\r\n     */\r\n    @Input() public addOnBlur: boolean = defaults.tagInput.addOnBlur;\r\n\r\n    /**\r\n     * @name addOnPaste\r\n     */\r\n    @Input() public addOnPaste: boolean = defaults.tagInput.addOnPaste;\r\n\r\n    /**\r\n     * - pattern used with the native method split() to separate patterns in the string pasted\r\n     * @name pasteSplitPattern\r\n     */\r\n    @Input() public pasteSplitPattern = defaults.tagInput.pasteSplitPattern;\r\n\r\n    /**\r\n     * @name blinkIfDupe\r\n     */\r\n    @Input() public blinkIfDupe = defaults.tagInput.blinkIfDupe;\r\n\r\n    /**\r\n     * @name removable\r\n     */\r\n    @Input() public removable = defaults.tagInput.removable;\r\n\r\n    /**\r\n     * @name editable\r\n     */\r\n    @Input() public editable: boolean = defaults.tagInput.editable;\r\n\r\n    /**\r\n     * @name allowDupes\r\n     */\r\n    @Input() public allowDupes = defaults.tagInput.allowDupes;\r\n\r\n    /**\r\n     * @description if set to true, the newly added tags will be added as strings, and not objects\r\n     * @name modelAsStrings\r\n     */\r\n    @Input() public modelAsStrings = defaults.tagInput.modelAsStrings;\r\n\r\n    /**\r\n     * @name trimTags\r\n     */\r\n    @Input() public trimTags = defaults.tagInput.trimTags;\r\n\r\n    /**\r\n     * @name inputText\r\n     */\r\n    @Input() public get inputText(): string {\r\n        return this.inputTextValue;\r\n    }\r\n\r\n    /**\r\n     * @name ripple\r\n     */\r\n    @Input() public ripple: boolean = defaults.tagInput.ripple;\r\n\r\n    /**\r\n     * @name tabindex\r\n     * @desc pass through the specified tabindex to the input\r\n     */\r\n    @Input() public tabindex: string = defaults.tagInput.tabIndex;\r\n\r\n    /**\r\n     * @name disable\r\n     */\r\n    @Input() public disable: boolean = defaults.tagInput.disable;\r\n\r\n    /**\r\n     * @name dragZone\r\n     */\r\n    @Input() public dragZone: string = defaults.tagInput.dragZone;\r\n\r\n    /**\r\n     * @name onRemoving\r\n     */\r\n    @Input() public onRemoving = defaults.tagInput.onRemoving;\r\n\r\n    /**\r\n     * @name onAdding\r\n     */\r\n    @Input() public onAdding = defaults.tagInput.onAdding;\r\n\r\n    /**\r\n     * @name animationDuration\r\n     */\r\n    @Input() public animationDuration = defaults.tagInput.animationDuration;\r\n\r\n    /**\r\n     * @name onAdd\r\n     * @desc event emitted when adding a new item\r\n     */\r\n    @Output() public onAdd = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onRemove\r\n     * @desc event emitted when removing an existing item\r\n     */\r\n    @Output() public onRemove = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onSelect\r\n     * @desc event emitted when selecting an item\r\n     */\r\n    @Output() public onSelect = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onFocus\r\n     * @desc event emitted when the input is focused\r\n     */\r\n    @Output() public onFocus = new EventEmitter<string>();\r\n\r\n    /**\r\n     * @name onFocus\r\n     * @desc event emitted when the input is blurred\r\n     */\r\n    @Output() public onBlur = new EventEmitter<string>();\r\n\r\n    /**\r\n     * @name onTextChange\r\n     * @desc event emitted when the input value changes\r\n     */\r\n    @Output() public onTextChange = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * - output triggered when text is pasted in the form\r\n     * @name onPaste\r\n     */\r\n    @Output() public onPaste = new EventEmitter<string>();\r\n\r\n    /**\r\n     * - output triggered when tag entered is not valid\r\n     * @name onValidationError\r\n     */\r\n    @Output() public onValidationError = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * - output triggered when tag is edited\r\n     * @name onTagEdited\r\n     */\r\n    @Output() public onTagEdited = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name dropdown\r\n     */\r\n    // @ContentChild(forwardRef(() => TagInputDropdown), {static: true}) dropdown: TagInputDropdown;\r\n    @ContentChild(TagInputDropdown) public dropdown: TagInputDropdown;\r\n    /**\r\n     * @name template\r\n     * @desc reference to the template if provided by the user\r\n     */\r\n    @ContentChildren(TemplateRef, { descendants: false }) public templates: QueryList<TemplateRef<any>>;\r\n\r\n    /**\r\n     * @name inputForm\r\n     */\r\n    @ViewChild(TagInputForm) public inputForm: TagInputForm;\r\n\r\n    /**\r\n     * @name selectedTag\r\n     * @desc reference to the current selected tag\r\n     */\r\n    public selectedTag: TagModel | undefined;\r\n\r\n    /**\r\n     * @name isLoading\r\n     */\r\n    public isLoading = false;\r\n\r\n    /**\r\n     * @name inputText\r\n     * @param text\r\n     */\r\n    public set inputText(text: string) {\r\n        this.inputTextValue = text;\r\n        this.inputTextChange.emit(text);\r\n    }\r\n\r\n    /**\r\n     * @name tags\r\n     * @desc list of Element items\r\n     */\r\n    @ViewChildren(TagComponent) public tags: QueryList<TagComponent>;\r\n\r\n    /**\r\n     * @name listeners\r\n     * @desc array of events that get fired using @fireEvents\r\n     */\r\n    private listeners = {\r\n        [constants.KEYDOWN]: <{ (fun): any }[]>[],\r\n        [constants.KEYUP]: <{ (fun): any }[]>[]\r\n    };\r\n\r\n    /**\r\n     * @description emitter for the 2-way data binding inputText value\r\n     * @name inputTextChange\r\n     */\r\n    @Output() public inputTextChange: EventEmitter<string> = new EventEmitter();\r\n\r\n    /**\r\n     * @description private variable to bind get/set\r\n     * @name inputTextValue\r\n     */\r\n    public inputTextValue = '';\r\n\r\n    /**\r\n     * @desc removes the tab index if it is set - it will be passed through to the input\r\n     * @name tabindexAttr\r\n     */\r\n    @HostBinding('attr.tabindex')\r\n    public get tabindexAttr(): string {\r\n        return this.tabindex !== '' ? '-1' : '';\r\n    }\r\n\r\n    /**\r\n     * @name animationMetadata\r\n     */\r\n    public animationMetadata: { value: string, params: object };\r\n\r\n    public errors: string[] = [];\r\n\r\n    public isProgressBarVisible$: Observable<boolean>;\r\n\r\n    constructor(private readonly renderer: Renderer2,\r\n        public readonly dragProvider: DragProvider) {\r\n        super();\r\n    }\r\n\r\n    /**\r\n     * @name ngAfterViewInit\r\n     */\r\n    public ngAfterViewInit(): void {\r\n        // set up listeners\r\n\r\n        this.setUpKeypressListeners();\r\n        this.setupSeparatorKeysListener();\r\n        this.setUpInputKeydownListeners();\r\n\r\n        if (this.onTextChange.observers.length) {\r\n            this.setUpTextChangeSubscriber();\r\n        }\r\n\r\n        // if clear on blur is set to true, subscribe to the event and clear the text's form\r\n        if (this.clearOnBlur || this.addOnBlur) {\r\n            this.setUpOnBlurSubscriber();\r\n        }\r\n\r\n        // if addOnPaste is set to true, register the handler and add items\r\n        if (this.addOnPaste) {\r\n            this.setUpOnPasteListener();\r\n        }\r\n\r\n        const statusChanges$ = this.inputForm.form.statusChanges;\r\n\r\n        statusChanges$.pipe(\r\n            filter((status: string) => status !== 'PENDING')\r\n        ).subscribe(() => {\r\n            this.errors = this.inputForm.getErrorMessages(this.errorMessages);\r\n        });\r\n\r\n        this.isProgressBarVisible$ = statusChanges$.pipe(\r\n            map((status: string) => {\r\n                return status === 'PENDING' || this.isLoading;\r\n            })\r\n        );\r\n\r\n        // if hideForm is set to true, remove the input\r\n        if (this.hideForm) {\r\n            this.inputForm.destroy();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name ngOnInit\r\n     */\r\n    public ngOnInit(): void {\r\n        // if the number of items specified in the model is > of the value of maxItems\r\n        // degrade gracefully and let the max number of items to be the number of items in the model\r\n        // though, warn the user.\r\n        const hasReachedMaxItems = this.maxItems !== undefined &&\r\n            this.items &&\r\n            this.items.length > this.maxItems;\r\n\r\n        if (hasReachedMaxItems) {\r\n            this.maxItems = this.items.length;\r\n            console.warn(constants.MAX_ITEMS_WARNING);\r\n        }\r\n\r\n        // Setting editable to false to fix problem with tags in IE still being editable when\r\n        // onlyFromAutocomplete is true\r\n        this.editable = this.onlyFromAutocomplete ? false : this.editable;\r\n\r\n        this.setAnimationMetadata();\r\n    }\r\n\r\n    /**\r\n     * @name onRemoveRequested\r\n     * @param tag\r\n     * @param index\r\n     */\r\n    public onRemoveRequested(tag: TagModel, index: number): Promise<TagModel> {\r\n        return new Promise(resolve => {\r\n            const subscribeFn = (model: TagModel) => {\r\n                this.removeItem(model, index);\r\n                resolve(tag);\r\n            };\r\n\r\n            this.onRemoving ?\r\n                this.onRemoving(tag)\r\n                    .pipe(first())\r\n                    .subscribe(subscribeFn) : subscribeFn(tag);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name onAddingRequested\r\n     * @param fromAutocomplete {boolean}\r\n     * @param tag {TagModel}\r\n     * @param index? {number}\r\n     * @param giveupFocus? {boolean}\r\n     */\r\n    public onAddingRequested(fromAutocomplete: boolean, tag: TagModel,\r\n        index?: number, giveupFocus?: boolean): Promise<TagModel> {\r\n        return new Promise((resolve, reject) => {\r\n            const subscribeFn = (model: TagModel) => {\r\n                return this\r\n                    .addItem(fromAutocomplete, model, index, giveupFocus)\r\n                    .then(resolve)\r\n                    .catch(reject);\r\n            };\r\n\r\n            return this.onAdding ?\r\n                this.onAdding(tag)\r\n                    .pipe(first())\r\n                    .subscribe(subscribeFn, reject) : subscribeFn(tag);\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name appendTag\r\n     * @param tag {TagModel}\r\n     */\r\n    public appendTag = (tag: TagModel, index = this.items.length): void => {\r\n        const items = this.items;\r\n        const model = this.modelAsStrings ? tag[this.identifyBy] : tag;\r\n\r\n        this.items = [\r\n            ...items.slice(0, index),\r\n            model,\r\n            ...items.slice(index, items.length)\r\n        ];\r\n    }\r\n\r\n    /**\r\n     * @name createTag\r\n     * @param model\r\n     */\r\n    public createTag = (model: TagModel): TagModel => {\r\n        const trim = (val: TagModel, key: string): TagModel => {\r\n            return typeof val === 'string' ? val.trim() : val[key];\r\n        };\r\n\r\n        return {\r\n            ...typeof model !== 'string' ? model : {},\r\n            [this.displayBy]: this.trimTags ? trim(model, this.displayBy) : model,\r\n            [this.identifyBy]: this.trimTags ? trim(model, this.identifyBy) : model\r\n        };\r\n    }\r\n\r\n    /**\r\n     * @name selectItem\r\n     * @desc selects item passed as parameter as the selected tag\r\n     * @param item\r\n     * @param emit\r\n     */\r\n    public selectItem(item: TagModel | undefined, emit = true): void {\r\n        const isReadonly = item && typeof item !== 'string' && item.readonly;\r\n\r\n        if (isReadonly || this.selectedTag === item) {\r\n            return;\r\n        }\r\n\r\n        this.selectedTag = item;\r\n\r\n        if (emit) {\r\n            this.onSelect.emit(item);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name fireEvents\r\n     * @desc goes through the list of the events for a given eventName, and fires each of them\r\n     * @param eventName\r\n     * @param $event\r\n     */\r\n    public fireEvents(eventName: string, $event?): void {\r\n        this.listeners[eventName].forEach(listener => listener.call(this, $event));\r\n    }\r\n\r\n    /**\r\n     * @name handleKeydown\r\n     * @desc handles action when the user hits a keyboard key\r\n     * @param data\r\n     */\r\n    public handleKeydown(data: any): void {\r\n        const event = data.event;\r\n        const key = event.keyCode || event.which;\r\n        const shiftKey = event.shiftKey || false;\r\n\r\n        switch (constants.KEY_PRESS_ACTIONS[key]) {\r\n            case constants.ACTIONS_KEYS.DELETE:\r\n                if (this.selectedTag && this.removable) {\r\n                    const index = this.items.indexOf(this.selectedTag);\r\n                    this.onRemoveRequested(this.selectedTag, index);\r\n                }\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.SWITCH_PREV:\r\n                this.moveToTag(data.model, constants.PREV);\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.SWITCH_NEXT:\r\n                this.moveToTag(data.model, constants.NEXT);\r\n                break;\r\n\r\n            case constants.ACTIONS_KEYS.TAB:\r\n                if (shiftKey) {\r\n                    if (this.isFirstTag(data.model)) {\r\n                        return;\r\n                    }\r\n\r\n                    this.moveToTag(data.model, constants.PREV);\r\n                } else {\r\n                    if (this.isLastTag(data.model) && (this.disable || this.maxItemsReached)) {\r\n                        return;\r\n                    }\r\n\r\n                    this.moveToTag(data.model, constants.NEXT);\r\n                }\r\n                break;\r\n\r\n            default:\r\n                return;\r\n        }\r\n\r\n        // prevent default behaviour\r\n        event.preventDefault();\r\n    }\r\n\r\n    public async onFormSubmit() {\r\n        try {\r\n            await this.onAddingRequested(false, this.formValue);\r\n        } catch {\r\n            return;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name setInputValue\r\n     * @param value\r\n     */\r\n    public setInputValue(value: string, emitEvent = true): void {\r\n        const control = this.getControl();\r\n\r\n        // update form value with the transformed item\r\n        control.setValue(value, { emitEvent });\r\n    }\r\n\r\n    /**\r\n     * @name getControl\r\n     */\r\n    private getControl(): FormControl {\r\n        return this.inputForm.value as FormControl;\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     * @param applyFocus\r\n     * @param displayAutocomplete\r\n     */\r\n    public focus(applyFocus = false, displayAutocomplete = false): void {\r\n        if (this.dragProvider.getState('dragging')) {\r\n            return;\r\n        }\r\n\r\n        this.selectItem(undefined, false);\r\n\r\n        if (applyFocus) {\r\n            this.inputForm.focus();\r\n            this.onFocus.emit(this.formValue);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name blur\r\n     */\r\n    public blur(): void {\r\n        this.onTouched();\r\n\r\n        this.onBlur.emit(this.formValue);\r\n    }\r\n\r\n    /**\r\n     * @name hasErrors\r\n     */\r\n    public hasErrors(): boolean {\r\n        return !!this.inputForm && this.inputForm.hasErrors();\r\n    }\r\n\r\n    /**\r\n     * @name isInputFocused\r\n     */\r\n    public isInputFocused(): boolean {\r\n        return !!this.inputForm && this.inputForm.isInputFocused();\r\n    }\r\n\r\n    /**\r\n     * - this is the one way I found to tell if the template has been passed and it is not\r\n     * the template for the menu item\r\n     * @name hasCustomTemplate\r\n     */\r\n    public hasCustomTemplate(): boolean {\r\n        const template = this.templates ? this.templates.first : undefined;\r\n        const menuTemplate = this.dropdown && this.dropdown.templates ?\r\n            this.dropdown.templates.first : undefined;\r\n\r\n        return Boolean(template && template !== menuTemplate);\r\n    }\r\n\r\n    /**\r\n     * @name maxItemsReached\r\n     */\r\n    public get maxItemsReached(): boolean {\r\n        return this.maxItems !== undefined &&\r\n            this.items.length >= this.maxItems;\r\n    }\r\n\r\n    /**\r\n     * @name formValue\r\n     */\r\n    public get formValue(): string {\r\n        const form = this.inputForm.value;\r\n\r\n        return form ? form.value : '';\r\n    }\r\n\r\n    /**3\r\n     * @name onDragStarted\r\n     * @param event\r\n     * @param index\r\n     */\r\n    public onDragStarted(event: DragEvent, tag: TagModel, index: number): void {\r\n        event.stopPropagation();\r\n\r\n        const item = { zone: this.dragZone, tag, index } as DraggedTag;\r\n\r\n        this.dragProvider.setSender(this);\r\n        this.dragProvider.setDraggedItem(event, item);\r\n        this.dragProvider.setState({ dragging: true, index });\r\n    }\r\n\r\n    /**\r\n     * @name onDragOver\r\n     * @param event\r\n     */\r\n    public onDragOver(event: DragEvent, index?: number): void {\r\n        this.dragProvider.setState({ dropping: true });\r\n        this.dragProvider.setReceiver(this);\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    /**\r\n     * @name onTagDropped\r\n     * @param event\r\n     * @param index\r\n     */\r\n    public onTagDropped(event: DragEvent, index?: number): void {\r\n        const item = this.dragProvider.getDraggedItem(event);\r\n\r\n        if (!item || item.zone !== this.dragZone) {\r\n            return;\r\n        }\r\n\r\n        this.dragProvider.onTagDropped(item.tag, item.index, index);\r\n\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n    }\r\n\r\n    /**\r\n     * @name isDropping\r\n     */\r\n    public isDropping(): boolean {\r\n        const isReceiver = this.dragProvider.receiver === this;\r\n        const isDropping = this.dragProvider.getState('dropping');\r\n\r\n        return Boolean(isReceiver && isDropping);\r\n    }\r\n\r\n    /**\r\n     * @name onTagBlurred\r\n     * @param changedElement {TagModel}\r\n     * @param index {number}\r\n     */\r\n    public onTagBlurred(changedElement: TagModel, index: number): void {\r\n        this.items[index] = changedElement;\r\n        this.blur();\r\n    }\r\n\r\n    /**\r\n     * @name trackBy\r\n     * @param items\r\n     */\r\n    public trackBy(index: number, item: TagModel): string {\r\n        return item[this.identifyBy];\r\n    }\r\n\r\n    /**\r\n     * @name updateEditedTag\r\n     * @param tag\r\n     */\r\n    public updateEditedTag({ tag, index }: { tag: TagModel, index: number }): void {\r\n        this.onTagEdited.emit(tag);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param tag\r\n     * @param isFromAutocomplete\r\n     */\r\n    public isTagValid = (tag: TagModel, fromAutocomplete = false): boolean => {\r\n        const selectedItem = this.dropdown ? this.dropdown.selectedItem : undefined;\r\n        const value = this.getItemDisplay(tag).trim();\r\n\r\n        if (selectedItem && !fromAutocomplete || !value) {\r\n            return false;\r\n        }\r\n\r\n        const dupe = this.findDupe(tag, fromAutocomplete);\r\n\r\n        // if so, give a visual cue and return false\r\n        if (!this.allowDupes && dupe && this.blinkIfDupe) {\r\n            const model = this.tags.find(item => {\r\n                return this.getItemValue(item.model) === this.getItemValue(dupe);\r\n            });\r\n\r\n            if (model) {\r\n                model.blink();\r\n            }\r\n        }\r\n\r\n        const isFromAutocomplete = fromAutocomplete && this.onlyFromAutocomplete;\r\n\r\n        const assertions = [\r\n            // 1. there must be no dupe OR dupes are allowed\r\n            !dupe || this.allowDupes,\r\n\r\n            // 2. check max items has not been reached\r\n            !this.maxItemsReached,\r\n\r\n            // 3. check item comes from autocomplete or onlyFromAutocomplete is false\r\n            ((isFromAutocomplete) || !this.onlyFromAutocomplete)\r\n        ];\r\n\r\n        return assertions.filter(Boolean).length === assertions.length;\r\n    }\r\n\r\n    /**\r\n     * @name moveToTag\r\n     * @param item\r\n     * @param direction\r\n     */\r\n    private moveToTag(item: TagModel, direction: string): void {\r\n        const isLast = this.isLastTag(item);\r\n        const isFirst = this.isFirstTag(item);\r\n        const stopSwitch = (direction === constants.NEXT && isLast) ||\r\n            (direction === constants.PREV && isFirst);\r\n\r\n        if (stopSwitch) {\r\n            this.focus(true);\r\n            return;\r\n        }\r\n\r\n        const offset = direction === constants.NEXT ? 1 : -1;\r\n        const index = this.getTagIndex(item) + offset;\r\n        const tag = this.getTagAtIndex(index);\r\n\r\n        return tag.select.call(tag);\r\n    }\r\n\r\n    /**\r\n     * @name isFirstTag\r\n     * @param item {TagModel}\r\n     */\r\n    private isFirstTag(item: TagModel): boolean {\r\n        return this.tags.first.model === item;\r\n    }\r\n\r\n    /**\r\n     * @name isLastTag\r\n     * @param item {TagModel}\r\n     */\r\n    private isLastTag(item: TagModel): boolean {\r\n        return this.tags.last.model === item;\r\n    }\r\n\r\n    /**\r\n     * @name getTagIndex\r\n     * @param item\r\n     */\r\n    private getTagIndex(item: TagModel): number {\r\n        const tags = this.tags.toArray();\r\n\r\n        return tags.findIndex(tag => tag.model === item);\r\n    }\r\n\r\n    /**\r\n     * @name getTagAtIndex\r\n     * @param index\r\n     */\r\n    private getTagAtIndex(index: number) {\r\n        const tags = this.tags.toArray();\r\n\r\n        return tags[index];\r\n    }\r\n\r\n    /**\r\n     * @name removeItem\r\n     * @desc removes an item from the array of the model\r\n     * @param tag {TagModel}\r\n     * @param index {number}\r\n     */\r\n    public removeItem(tag: TagModel, index: number): void {\r\n        this.items = this.getItemsWithout(index);\r\n\r\n        // if the removed tag was selected, set it as undefined\r\n        if (this.selectedTag === tag) {\r\n            this.selectItem(undefined, false);\r\n        }\r\n\r\n        // focus input\r\n        this.focus(true, false);\r\n\r\n        // emit remove event\r\n        this.onRemove.emit(tag);\r\n    }\r\n\r\n    /**\r\n     * @name addItem\r\n     * @desc adds the current text model to the items array\r\n     * @param fromAutocomplete {boolean}\r\n     * @param item {TagModel}\r\n     * @param index? {number}\r\n     * @param giveupFocus? {boolean}\r\n     */\r\n    private addItem(fromAutocomplete = false, item: TagModel, index?: number, giveupFocus?: boolean):\r\n        Promise<TagModel> {\r\n        const display = this.getItemDisplay(item);\r\n        const tag = this.createTag(item);\r\n\r\n        if (fromAutocomplete) {\r\n            this.setInputValue(this.getItemValue(item, true));\r\n        }\r\n\r\n        return new Promise((resolve, reject) => {\r\n            /**\r\n             * @name reset\r\n             */\r\n            const reset = (): void => {\r\n                // reset control and focus input\r\n                this.setInputValue('');\r\n\r\n                if (giveupFocus) {\r\n                    this.focus(false, false);\r\n                } else {\r\n                    // focus input\r\n                    this.focus(true, false);\r\n                }\r\n\r\n                resolve(display);\r\n            };\r\n\r\n            const appendItem = (): void => {\r\n                this.appendTag(tag, index);\r\n\r\n                // emit event\r\n                this.onAdd.emit(tag);\r\n\r\n                if (!this.dropdown) {\r\n                    return;\r\n                }\r\n\r\n                this.dropdown.hide();\r\n\r\n                if (this.dropdown.showDropdownIfEmpty) {\r\n                    this.dropdown.show();\r\n                }\r\n            };\r\n\r\n            const status = this.inputForm.form.status;\r\n            const isTagValid = this.isTagValid(tag, fromAutocomplete);\r\n\r\n            const onValidationError = () => {\r\n                this.onValidationError.emit(tag);\r\n                return reject();\r\n            };\r\n\r\n            if (status === 'VALID' && isTagValid) {\r\n                appendItem();\r\n                return reset();\r\n            }\r\n\r\n            if (status === 'INVALID' || !isTagValid) {\r\n                reset();\r\n                return onValidationError();\r\n            }\r\n\r\n            if (status === 'PENDING') {\r\n                const statusUpdate$ = this.inputForm.form.statusChanges;\r\n\r\n                return statusUpdate$\r\n                    .pipe(\r\n                        filter(statusUpdate => statusUpdate !== 'PENDING'),\r\n                        first()\r\n                    )\r\n                    .subscribe((statusUpdate) => {\r\n                        if (statusUpdate === 'VALID' && isTagValid) {\r\n                            appendItem();\r\n                            return reset();\r\n                        } else {\r\n                            reset();\r\n                            return onValidationError();\r\n                        }\r\n                    });\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setupSeparatorKeysListener\r\n     */\r\n    private setupSeparatorKeysListener(): void {\r\n        const useSeparatorKeys = this.separatorKeyCodes.length > 0 || this.separatorKeys.length > 0;\r\n        const listener = ($event) => {\r\n            const hasKeyCode = this.separatorKeyCodes.indexOf($event.keyCode) >= 0;\r\n            const hasKey = this.separatorKeys.indexOf($event.key) >= 0;\r\n            // the keyCode of keydown event is 229 when IME is processing the key event.\r\n            const isIMEProcessing = $event.keyCode === 229;\r\n\r\n            if (hasKeyCode || (hasKey && !isIMEProcessing)) {\r\n                $event.preventDefault();\r\n                this.onAddingRequested(false, this.formValue)\r\n                    .catch(() => { });\r\n            }\r\n        };\r\n\r\n        listen.call(this, constants.KEYDOWN, listener, useSeparatorKeys);\r\n    }\r\n\r\n    /**\r\n     * @name setUpKeypressListeners\r\n     */\r\n    private setUpKeypressListeners(): void {\r\n        const listener = ($event) => {\r\n            const isCorrectKey = $event.keyCode === 37 || $event.keyCode === 8;\r\n\r\n            if (isCorrectKey &&\r\n                !this.formValue &&\r\n                this.items.length) {\r\n                this.tags.last.select.call(this.tags.last);\r\n            }\r\n        };\r\n\r\n        // setting up the keypress listeners\r\n        listen.call(this, constants.KEYDOWN, listener);\r\n    }\r\n\r\n    /**\r\n     * @name setUpKeydownListeners\r\n     */\r\n    private setUpInputKeydownListeners(): void {\r\n        this.inputForm.onKeydown.subscribe(event => {\r\n            if (event.key === 'Backspace' && this.formValue.trim() === '') {\r\n                event.preventDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setUpOnPasteListener\r\n     */\r\n    private setUpOnPasteListener() {\r\n        const input = this.inputForm.input.nativeElement;\r\n\r\n        // attach listener to input\r\n        this.renderer.listen(input, 'paste', (event) => {\r\n            this.onPasteCallback(event);\r\n\r\n            event.preventDefault();\r\n            return true;\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @name setUpTextChangeSubscriber\r\n     */\r\n    private setUpTextChangeSubscriber(): void {\r\n        this.inputForm.form\r\n            .valueChanges\r\n            .pipe(\r\n                debounceTime(this.onTextChangeDebounce)\r\n            )\r\n            .subscribe((value: { item: string }) => {\r\n                this.onTextChange.emit(value.item);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @name setUpOnBlurSubscriber\r\n     */\r\n    private setUpOnBlurSubscriber(): void {\r\n        const filterFn = (): boolean => {\r\n            const isVisible = this.dropdown && this.dropdown.isVisible;\r\n            return !isVisible && !!this.formValue;\r\n        };\r\n\r\n        this.inputForm\r\n            .onBlur\r\n            .pipe(\r\n                debounceTime(100),\r\n                filter(filterFn)\r\n            )\r\n            .subscribe(() => {\r\n                const reset = () => this.setInputValue('');\r\n\r\n                if (this.addOnBlur) {\r\n                    return this\r\n                        .onAddingRequested(false, this.formValue, undefined, true)\r\n                        .then(reset)\r\n                        .catch(reset);\r\n                }\r\n\r\n                reset();\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @name findDupe\r\n     * @param tag\r\n     * @param isFromAutocomplete\r\n     */\r\n    private findDupe(tag: TagModel, isFromAutocomplete: boolean): TagModel | undefined {\r\n        const identifyBy = isFromAutocomplete ? this.dropdown.identifyBy : this.identifyBy;\r\n        const id = tag[identifyBy];\r\n\r\n        return this.items.find(item => this.getItemValue(item) === id);\r\n    }\r\n\r\n    /**\r\n     * @name onPasteCallback\r\n     * @param data\r\n     */\r\n    private onPasteCallback = async (data: ClipboardEvent) => {\r\n        interface IEWindow extends Window {\r\n            clipboardData: DataTransfer;\r\n        }\r\n\r\n        const getText = (): string => {\r\n            const isIE = Boolean((window as IEWindow & typeof globalThis).clipboardData);\r\n            const clipboardData = isIE ? (\r\n                (window as IEWindow & typeof globalThis).clipboardData\r\n            ) : data.clipboardData;\r\n            const type = isIE ? 'Text' : 'text/plain';\r\n            return clipboardData === null ? '' : clipboardData.getData(type) || '';\r\n        };\r\n\r\n        const text = getText();\r\n\r\n        const requests = text\r\n            .split(this.pasteSplitPattern)\r\n            .map(item => {\r\n                const tag = this.createTag(item);\r\n                this.setInputValue(tag[this.displayBy]);\r\n                return this.onAddingRequested(false, tag);\r\n            });\r\n\r\n        const resetInput = () => setTimeout(() => this.setInputValue(''), 50);\r\n\r\n        Promise.all(requests).then(() => {\r\n            this.onPaste.emit(text);\r\n            resetInput();\r\n        })\r\n            .catch(resetInput);\r\n    }\r\n\r\n    /**\r\n     * @name setAnimationMetadata\r\n     */\r\n    private setAnimationMetadata(): void {\r\n        this.animationMetadata = {\r\n            value: 'in',\r\n            params: { ...this.animationDuration }\r\n        };\r\n    }\r\n}\r\n","<div\r\n    [ngClass]=\"theme\"\r\n    class=\"ng2-tag-input\"\r\n    (click)=\"focus(true, false)\"\r\n    [attr.tabindex]=\"-1\"\r\n    (drop)=\"dragZone ? onTagDropped($event, undefined) : undefined\"\r\n    (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\r\n    (dragover)=\"dragZone ? onDragOver($event) : undefined\"\r\n    (dragend)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\r\n    [class.ng2-tag-input--dropping]=\"isDropping()\"\r\n    [class.ng2-tag-input--disabled]=\"disable\"\r\n    [class.ng2-tag-input--loading]=\"isLoading\"\r\n    [class.ng2-tag-input--invalid]=\"hasErrors()\"\r\n    [class.ng2-tag-input--focused]=\"isInputFocused()\"\r\n>\r\n\r\n    <!-- TAGS -->\r\n    <div class=\"ng2-tags-container\">\r\n        <tag\r\n            *ngFor=\"let item of items; let i = index; trackBy: trackBy\"\r\n            (onSelect)=\"selectItem(item)\"\r\n            (onRemove)=\"onRemoveRequested(item, i)\"\r\n            (onKeyDown)=\"handleKeydown($event)\"\r\n            (onTagEdited)=\"updateEditedTag($event)\"\r\n            (onBlur)=\"onTagBlurred($event, i)\"\r\n            draggable=\"{{ editable }}\"\r\n            (dragstart)=\"dragZone ? onDragStarted($event, item, i) : undefined\"\r\n            (drop)=\"dragZone ? onTagDropped($event, i) : undefined\"\r\n            (dragenter)=\"dragZone ? onDragOver($event) : undefined\"\r\n            (dragover)=\"dragZone ? onDragOver($event, i) : undefined\"\r\n            (dragleave)=\"dragZone ? dragProvider.onDragEnd() : undefined\"\r\n            [canAddTag]=\"isTagValid\"\r\n            [attr.tabindex]=\"0\"\r\n            [disabled]=\"disable\"\r\n            [@animation]=\"animationMetadata\"\r\n            [hasRipple]=\"ripple\"\r\n            [index]=\"i\"\r\n            [removable]=\"removable\"\r\n            [editable]=\"editable\"\r\n            [displayBy]=\"displayBy\"\r\n            [identifyBy]=\"identifyBy\"\r\n            [template]=\"!!hasCustomTemplate() ? templates.first : undefined\"\r\n            [draggable]=\"dragZone\"\r\n            [model]=\"item\"\r\n        >\r\n        </tag>\r\n\r\n        <tag-input-form\r\n            (onSubmit)=\"onFormSubmit()\"\r\n            (onBlur)=\"blur()\"\r\n            (click)=\"dropdown ? dropdown.show() : undefined\"\r\n            (onKeydown)=\"fireEvents('keydown', $event)\"\r\n            (onKeyup)=\"fireEvents('keyup', $event)\"\r\n            [(inputText)]=\"inputText\"\r\n            [disabled]=\"disable\"\r\n            [validators]=\"validators\"\r\n            [asyncValidators]=\"asyncValidators\"\r\n            [hidden]=\"maxItemsReached\"\r\n            [placeholder]=\"items.length ? placeholder : secondaryPlaceholder\"\r\n            [inputClass]=\"inputClass\"\r\n            [inputId]=\"inputId\"\r\n            [tabindex]=\"tabindex\"\r\n        >\r\n        </tag-input-form>\r\n    </div>\r\n\r\n    <div\r\n        class=\"progress-bar\"\r\n        *ngIf=\"isProgressBarVisible$ | async\"\r\n    ></div>\r\n</div>\r\n\r\n<!-- ERRORS -->\r\n<div\r\n    *ngIf=\"hasErrors()\"\r\n    [ngClass]=\"theme\"\r\n    class=\"error-messages\"\r\n>\r\n    <p\r\n        *ngFor=\"let error of errors\"\r\n        class=\"error-message\"\r\n    >\r\n        <span>{{ error }}</span>\r\n    </p>\r\n</div>\r\n<ng-content></ng-content>","export { TagRipple } from './tag-ripple.component';\r\nexport { TagComponent } from './tag.component';\r\n","import {\r\n    Component,\r\n    Input\r\n} from '@angular/core';\r\n\r\n\r\nimport {\r\n    animate,\r\n    trigger,\r\n    style,\r\n    transition,\r\n    keyframes,\r\n    state\r\n} from '@angular/animations';\r\n\r\n@Component({\r\n    selector: 'tag-ripple',\r\n    styles: [`\r\n        :host {\r\n            width: 100%;\r\n            height: 100%;\r\n            left: 0;\r\n            overflow: hidden;\r\n            position: absolute;\r\n        }\r\n\r\n        .tag-ripple {\r\n            background: rgba(0, 0, 0, 0.1);\r\n            top: 50%;\r\n            left: 50%;\r\n            height: 100%;\r\n            transform: translate(-50%, -50%);\r\n            position: absolute;\r\n        }\r\n    `],\r\n    template: `\r\n        <div class=\"tag-ripple\" [@ink]=\"state\"></div>\r\n    `,\r\n    animations: [\r\n        trigger('ink', [\r\n            state('none', style({width: 0, opacity: 0})),\r\n            transition('none => clicked', [\r\n                animate(300, keyframes([\r\n                    style({opacity: 1, offset: 0, width: '30%', borderRadius: '100%'}),\r\n                    style({opacity: 1, offset: 0.5, width: '50%'}),\r\n                    style({opacity: 0.5, offset: 1, width: '100%', borderRadius: '16px'})\r\n                ]))\r\n            ])\r\n        ])\r\n    ]\r\n})\r\nexport class TagRipple {\r\n    @Input() public state = 'none';\r\n}\r\n","import {\r\n    Component,\r\n    Input,\r\n    Output,\r\n    EventEmitter,\r\n    TemplateRef,\r\n    ElementRef,\r\n    HostListener,\r\n    HostBinding,\r\n    ViewChild,\r\n    ChangeDetectorRef,\r\n    Renderer2\r\n} from '@angular/core';\r\n\r\nimport { TagModel } from '../../core/accessor';\r\nimport { TagRipple } from '../tag/tag-ripple.component';\r\nimport { EventLike } from '../../core/helpers/event-like';\r\n\r\n// mocking navigator\r\nconst navigator = typeof window !== 'undefined' ? window.navigator : {\r\n    userAgent: 'Chrome',\r\n    vendor: 'Google Inc'\r\n};\r\n\r\nconst isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);\r\n\r\n@Component({\r\n    selector: 'tag',\r\n    templateUrl: './tag.template.html',\r\n    styleUrls: ['./tag-component.style.scss']\r\n})\r\nexport class TagComponent {\r\n    /**\r\n     * @name model {TagModel}\r\n     */\r\n    @Input()\r\n    public model: TagModel;\r\n\r\n    /**\r\n     * @name removable {boolean}\r\n     */\r\n    @Input()\r\n    public removable: boolean;\r\n\r\n    /**\r\n     * @name editable {boolean}\r\n     */\r\n    @Input()\r\n    public editable: boolean;\r\n\r\n    /**\r\n     * @name template {TemplateRef<any>}\r\n     */\r\n    @Input()\r\n    public template: TemplateRef<any>;\r\n\r\n    /**\r\n     * @name displayBy {string}\r\n     */\r\n    @Input()\r\n    public displayBy: string;\r\n\r\n    /**\r\n     * @name identifyBy {string}\r\n     */\r\n    @Input()\r\n    public identifyBy: string;\r\n\r\n    /**\r\n     * @name index {number}\r\n     */\r\n    @Input()\r\n    public index: number;\r\n\r\n    /**\r\n     * @name hasRipple\r\n     */\r\n    @Input()\r\n    public hasRipple: boolean;\r\n\r\n    /**\r\n     * @name disabled\r\n     */\r\n    @Input()\r\n    public disabled = false;\r\n\r\n    /**\r\n     * @name canAddTag\r\n     */\r\n    @Input()\r\n    public canAddTag: (tag: TagModel) => boolean;\r\n\r\n    /**\r\n     * @name onSelect\r\n     */\r\n    @Output()\r\n    public onSelect: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onRemove\r\n     */\r\n    @Output()\r\n    public onRemove: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onBlur\r\n     */\r\n    @Output()\r\n    public onBlur: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name onKeyDown\r\n     */\r\n    @Output()\r\n    public onKeyDown: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    /**\r\n     * @name onTagEdited\r\n     */\r\n    @Output()\r\n    public onTagEdited: EventEmitter<TagModel> = new EventEmitter<TagModel>();\r\n\r\n    /**\r\n     * @name readonly {boolean}\r\n     */\r\n    public get readonly(): boolean {\r\n        return typeof this.model !== 'string' && this.model.readonly === true;\r\n    }\r\n\r\n    /**\r\n     * @name editing\r\n     */\r\n    public editing = false;\r\n\r\n    /**\r\n     * @name moving\r\n     */\r\n    @HostBinding('class.moving')\r\n    public moving: boolean;\r\n\r\n    /**\r\n     * @name rippleState\r\n     */\r\n    public rippleState = 'none';\r\n\r\n    /**\r\n     * @name ripple {TagRipple}\r\n     */\r\n    @ViewChild(TagRipple)\r\n    public ripple: TagRipple;\r\n\r\n    constructor(\r\n        public element: ElementRef,\r\n        public renderer: Renderer2,\r\n        private cdRef: ChangeDetectorRef\r\n    ) {}\r\n\r\n    /**\r\n     * @name select\r\n     */\r\n    public select($event?: MouseEvent): void {\r\n        if (this.readonly || this.disabled) {\r\n            return;\r\n        }\r\n\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.focus();\r\n\r\n        this.onSelect.emit(this.model);\r\n    }\r\n\r\n    /**\r\n     * @name remove\r\n     */\r\n    public remove($event: MouseEvent): void {\r\n        $event.stopPropagation();\r\n        this.onRemove.emit(this);\r\n    }\r\n\r\n    /**\r\n     * @name focus\r\n     */\r\n    public focus(): void {\r\n        this.element.nativeElement.focus();\r\n    }\r\n\r\n    public move(): void {\r\n        this.moving = true;\r\n    }\r\n\r\n    /**\r\n     * @name keydown\r\n     * @param event\r\n     */\r\n    @HostListener('keydown', ['$event'])\r\n    public keydown(event: EventLike): void {\r\n        if (this.editing) {\r\n            if (event.keyCode === 13) {\r\n                return this.disableEditMode(event);\r\n            }\r\n        } else {\r\n            this.onKeyDown.emit({ event, model: this.model });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name blink\r\n     */\r\n    public blink(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        classList.add('blink');\r\n\r\n        setTimeout(() => classList.remove('blink'), 50);\r\n    }\r\n\r\n    /**\r\n     * @name toggleEditMode\r\n     */\r\n    public toggleEditMode(): void {\r\n        if (this.editable) {\r\n            return this.editing ? undefined : this.activateEditMode();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name onBlurred\r\n     * @param event\r\n     */\r\n    public onBlurred(event: any): void {\r\n        // Checks if it is editable first before handeling the onBlurred event in order to prevent\r\n        // a bug in IE where tags are still editable with onlyFromAutocomplete set to true\r\n        if (!this.editable) {\r\n            return;\r\n        }\r\n\r\n        this.disableEditMode();\r\n\r\n        const value: string = event.target.innerText;\r\n        const result =\r\n            typeof this.model === 'string'\r\n                ? value\r\n                : { ...this.model, [this.displayBy]: value };\r\n\r\n        this.onBlur.emit(result);\r\n    }\r\n\r\n    /**\r\n     * @name getDisplayValue\r\n     * @param item\r\n     */\r\n    public getDisplayValue(item: TagModel): string {\r\n        return typeof item === 'string' ? item : item[this.displayBy];\r\n    }\r\n\r\n    /**\r\n     * @desc returns whether the ripple is visible or not\r\n     * only works in Chrome\r\n     * @name isRippleVisible\r\n     */\r\n    public get isRippleVisible(): boolean {\r\n        return !this.readonly && !this.editing && isChrome && this.hasRipple;\r\n    }\r\n\r\n    /**\r\n     * @name disableEditMode\r\n     * @param $event\r\n     */\r\n    public disableEditMode($event?: EventLike): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        const input = this.getContentEditableText();\r\n\r\n        this.editing = false;\r\n        classList.remove('tag--editing');\r\n\r\n        if (!input) {\r\n            this.setContentEditableText(this.model);\r\n            return;\r\n        }\r\n\r\n        this.storeNewValue(input);\r\n        this.cdRef.detectChanges();\r\n\r\n        if ($event) {\r\n            $event.preventDefault();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name isDeleteIconVisible\r\n     */\r\n    public isDeleteIconVisible(): boolean {\r\n        return (\r\n            !this.readonly && !this.disabled && this.removable && !this.editing\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @name getContentEditableText\r\n     */\r\n    private getContentEditableText(): string {\r\n        const input = this.getContentEditable();\r\n\r\n        return input ? input.innerText.trim() : '';\r\n    }\r\n\r\n    /**\r\n     * @name setContentEditableText\r\n     * @param model\r\n     */\r\n    private setContentEditableText(model: TagModel) {\r\n        const input = this.getContentEditable();\r\n        const value = this.getDisplayValue(model);\r\n\r\n        input.innerText = value;\r\n    }\r\n\r\n    /**\r\n     * @name\r\n     */\r\n    private activateEditMode(): void {\r\n        const classList = this.element.nativeElement.classList;\r\n        classList.add('tag--editing');\r\n\r\n        this.editing = true;\r\n    }\r\n\r\n    /**\r\n     * @name storeNewValue\r\n     * @param input\r\n     */\r\n    private storeNewValue(input: string): void {\r\n        const exists = (tag: TagModel) => {\r\n            return typeof tag === 'string'\r\n                ? tag === input\r\n                : tag[this.displayBy] === input;\r\n        };\r\n\r\n        const hasId = () => {\r\n            return this.model[this.identifyBy] !== this.model[this.displayBy];\r\n        };\r\n\r\n        // if the value changed, replace the value in the model\r\n        if (exists(this.model)) {\r\n            return;\r\n        }\r\n\r\n        const model =\r\n            typeof this.model === 'string'\r\n                ? input\r\n                : {\r\n                      index: this.index,\r\n                      [this.identifyBy]: hasId()\r\n                          ? this.model[this.identifyBy]\r\n                          : input,\r\n                      [this.displayBy]: input\r\n                  };\r\n\r\n        if (this.canAddTag(model)) {\r\n            this.onTagEdited.emit({ tag: model, index: this.index });\r\n        } else {\r\n            this.setContentEditableText(this.model);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name getContentEditable\r\n     */\r\n    private getContentEditable(): HTMLInputElement {\r\n        return this.element.nativeElement.querySelector('[contenteditable]');\r\n    }\r\n}\r\n","<div (click)=\"select($event)\"\r\n     (dblclick)=\"toggleEditMode()\"\r\n     (mousedown)=\"rippleState='clicked'\"\r\n     (mouseup)=\"rippleState='none'\"\r\n     [ngSwitch]=\"!!template\"\r\n     [class.disabled]=\"disabled\"\r\n     [attr.tabindex]=\"-1\"\r\n     [attr.aria-label]=\"getDisplayValue(model)\">\r\n\r\n    <div *ngSwitchCase=\"true\" [attr.contenteditable]=\"editing\">\r\n        <!-- CUSTOM TEMPLATE -->\r\n        <ng-template\r\n            [ngTemplateOutletContext]=\"{ item: model, index: index }\"\r\n            [ngTemplateOutlet]=\"template\">\r\n        </ng-template>\r\n    </div>\r\n\r\n    <div *ngSwitchCase=\"false\" class=\"tag-wrapper\">\r\n        <!-- TAG NAME -->\r\n        <div [attr.contenteditable]=\"editing\"\r\n             [attr.title]=\"getDisplayValue(model)\"\r\n             class=\"tag__text inline\"\r\n             spellcheck=\"false\"\r\n             (keydown.enter)=\"disableEditMode($event)\"\r\n             (keydown.escape)=\"disableEditMode($event)\"\r\n             (click)=\"editing ? $event.stopPropagation() : undefined\"\r\n             (blur)=\"onBlurred($event)\">\r\n            {{ getDisplayValue(model) }}\r\n        </div>\r\n\r\n        <!-- 'X' BUTTON -->\r\n        <delete-icon\r\n            aria-label=\"Remove tag\"\r\n            role=\"button\"\r\n            (click)=\"remove($event)\"\r\n            *ngIf=\"isDeleteIconVisible()\">\r\n        </delete-icon>\r\n    </div>\r\n</div>\r\n\r\n<tag-ripple [state]=\"rippleState\"\r\n            [attr.tabindex]=\"-1\"\r\n            *ngIf=\"isRippleVisible\">\r\n</tag-ripple>\r\n","import { ControlValueAccessor } from '@angular/forms';\r\nimport { Input, Directive } from '@angular/core';\r\nimport { OptionsProvider } from './providers/options-provider';\r\nimport { TagInputDropdown } from '../components/dropdown/tag-input-dropdown.component';\r\n\r\nexport class TagModelClass {\r\n    [key: string]: any;\r\n}\r\n\r\nexport type TagModel = string | TagModelClass;\r\n\r\nexport function isObject(obj: any): boolean {\r\n    return obj === Object(obj);\r\n}\r\n\r\n@Directive()\r\nexport class TagInputAccessor implements ControlValueAccessor {\r\n    private _items: TagModel[] = [];\r\n    private _onTouchedCallback: () => void;\r\n    private _onChangeCallback: (items: TagModel[]) => void;\r\n\r\n    public dropdown: TagInputDropdown;\r\n\r\n    /**\r\n     * @name displayBy\r\n     */\r\n    @Input() public displayBy: string = OptionsProvider.defaults.tagInput.displayBy;\r\n\r\n    /**\r\n     * @name identifyBy\r\n     */\r\n    @Input() public identifyBy: string = OptionsProvider.defaults.tagInput.identifyBy;\r\n\r\n    public get items(): TagModel[] {\r\n        return this._items;\r\n    }\r\n\r\n    public set items(items: TagModel[]) {\r\n        this._items = items;\r\n        this._onChangeCallback(this._items);\r\n    }\r\n\r\n    public onTouched() {\r\n        this._onTouchedCallback();\r\n    }\r\n\r\n    public writeValue(items: any[]) {\r\n        this._items = items || [];\r\n    }\r\n\r\n    public registerOnChange(fn: any) {\r\n        this._onChangeCallback = fn;\r\n    }\r\n\r\n    public registerOnTouched(fn: any) {\r\n        this._onTouchedCallback = fn;\r\n    }\r\n\r\n    /**\r\n     * @name getItemValue\r\n     * @param item\r\n     * @param fromDropdown\r\n     */\r\n    public getItemValue(item: TagModel, fromDropdown = false): string {\r\n        const property = fromDropdown && this.dropdown ? this.dropdown.identifyBy : this.identifyBy;\r\n        return isObject(item) ? item[property] : item;\r\n    }\r\n\r\n    /**\r\n     * @name getItemDisplay\r\n     * @param item\r\n     * @param fromDropdown\r\n     */\r\n    public getItemDisplay(item: TagModel, fromDropdown = false): string {\r\n        const property = fromDropdown && this.dropdown ? this.dropdown.displayBy : this.displayBy;\r\n        return isObject(item) ? item[property] : item;\r\n    }\r\n\r\n    /**\r\n     * @name getItemsWithout\r\n     * @param index\r\n     */\r\n    protected getItemsWithout(index: number): TagModel[] {\r\n        return this.items.filter((item, position) => position !== index);\r\n    }\r\n}\r\n","/*\r\n** constants and default values for <tag-input>\r\n */\r\n\r\nexport const PLACEHOLDER = '+ Tag';\r\nexport const SECONDARY_PLACEHOLDER = 'Enter a new tag';\r\nexport const KEYDOWN = 'keydown';\r\nexport const KEYUP = 'keyup';\r\nexport const FOCUS = 'focus';\r\nexport const MAX_ITEMS_WARNING = 'The number of items specified was greater than the property max-items.';\r\n\r\nexport const ACTIONS_KEYS = {\r\n    DELETE: 'DELETE',\r\n    SWITCH_PREV: 'SWITCH_PREV',\r\n    SWITCH_NEXT: 'SWITCH_NEXT',\r\n    TAB: 'TAB'\r\n};\r\n\r\nexport const KEY_PRESS_ACTIONS = {\r\n    8: ACTIONS_KEYS.DELETE,\r\n    46: ACTIONS_KEYS.DELETE,\r\n    37: ACTIONS_KEYS.SWITCH_PREV,\r\n    39: ACTIONS_KEYS.SWITCH_NEXT,\r\n    9: ACTIONS_KEYS.TAB\r\n};\r\n\r\nexport const DRAG_AND_DROP_KEY = 'Text';\r\nexport const NEXT = 'NEXT';\r\nexport const PREV = 'PREV';\r\n\r\n","\r\n/**\r\n * @name listen\r\n * @param listenerType\r\n * @param action\r\n * @param condition\r\n */\r\nexport function listen(listenerType: string, action: () => any, condition = true): void {\r\n    // if the event provided does not exist, throw an error\r\n    if (!this.listeners.hasOwnProperty(listenerType)) {\r\n        throw new Error('The event entered may be wrong');\r\n    }\r\n\r\n    // if a condition is present and is false, exit early\r\n    if (!condition) {\r\n        return;\r\n    }\r\n\r\n    // fire listener\r\n    this.listeners[listenerType].push(action);\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\n\r\nconst escape = s => s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\r\n\r\n@Pipe({\r\n    name: 'highlight'\r\n})\r\nexport class HighlightPipe implements PipeTransform {\r\n    /**\r\n     * @name transform\r\n     * @param value {string}\r\n     * @param arg {string}\r\n     */\r\n    public transform(value: string, arg: string): string {\r\n        if (!arg.trim()) {\r\n            return value;\r\n        }\r\n\r\n        try {\r\n            const regex = new RegExp(`(${escape(arg)})`, 'i');\r\n            return value.replace(regex, '<b>$1</b>');\r\n        } catch (e) {\r\n            return value;\r\n        }\r\n    }\r\n}\r\n","import { TagInputComponent } from '../../components/tag-input/tag-input';\r\nimport { TagModel } from '../accessor';\r\n\r\nimport { Injectable } from '@angular/core';\r\n\r\nexport declare interface DraggedTag {\r\n    index: number;\r\n    tag: TagModel;\r\n    zone: string;\r\n}\r\n\r\nimport { DRAG_AND_DROP_KEY } from '../../core/constants';\r\n\r\nexport declare interface State {\r\n    dragging: boolean;\r\n    dropping: boolean;\r\n    index: number | undefined;\r\n}\r\n\r\nexport declare type StateProperty = keyof State;\r\n\r\n@Injectable()\r\nexport class DragProvider {\r\n    public sender: TagInputComponent;\r\n    public receiver: TagInputComponent;\r\n\r\n    public state: State = {\r\n        dragging: false,\r\n        dropping: false,\r\n        index: undefined\r\n    };\r\n\r\n    /**\r\n     * @name setDraggedItem\r\n     * @param event\r\n     * @param tag\r\n     */\r\n    public setDraggedItem(event: DragEvent, tag: DraggedTag): void {\r\n        if (event && event.dataTransfer) {\r\n            event.dataTransfer.setData(DRAG_AND_DROP_KEY, JSON.stringify(tag));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name getDraggedItem\r\n     * @param event\r\n     */\r\n    public getDraggedItem(event: DragEvent): DraggedTag | undefined {\r\n        if (event && event.dataTransfer) {\r\n            const data = event.dataTransfer.getData(DRAG_AND_DROP_KEY);\r\n            try {\r\n                return JSON.parse(data) as DraggedTag;\r\n            } catch {\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @name setSender\r\n     * @param sender\r\n     */\r\n    public setSender(sender: TagInputComponent): void {\r\n        this.sender = sender;\r\n    }\r\n\r\n    /**\r\n     * @name setReceiver\r\n     * @param receiver\r\n     */\r\n    public setReceiver(receiver: TagInputComponent): void {\r\n        this.receiver = receiver;\r\n    }\r\n\r\n    /**\r\n     * @name onTagDropped\r\n     * @param tag\r\n     * @param indexDragged\r\n     * @param indexDropped\r\n     */\r\n    public onTagDropped(tag: TagModel, indexDragged: number, indexDropped?: number): void {\r\n        this.onDragEnd();\r\n\r\n        this.sender.onRemoveRequested(tag, indexDragged);\r\n        this.receiver.onAddingRequested(false, tag, indexDropped);\r\n    }\r\n\r\n    /**\r\n     * @name setState\r\n     * @param state\r\n     */\r\n    public setState(state: { [K in StateProperty]?: State[K] }): void {\r\n        this.state = { ...this.state, ...state };\r\n    }\r\n\r\n    /**\r\n     * @name getState\r\n     * @param key\r\n     */\r\n    public getState(key?: StateProperty): State | State[StateProperty] {\r\n        return key ? this.state[key] : this.state;\r\n    }\r\n\r\n    /**\r\n     * @name onDragEnd\r\n     */\r\n    public onDragEnd(): void {\r\n        this.setState({\r\n            dragging: false,\r\n            dropping: false,\r\n            index: undefined\r\n        });\r\n    }\r\n}\r\n","import { defaults, TagInputOptions, TagInputDropdownOptions } from '../../defaults';\r\n\r\nexport type Options = {\r\n    tagInput?: {\r\n        [P in keyof TagInputOptions]?: TagInputOptions[P];\r\n    };\r\n    dropdown?: {\r\n        [P in keyof TagInputDropdownOptions]?: TagInputDropdownOptions[P];\r\n    }\r\n};\r\n\r\nexport class OptionsProvider {\r\n    public static defaults = defaults;\r\n\r\n    public setOptions(options: Options): void {\r\n        OptionsProvider.defaults.tagInput = {...defaults.tagInput, ...options.tagInput};\r\n        OptionsProvider.defaults.dropdown = {...defaults.dropdown, ...options.dropdown};\r\n    }\r\n}\r\n\r\nexport { TagInputDropdownOptions, TagInputOptions };\r\n","import { Observable } from 'rxjs';\r\nimport { ValidatorFn, AsyncValidatorFn } from '@angular/forms';\r\n\r\nimport { SECONDARY_PLACEHOLDER, PLACEHOLDER } from './core/constants/index';\r\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\r\nimport { TagModel } from './core/accessor';\r\n\r\nexport interface TagInputOptions {\r\n    separatorKeys: string[];\r\n    separatorKeyCodes: number[];\r\n    maxItems: number;\r\n    placeholder: string;\r\n    secondaryPlaceholder: string;\r\n    validators: ValidatorFn[];\r\n    asyncValidators: AsyncValidatorFn[];\r\n    onlyFromAutocomplete: boolean;\r\n    errorMessages: { [key: string]: string; };\r\n    theme: '';\r\n    onTextChangeDebounce: number;\r\n    inputId: string | null;\r\n    inputClass: string;\r\n    clearOnBlur: boolean;\r\n    hideForm: boolean;\r\n    addOnBlur: boolean;\r\n    addOnPaste: boolean;\r\n    pasteSplitPattern: string | RegExp;\r\n    blinkIfDupe: boolean;\r\n    removable: boolean;\r\n    editable: boolean;\r\n    allowDupes: boolean;\r\n    modelAsStrings: boolean;\r\n    trimTags: boolean;\r\n    ripple: boolean;\r\n    tabIndex: string;\r\n    disable: boolean;\r\n    dragZone: string;\r\n    onRemoving?: (tag: TagModel) => Observable<TagModel>;\r\n    onAdding?: (tag: TagModel) => Observable<TagModel>;\r\n    displayBy: string;\r\n    identifyBy: string;\r\n    animationDuration: {\r\n        enter: string,\r\n        leave: string\r\n    };\r\n}\r\n\r\nexport interface TagInputDropdownOptions {\r\n    displayBy: string;\r\n    identifyBy: string;\r\n    appendToBody: boolean;\r\n    offset: string;\r\n    focusFirstElement: boolean;\r\n    showDropdownIfEmpty: boolean;\r\n    minimumTextLength: number;\r\n    limitItemsTo: number;\r\n    keepOpen: boolean;\r\n    zIndex: number;\r\n    dynamicUpdate: boolean;\r\n    matchingFn: (value: string, target: TagModel) => boolean;\r\n}\r\n\r\nexport const defaults = {\r\n    tagInput: <TagInputOptions>{\r\n        separatorKeys: [],\r\n        separatorKeyCodes: [],\r\n        maxItems: Infinity,\r\n        placeholder: PLACEHOLDER,\r\n        secondaryPlaceholder: SECONDARY_PLACEHOLDER,\r\n        validators: [],\r\n        asyncValidators: [],\r\n        onlyFromAutocomplete: false,\r\n        errorMessages: {},\r\n        theme: '',\r\n        onTextChangeDebounce: 250,\r\n        inputId: null,\r\n        inputClass: '',\r\n        clearOnBlur: false,\r\n        hideForm: false,\r\n        addOnBlur: false,\r\n        addOnPaste: false,\r\n        pasteSplitPattern: ',',\r\n        blinkIfDupe: true,\r\n        removable: true,\r\n        editable: false,\r\n        allowDupes: false,\r\n        modelAsStrings: false,\r\n        trimTags: true,\r\n        ripple: true,\r\n        tabIndex: '',\r\n        disable: false,\r\n        dragZone: '',\r\n        onRemoving: undefined,\r\n        onAdding: undefined,\r\n        displayBy: 'display',\r\n        identifyBy: 'value',\r\n        animationDuration: {\r\n            enter: '250ms',\r\n            leave: '150ms'\r\n        }\r\n    },\r\n    dropdown: <TagInputDropdownOptions>{\r\n        displayBy: 'display',\r\n        identifyBy: 'value',\r\n        appendToBody: true,\r\n        offset: '50 0',\r\n        focusFirstElement: false,\r\n        showDropdownIfEmpty: false,\r\n        minimumTextLength: 1,\r\n        limitItemsTo: Infinity,\r\n        keepOpen: true,\r\n        dynamicUpdate: true,\r\n        zIndex: 1000,\r\n        matchingFn\r\n    }\r\n};\r\n\r\n/**\r\n * @name matchingFn\r\n * @param this\r\n * @param value\r\n * @param target\r\n */\r\nfunction matchingFn(this: TagInputDropdown, value: string, target: TagModel): boolean {\r\n    const targetValue = target[this.displayBy].toString();\r\n\r\n    return targetValue && targetValue\r\n        .toLowerCase()\r\n        .indexOf(value.toLowerCase()) >= 0;\r\n}\r\n","export { TagInputModule } from './tag-input.module';\r\nexport {\r\n    TagInputDropdown, DeleteIconComponent, TagInputForm, TagRipple, TagComponent, TagInputComponent\r\n} from './components/index';\r\n","import { NgModule } from '@angular/core';\r\nimport { ReactiveFormsModule, FormsModule, COMPOSITION_BUFFER_MODE } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Ng2DropdownModule } from 'ng2-material-dropdown';\r\nimport { HighlightPipe } from './core/pipes/highlight.pipe';\r\nimport { DragProvider } from './core/providers/drag-provider';\r\nimport { OptionsProvider, Options } from './core/providers/options-provider';\r\nimport { TagInputComponent } from './components/tag-input/tag-input';\r\nimport { DeleteIconComponent } from './components/icon/icon';\r\nimport { TagInputForm } from './components/tag-input-form/tag-input-form.component';\r\nimport { TagComponent } from './components/tag/tag.component';\r\nimport { TagInputDropdown } from './components/dropdown/tag-input-dropdown.component';\r\nimport { TagRipple } from './components/tag/tag-ripple.component';\r\n\r\nconst optionsProvider = new OptionsProvider();\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        FormsModule,\r\n        Ng2DropdownModule\r\n    ],\r\n    declarations: [\r\n        TagInputComponent,\r\n        DeleteIconComponent,\r\n        TagInputForm,\r\n        TagComponent,\r\n        HighlightPipe,\r\n        TagInputDropdown,\r\n        TagRipple\r\n    ],\r\n    exports: [\r\n        TagInputComponent,\r\n        DeleteIconComponent,\r\n        TagInputForm,\r\n        TagComponent,\r\n        HighlightPipe,\r\n        TagInputDropdown,\r\n        TagRipple\r\n    ],\r\n    providers: [\r\n        DragProvider,\r\n        { provide: COMPOSITION_BUFFER_MODE, useValue: false },\r\n    ]\r\n})\r\nexport class TagInputModule {\r\n    /**\r\n     * @name withDefaults\r\n     * @param options {Options}\r\n     */\r\n    public static withDefaults(options: Options): void {\r\n        optionsProvider.setOptions(options);\r\n    }\r\n}\r\n"],"sourceRoot":"webpack:///"}